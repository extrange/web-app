{"version":3,"sources":["app/load-service-worker/LoadServiceWorker.js","shared/util.js","shared/useAsyncError.js","app/error-boundary/ErrorBoundary.js","app/theme.js","shared/components/randomBackground.js","shared/components/backgroundScreen.js","app/constants.js","app/network-core/baseQuery.js","app/network-core/baseApi.js","app/auth/authApi.js","app/appSlice.js","shared/components/loading.js","app/auth/Login.js","shared/useInput.js","app/refresh-session/RefreshSession.js","modules/Hmail/hmailApi.js","app/notifications/notificationSlice.js","modules/Hmail/hmailActions.js","modules/Hmail/Hmail.js","modules/Testing/testingApi.js","modules/Testing/util.js","modules/Testing/Testing.js","modules/PasswordTools/passwordUtil.js","modules/PasswordTools/passwordToolsApi.js","modules/PasswordTools/PasswordTools.js","modules/HomeAutomation/homeAutomationApi.js","modules/HomeAutomation/HomeAutomation.js","shared/components/textFieldClearableInfo.js","modules/OptionHedgeCalculator/TextFieldClearableInfoCurrency.js","modules/OptionHedgeCalculator/FieldUseWatch.js","modules/OptionHedgeCalculator/optionHedgeCalculatorApi.js","modules/OptionHedgeCalculator/OptionHedgeCalculator.js","modules/OptionHedgeCalculator/textFieldRefreshLoading.js","shared/components/styledListItem.js","modules/Lists/listApi.js","modules/Lists/List.js","shared/components/dialogBlurResponsive.js","shared/components/MarkdownEditor/scrollPastEnd.js","shared/components/MarkdownEditor/MarkdownEditor.js","shared/useAutosave.js","modules/Lists/listsSlice.js","modules/Lists/EditItem.js","modules/Lists/Item.js","modules/Lists/ListItems.js","modules/Lists/Lists.js","app/modules/modules.js","app/modules/ModuleSelect.js","app/notifications/NotificationMenu.js","app/app-bar/AppBarDrawer.js","app/app-bar/AppBarNetworkLoading.js","app/app-bar/AppBar.js","app/App.js","app/network-error/networkErrorMiddleware.js","app/network-loading/networkLoadingMiddleware.js","app/store.js","shared/components/AlertSnackbarWithDialog.js","app/network-error/NetworkError.js","index.js"],"names":["Component","formatDistanceToNowPretty","date","differenceInMinutes","Date","formatDistanceToNow","addSuffix","differenceInCalendarDays","formatDistanceToNowStrict","differenceInCalendarYears","format","isLocalhost","Boolean","window","location","hostname","match","noop","stripHtml","html","DOMParser","parseFromString","body","textContent","stripUndefined","obj","isPlainObject","copy","Object","entries","k","hasServiceWorker","navigator","wb","Workbox","NoServiceWorker","useState","sbOpen","setSbOpen","Snackbar","open","onClose","autoHideDuration","Alert","severity","LoadServiceWorker","intervalId","useRef","registration","text","actions","undefined","details","setDetails","setError","useCallback","e","Error","useAsyncError","reloadPage","reload","onInstalled","event","isUpdate","console","log","onControlling","onActivated","onUpdate","current","waiting","Button","variant","color","onClick","messageSW","type","clearInterval","onError","error","toString","useEffect","addEventListener","register","then","r","catch","setInterval","update","ClickAwayListenerProps","onClickAway","action","StyledDialog","muiStyled","Dialog","theme","zIndex","snackbar","ErrorBoundary","props","setDialogOpen","state","setState","dialogOpen","errorInfo","this","scroll","DialogTitle","DialogContent","DialogContentText","componentStack","DialogActions","children","createMuiTheme","palette","primary","main","secondary","OverlayScrollbarOptions","className","overflowBehavior","x","scrollbars","autoHide","RandomBackgroundImage","styled","div","$picIndex","getPicIndex","min","max","seed","Math","ceil","floor","rng","seedrandom","getRandomInt","NUM_IMAGES","RandomBackground","picIndex","setPicIndex","listener","removeEventListener","BACKGROUND_COLOR","BackgroundScreen","BackgroundScreenRounded","NETWORK_ERROR","defaultValidateStatus","response","status","responseHandler","headers","get","trim","startsWith","json","joinUrl","base","url","replace","baseQuery","baseUrl","defaultHeaders","prepareHeaders","fetchFn","fetch","baseFetchOptions","a","arg","signal","getState","method","Headers","params","validateStatus","config","JSON","stringify","divider","indexOf","query","URLSearchParams","request","Request","requestClone","clone","responseClone","meta","resultData","data","name","message","baseApi","createApi","reducerPath","credentials","endpoints","authApi","injectEndpoints","build","checkLogin","login","mutation","logout","useCheckLoginQuery","useLoginMutation","useRecaptchaKeyQuery","useLogoutMutation","appSliceName","handleLoginFulfilled","payload","user","expiry","isSuperUser","is_superuser","recaptchaKey","recaptcha_key","loginStatus","loggedIn","appSlice","createSlice","initialState","module","id","networkError","pendingNetworkActions","reducers","setNetworkError","includes","clearNetworkError","setCurrentModule","setAppBar","drawerOpen","appBar","addNetworkAction","push","removeNetworkAction","splice","extraReducers","builder","addMatcher","matchFulfilled","isAllOf","matchRejected","isRejectedWithValue","localStorage","clear","selectLoginStatus","selectNetworkError","selectCurrentModule","selectPendingNetworkActions","StyledBackdrop","Backdrop","drawer","FlexContainer","FlexBackgroundScreen","Loading","showSpinner","fullscreen","content","CircularProgress","size","Typography","display","StyledForm","form","InnerContainer","StyledTextField","TextField","Spacer","StyledCircularProgress","Login","dispatch","useDispatch","useSelector","isLoading","refetchOnMountOrArgChange","isFetching","isError","initialValues","reducer","value","useReducer","values","setValue","onChange","target","bind","useInput","recaptchaRef","React","loginMessage","setLoginMessage","otpRequired","setOtpRequired","onSubmit","preventDefault","executeAsync","token","username","password","otp","save_browser","saveBrowser","res","otp_required","reset","gutterBottom","align","label","fullWidth","required","autoFocus","autoComplete","inputMode","pattern","FormControlLabel","control","Checkbox","checked","ref","sitekey","RefreshSession","pollingInterval","refetchOnReconnect","hmailApi","checkIhisMail","checkMohhMail","useCheckIhisMailQuery","useCheckMohhMailQuery","notificationsSliceName","shape","notificationSlice","addNotifications","every","item","keys","validateShape","prepare","nanoid","timestamp","now","Array","isArray","map","removeNotification","filter","removeNotificationsFromSource","source","selectNotificationsSorted","createSelector","items","slice","sort","b","handleMailAction","parseJSON","title","isToday","from","join","preview","getTime","Hmail","ihisMail","mohhMail","testingApi","throwHttpError","throwFetchError","queryFn","api","extraOptions","useThrowHttpErrorMutation","useThrowFetchErrorMutation","throwAsyncThunkReject","createAsyncThunk","throwAsyncThunkRejectWithValue","rejectWithValue","StyledDiv","DIGITS_REGEX","LOWER_REGEX","UPPER_REGEX","SYMBOLS_REGEX","DIGITS","LOWER","UPPER","SYMBOLS","secureRandom","crypto","arr","Uint32Array","random","val","getRandomValues","randint","floor_min","floor_max","choice","length","getSecureRandom","formatNumber","Intl","NumberFormat","maximumFractionDigits","maximumSignificantDigits","getEntropy","hasDigits","test","hasLowerCase","hasUpperCase","hasSymbols","totalSymbols","bitsPerChar","log2","totalEntropy","generatePassword","digits","lower","upper","symbols","charSet","generate","getSha1Hash","msgUint8","TextEncoder","encode","subtle","digest","hashBuffer","hashArray","Uint8Array","padStart","toUpperCase","generateUsername","vowels","cons","num_vowels","num_cons","i","substr","useHibpLookupMutation","hibpLookup","hash","Container","TextFieldContainer","StyledIconButton","IconButton","OptionsFormGroup","FormGroup","PasswordDetailGrid","GreenCheck","CheckIcon","GreyCross","ClearIcon","formatDecimal","useSendCommandMutation","sendCommand","command","StyledContainer","COMMANDS","gate_toggle","ac_off","ac_on_24","ac_on_25","ceiling_fan_on","ceiling_fan_off","dyson_fan_on","dyson_fan_off","TextFieldClearableInfo","info","InputProps","endAdornment","InputAdornment","position","style","cursor","Tooltip","arrow","enterTouchDelay","interactive","tabIndex","CleaveTextField","inputRef","htmlRef","FieldUseWatch","fieldsToWatch","fields","useWatch","useGetSpyPriceQuery","getSpyPrice","FIELDS","emptyStringToUndefined","origVal","schema","yup","portfolioValue","positive","transform","spyPrice","hedgeRatio","delta","StyledTypography","StyledTextFieldClearableInfo","StyledTextFieldRefresh","onRefresh","loading","tooltipText","onOpen","StyledTextFieldClearableInfoCurrency","InputLabelProps","shrink","inputComponent","inputProps","options","numeral","prefix","rawValueTrimPrefix","rawValue","formatNoDecimals","formatDecimals","formatDollars","currency","currencyDisplay","StyledListItem","ListItem","$hideBackground","breakpoints","up","$reserveSpace","StyledListItemSecondaryAction","ListItemSecondaryAction","ItemSkeleton","ListItemText","Skeleton","animation","width","enhanceEndpoints","addTagTypes","listApi","getLists","providesTags","createList","invalidatesTags","updateList","onQueryStarted","queryFulfilled","result","util","updateQueryData","draft","find","assign","undo","deleteList","getItems","list","_result","_error","createItem","notes","tasklist","unshift","isSkeleton","idx","findIndex","updateItem","deleteItem","useGetListsQuery","useCreateListMutation","useUpdateListMutation","useDeleteListMutation","useGetItemsQuery","useCreateItemMutation","useUpdateItemMutation","useDeleteItemMutation","List","anchorEl","setAnchorEl","stopPropagation","func","button","MenuItem","newTitle","prompt","primaryTypographyProps","noWrap","edge","currentTarget","$maxWidth","down","StyledOverlayScrollbarsComponent","OverlayScrollbarsComponent","DialogBlurResponsive","footer","maxWidth","disableScrollLock","updateBottomMargin","cm","padding","lineCount","scrollPastEndPadding","lineSpace","parentNode","paddingBottom","off","setSize","on","change","CodeMirror","changeEnd","line","lastLine","defineOption","old","Init","MarkdownEditor","defaultValue","instance","setInstance","initialValue","setInitialValue","loaded","setLoaded","refresh","mode","highlightFormatting","lineNumbers","lineWrapping","indentWithTabs","viewportMargin","Infinity","autoCloseBrackets","matchBrackets","styleSelectedText","styleActiveLine","autoRefresh","scrollPastEnd","editorDidMount","editor","newValue","defaultState","pendingData","creationInProgress","flushing","listsSliceName","listsSlice","currentList","setCurrentList","selectCurrentList","FooterRight","Footer","EditItem","closeEdit","editingItem","useTheme","fullScreen","useMediaQuery","currentListId","isLoadingCreateItem","createItemStarted","startedTimeStamp","isLoadingUpdateItem","updateItemStarted","isLoadingDeleteItem","itemIsEmpty","wait","maxWait","updateOrDelete","_onChange","newId","debounce","flush","useAutosave","useMemo","unwrap","initialTitle","initialNotes","useForm","defaultValues","getValues","lastSavedTimeString","updated","lastCreatedTimeString","created","multiline","newVal","Item","setEditingItem","secondaryTypographyProps","StyledFab","Fab","ListItems","virtuosoRef","skip","scrollToIndex","behavior","disablePadding","dense","totalCount","itemContent","index","components","forwardRef","listRef","StyledButton","margin","MODULES","LISTS","menuName","onlySuperUser","element","setDrawerContent","setTitleContent","lists","isLoadingLists","refetchLists","refetch","isFetchingGetItems","refetchItems","disabled","PASSWORDS","lookupHibp","hashCount","count","dialogType","passwordSettings","usernameSettings","settings","setSettings","setUsername","setPassword","snackbarOpen","setSnackbarOpen","entropy","setEntropy","secondsToBruteforce","generatedPassword","seconds","checkHibp","passwordStr","copyToClipboard","clipboard","writeText","setTimeout","onPasswordChange","closeSettings","Slider","step","FormControl","anchorOrigin","vertical","horizontal","helperText","Number","isFinite","formatDistance","HOME_AUTOMATION","setSnackbar","setDisabled","InputLabel","Select","v","OPTION_HEDGE_CALCULATOR","fulfilledTimeStamp","setTooltipText","resolver","yupResolver","c","shouldValidate","render","field","fieldState","TEST","ModuleSelect","modules","endIcon","StyledChip","Chip","StyledPopover","Popover","StyledSpan","NotificationMenu","notifications","Badge","badgeContent","Fragment","disableTypography","Divider","OverlayScrollbarsWithMaxWidth","$width","AppNameDiv","TransparentDrawer","Drawer","$transparent","AppBarDrawer","drawerWidth","setDrawerOpen","sidebarName","mobile","closeAppBar","ListItemIcon","AppBarNetworkLoading","TransparentAppBar","MuiAppBar","marginLeft","DrawerContainer","flexShrink","ContentContainer","ContentDiv","AppBar","trigger","useScrollTrigger","threshold","drawerContent","setSidebarName","titleContent","appBarProps","useLayoutEffect","Slide","direction","in","Toolbar","flex","createElement","App","networkErrorMiddleware","next","isRejected","condition","warn","networkLoadingMiddleware","isPending","requestId","isAnyOf","isFulfilled","store","configureStore","appPath","notificationsPath","listsPath","middleware","getDefaultMiddleware","concat","setupListeners","AlertSnackbarWithDialog","snackbarText","dialogTitle","dialogContent","dialogEnabled","component","whiteSpace","fontSize","NetworkError","Promise","resolve","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.0ed6fc7a.chunk.js","sourcesContent":["import {messageSW, Workbox} from \"workbox-window\";\nimport {useEffect, useRef, useState} from 'react';\nimport {Button, Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {useAsyncError} from \"../../shared/useAsyncError\";\nimport {isLocalhost, noop} from \"../../shared/util\";\n\n// https://developers.google.com/web/tools/workbox/modules/workbox-window#important_service_worker_lifecycle_moments\n\nconst hasServiceWorker = () => 'serviceWorker' in navigator;\n\n// Workbox() calls navigator.serviceWorker which is undefined in Firefox private browsing.\nconst wb = hasServiceWorker() ? new Workbox('./service-worker.js') : null;\n\nconst NoServiceWorker = () => {\n    const [sbOpen, setSbOpen] = useState(true);\n\n    return <Snackbar\n        open={sbOpen}\n        onClose={() => setSbOpen(false)}\n        autoHideDuration={3000}>\n        <Alert\n            severity={'info'}\n            onClose={() => setSbOpen(false)}>\n            {'load-service-worker is not supported in your browser'}\n        </Alert>\n    </Snackbar>\n};\n\nconst withBrowserCheck = Component => {\n    return hasServiceWorker()\n    ? Component\n    : NoServiceWorker;\n};\n\n\nconst ServiceWorkerMain = () => {\n\n    const intervalId = useRef();\n    const registration = useRef({});\n    const [sbOpen, setSbOpen] = useState(false);\n    const [details, setDetails] = useState({\n        text: '',\n        severity: 'info',\n        actions: undefined,\n        autoHideDuration: 3000,\n    });\n\n    const setError = useAsyncError();\n\n    const reloadPage = () => {\n        setSbOpen(false);\n        window.location.reload()\n    };\n\n    const onInstalled = (event) => {\n        //\n        if (!event.isUpdate) {\n            setSbOpen(true);\n            setDetails({\n                text: 'Site is now available offline.',\n                severity: 'info',\n                autoHideDuration: 3000,\n            });\n            console.log('Installed, isUpdate false');\n        } else\n            console.log('Installed, isUpdate true')\n    };\n\n    const onControlling = event => {\n        if (event.isUpdate)\n            console.log('Controlling, isUpdate false');\n        else\n            console.log('Controlling, isUpdate true')\n    };\n\n    const onActivated = event => {\n        if (event.isUpdate)\n            console.log('Activated, isUpdate false');\n        else\n            console.log('Activated, isUpdate true')\n    };\n\n    const onUpdate = () => {\n        /*Deactivates the previous service worker and starts running the new one, ready for requests\n        * Regardless of the user's decision, the next reload will result in a new page.\n        * The new sw instance must be messaged for this to work.\n        * This is obtained from 'registration' set during registration of the new sw.\n        * For some reason wb.messageSW messages the old SW instead.*/\n        if (registration.current?.waiting) {\n            //Prompt user\n            setSbOpen(true);\n            setDetails({\n                text: 'Site has been updated. Reload page?',\n                severity: 'info',\n                autoHideDuration: null,\n                actions: <>\n                    <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={() => setSbOpen(false)}\n                    >No</Button>\n                    <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={reloadPage}\n                    >Yes</Button>\n                </>\n            });\n\n            messageSW(registration.current.waiting, {type: 'SKIP_WAITING'});\n            clearInterval(intervalId.current);\n            console.log('Waiting for activation, newer version available');\n        }\n    };\n\n    const onError = error => {\n        setSbOpen(true);\n        setDetails({\n            text: `Service worker update failed: ${error.toString()}`,\n            autoHideDuration: null,\n            severity: 'error',\n        });\n        console.log('Service worker update failed: ', error)\n    };\n\n    const onLocalhost = () => {\n        setSbOpen(true);\n        setDetails({\n            text: 'On localhost, service worker registration skipped',\n            autoHideDuration: 3000,\n            severity: 'info'\n        });\n        console.log('On localhost, service worker registration skipped.')\n    };\n\n    useEffect(() => {\n\n        // Skip SW registration if on localhost\n        if (isLocalhost) {\n            onLocalhost();\n            return;\n        }\n\n\n        wb.addEventListener('controlling', onControlling);\n        wb.addEventListener('activated', onActivated);\n        wb.addEventListener('installed', onInstalled);\n        wb.addEventListener('waiting', onUpdate);\n        wb.addEventListener('externalwaiting', onUpdate); // Any other different version\n\n        // Throw errors during registration\n        wb.register().then(r => registration.current = r).catch(e => setError(e));\n\n        // Service worker updates are checked on initial load\n        intervalId.current = setInterval(() => {\n            console.log('Checking for service worker updates...');\n\n            // Show snackbar on update failure, rather than throwing error\n            wb.update().catch(onError)\n        }, 5 * 60 * 1000);\n\n        // eslint-disable-next-line\n    }, []);\n\n    return <Snackbar\n        open={sbOpen}\n        ClickAwayListenerProps={{onClickAway: noop}}\n        onClose={() => setSbOpen(false)}\n        autoHideDuration={details.autoHideDuration}>\n        <Alert\n            severity={details.severity}\n            action={details.actions}\n            onClose={() => setSbOpen(false)}>\n            {details.text}\n        </Alert>\n    </Snackbar>;\n};\n\nexport const LoadServiceWorker = withBrowserCheck(ServiceWorkerMain);","/**\n * Utility functions.\n * Larger functions should be in their own file.\n */\nimport removeAccents from \"remove-accents\"\nimport seedrandom from 'seedrandom'\nimport {\n    differenceInCalendarDays,\n    differenceInCalendarYears,\n    differenceInMinutes,\n    format,\n    formatDistanceToNow,\n    formatDistanceToNowStrict\n} from \"date-fns\";\nimport UAParser from \"ua-parser-js\";\nimport {isPlainObject} from \"@reduxjs/toolkit\";\n\n/**\n * Strip accents, empty spaces and lowercase a string (for comparison purposes)\n * undefined/null returns an empty string\n * @param {String} string\n */\nexport const sanitizeString = string =>\n    string ? removeAccents(string).trim().toLowerCase() : ''\n;\n\nexport const isEmpty = string => !Boolean(string?.trim());\n\n/**\n * Returns a seeded random number between min (inclusive) and max (exclusive)\n * @param min\n * @param max\n * @param seed\n */\nexport const getRandomInt = (min, max, seed) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    let rng = seedrandom(seed);\n    return Math.floor(rng() * (max - min) + min)\n};\n\n/**\n * Days since Unix Epoch\n * Works properly so far (i.e. day count changes at 0000hrs of current locale)\n * @returns {number}\n */\nexport const getDaysSinceEpoch = () =>\n    differenceInCalendarDays(new Date(), new Date(0));\n\n/**\n * Returns formatDateToNow if within the same minute,\n * otherwise returns formatDistanceToNowStrict if within same calendar day,\n * otherwise returns date like 18 Apr if same calendar year,\n * otherwise like Apr 2021\n * @param date\n */\nexport const formatDistanceToNowPretty = date => {\n    if (differenceInMinutes(new Date(), date) < 1)\n        return formatDistanceToNow(date, {addSuffix: true});\n    if (differenceInCalendarDays(new Date(), date) < 1)\n        return formatDistanceToNowStrict(date, {addSuffix: true});\n    if (differenceInCalendarYears(new Date(), date) < 1)\n        return format(date, 'd MMM');\n    return format(date, 'MMM y')\n};\n\nexport const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport const noop = () => {\n};\n\n/**\n * Cryptographically secure random number generator.\n * Assumes window.crypto exists.\n */\nexport const getSecureRandom = () => {\n    if (!window.crypto) throw new Error('window.crypto not supported on browser');\n\n    let arr = new Uint32Array(1);\n    const max = 2 ** 32;\n\n    /*Will generate random numbers between 0 and 1 (exclusive) with 32 bit maximum precision\n    * Rejection sampling.*/\n    const random = () => {\n        let val = crypto.getRandomValues(arr)[0] / max;\n        if (val >= 1) return random();\n        return val\n    };\n\n    /*Random integer between min (inclusive) and max (exclusive)*/\n    const randint = (min, max) => {\n        let floor_min = Math.floor(min);\n        let floor_max = Math.floor(max);\n        return Math.floor(random() * (floor_max - floor_min)) + floor_min\n    };\n\n    /*Select random element of an array*/\n    const choice = arr => arr[randint(0, arr.length)];\n\n    return {\n        random,\n        randint,\n        choice,\n    }\n};\n\nexport const prettifyUAString = uaString => {\n    let ua = UAParser(uaString);\n    let {\n        browser: {\n            name: browserName,\n        },\n        // if type is set, it is mobile\n        device: {model, type},\n        os: {name: osName, version: osVersion}\n    } = ua;\n\n    return {\n        name: `${browserName} on ${osName} ${osVersion}${model ? ` (${model})` : ''}`,\n        isMobile: Boolean(type),\n        browserName\n    }\n};\n\nexport const stripHtml = html => {\n   let doc = new DOMParser().parseFromString(html, 'text/html');\n   return doc.body.textContent || \"\";\n}\n\n/*Copied from RTKQ's fetchBaseQuery.\n* Will not affect non-objects such as classes.*/\nexport const stripUndefined = obj => {\n    if (!isPlainObject(obj)) {\n        return obj\n    }\n    const copy = {...obj}\n    for (const [k, v] of Object.entries(copy)) {\n        if (typeof v === 'undefined') delete copy[k]\n    }\n    return copy\n}","import {useState} from 'react'\nimport {useCallback} from \"react\";\n\n/*Workaround to throw errors in callbacks to ErrorBoundaries*/\nexport const useAsyncError = () => {\n    const setError = useState(null)[1];\n\n    return useCallback(e => setError(() => {\n        if (e instanceof Error){ //Subclasses of Error also return true\n            throw e\n        } else {\n            throw new Error(e)\n        }\n\n    }), [setError])\n};","import {Component} from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Snackbar,\n    styled as muiStyled\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst StyledDialog = muiStyled(Dialog)(({theme}) => ({\n    /*As zIndex is set inline in Dialog, style must be overridden with !important*/\n    zIndex: `${theme.zIndex.snackbar + 1} !important`,\n}));\n\n/*Catch-all for any application errors*/\nexport class ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false,\n            errorInfo: null,\n            dialogOpen: false,\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error: error};\n    }\n\n    setDialogOpen = state => this.setState({dialogOpen: state});\n\n    componentDidCatch(error, errorInfo) {\n        /*Errors are not logged currently*/\n    }\n\n    render() {\n        return this.state.error\n            ? <>\n                <StyledDialog\n                    open={this.state.dialogOpen}\n                    onClose={() => this.setDialogOpen(false)}\n                    scroll={'body'}\n                >\n\n                    <DialogTitle>{this.state.error.toString()}</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>{this.state.errorInfo?.componentStack}</DialogContentText>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            variant={'text'}\n                            color={'primary'}\n                            onClick={() => this.setDialogOpen(false)}\n                        >Close\n                        </Button>\n                    </DialogActions>\n\n                </StyledDialog>\n                <Snackbar open>\n                    <Alert\n                        severity={'error'}\n                        action={<>\n                            <Button\n                                variant={'text'}\n                                color={'primary'}\n                                onClick={() => this.setDialogOpen(true)}\n                            >Details</Button>\n                            <Button\n                                variant={'text'}\n                                color={'primary'}\n                                onClick={() => window.location.reload()\n                                }\n                            >Reload</Button>\n                        </>\n                        }>\n                        Application Error\n                    </Alert>\n                </Snackbar>\n            </>\n            : this.props.children\n    }\n\n}","import {unstable_createMuiStrictModeTheme as createMuiTheme} from \"@material-ui/core/styles\"; //todo replace with v5 when out\n\nexport const theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#f48fb1',\n        },\n    }\n});\n\nexport const OverlayScrollbarOptions = {\n    className: 'os-theme-light',\n    overflowBehavior: {\n        x: 'hidden'\n    },\n    scrollbars: {\n        autoHide: 'move',\n    }\n};","import styled from \"styled-components\";\nimport {getDaysSinceEpoch, getRandomInt} from \"../util\";\nimport {useCallback, useEffect, useState} from \"react\";\n\n/*Largest index of background images, inclusive*/\nconst NUM_IMAGES = 90;\n\nconst RandomBackgroundImage = styled.div`\n  background: url(${({$picIndex}) => `/bg/${$picIndex}.jpg`}) top/cover;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: -1;\n`;\n\n/*Get the latest pic index on window focus (setTimeout is unreliable*/\nconst getPicIndex = () => getRandomInt(1, NUM_IMAGES + 1, getDaysSinceEpoch());\n\nexport const RandomBackground = () => {\n\n    const [picIndex, setPicIndex] = useState(getPicIndex());\n    const listener = useCallback(() => setPicIndex(getPicIndex()), [])\n\n\n    useEffect(() => {\n        window.addEventListener('focus', listener)\n        return () => window.removeEventListener('focus', listener)\n    }, [listener]);\n\n    return <RandomBackgroundImage $picIndex={picIndex}/>\n};","import styled from \"styled-components\";\n\nexport const BACKGROUND_COLOR = `background: rgba(0, 0, 0, 0.6)`;\n\n//For use with already dark backgrounds\nexport const BACKGROUND_COLOR_LIGHT = `background: rgba(0, 0, 0, 0.3)`;\nexport const BACKGROUND_BOX_SHADOW = `box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.6)`;\n\nexport const BackgroundScreen = styled.div`\n  ${BACKGROUND_COLOR};\n`;\n\nexport const BackgroundScreenRounded = styled(BackgroundScreen)`\n  border-radius: 5px;\n  ${BACKGROUND_BOX_SHADOW};\n`;","/*TODO Replace this file with typescript*/\n\nexport const NETWORK_ERROR = {\n    HTTP_ERROR: 1,\n    FETCH_ERROR: 2,\n}\n\nexport const NETWORK_METHOD = {\n    GET: 'GET',\n    POST: 'POST',\n    DELETE: 'DELETE',\n    PUT: 'PUT',\n}\n\n","import {stripHtml, stripUndefined} from \"../../shared/util\";\nimport {NETWORK_ERROR} from \"../constants\";\n\nconst defaultValidateStatus = response =>\n    (response.status >= 200 && response.status <= 299)\n\n\n/*Parse body as JSON only if content-type is JSON*/\nconst responseHandler = response =>\n    response.headers.get('content-type')?.trim()?.startsWith('application/json') ?\n        response.json() :\n        response.text()\n\n/*Joins 2 URLs. Will not modify trailing slashes if present*/\nconst joinUrl = (base, url) => {\n    if (!base) {\n        return url\n    }\n    if (!url) {\n        return base\n    }\n    return base.replace(/\\/$/, '') + '/' + url.replace(/^\\//)\n}\n\n/*Custom query which wraps fetch errors in NetworkError format.\n* Will consider 4xx/5xx statuses to be errors, regardless of login status.*/\nexport const baseQuery = ({\n                              baseUrl,\n                              defaultHeaders = {},\n                              prepareHeaders = (x) => x,\n                              fetchFn = fetch,\n                              ...baseFetchOptions\n                          }) =>\n    async (arg = {}, {signal, getState}) => {\n        let {\n            url = '',\n            method = 'GET',\n            headers = new Headers({}),\n            body = undefined,\n            params = undefined,\n            validateStatus = defaultValidateStatus,\n        } = typeof arg == 'string' ? {url: arg} : arg\n        let config = {\n            ...baseFetchOptions,\n            method,\n            signal,\n            body,\n        }\n\n        config.headers = await prepareHeaders(\n            new Headers(stripUndefined({...defaultHeaders, ...headers})),\n            {getState}\n        )\n\n        config.body = JSON.stringify(body)\n\n        if (params) {\n            const divider = ~url.indexOf('?') ? '&' : '?'\n            const query = new URLSearchParams(stripUndefined(params))\n            url += divider + query\n        }\n\n        url = joinUrl(baseUrl, url)\n\n\n        const request = new Request(url, config)\n        const requestClone = request.clone()\n\n        try {\n            const response = await fetchFn(request)\n            const responseClone = response.clone()\n\n            const meta = {request: requestClone, response: responseClone}\n\n            const resultData = await responseHandler(response)\n\n            return validateStatus(response, resultData)\n                ? {\n                    data: resultData, //This is not wrapped in 'data' in the reducer!\n                    meta,\n                }\n                : {\n                    error: {\n                        method: request.method,\n                        url: request.url,\n                        text: typeof resultData === 'object' ? JSON.stringify(resultData, undefined, 2) : stripHtml(resultData),\n                        status: response.status,\n                        type: NETWORK_ERROR.HTTP_ERROR,\n\n                        /*Mainly for use by auth*/\n                        data: resultData\n                    },\n                    meta,\n                }\n        } catch (e) {\n            return {\n                error: {\n                    method: request.method,\n                    url: request.url,\n                    text: `${e.name}: ${e.message}`,\n                    type: NETWORK_ERROR.FETCH_ERROR\n                }\n            }\n        }\n    }","/**\n * Base createApi.\n */\n\nimport {createApi} from \"@reduxjs/toolkit/dist/query/react\";\nimport {baseQuery} from \"./baseQuery\";\n\nconst API_URL = 'https://api.nicholaslyz.com'\n\nexport const baseApi = createApi({\n    reducerPath: 'api',\n    baseQuery: baseQuery({\n        baseUrl: API_URL,\n        credentials: \"include\",\n        defaultHeaders: {'content-type': 'application/json'}\n    }),\n    endpoints: () => ({}),\n})","import {baseApi} from \"../network-core/baseApi\";\n\nexport const authApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        checkLogin: build.query({\n            query: () => 'account/login/',\n        }),\n        login: build.mutation({\n            query: body => ({\n                url: 'account/login/',\n                method: 'POST',\n                body\n            })\n        }),\n        logout: build.mutation({\n            query: () => ({\n                url: 'account/logout/',\n                method: 'POST'\n            })\n        })\n    })\n})\n\nexport const {\n    useCheckLoginQuery,\n    useRecaptchaKeyQuery,\n    useLoginMutation,\n    useLogoutMutation,\n} = authApi","import { createSlice, isAllOf, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport { NETWORK_ERROR, NETWORK_METHOD } from \"./constants\";\nimport { authApi } from \"./auth/authApi\";\n\nexport const appSliceName = 'app'\n\nconst initialState = {\n    /*Current module to display\n    * Title and other cosmetic effects are managed by components themselves*/\n    module: {\n        id: null,\n        meta: {}\n    },\n\n    loginStatus: {\n        user: null,\n        expiry: null,\n        isSuperUser: false,\n        recaptchaKey: null,\n        loggedIn: false,\n    },\n    networkError: null,\n    pendingNetworkActions: []\n}\n\nexport const send = () => {\n}\n\n/**\n * Convenience methods for obtaining get, add, update and delete methods from a URL\n * These must be dispatched with\n *\n * <pre>\n * get: function(...params) => url(...params)\n * add: function(object, ...params) => url(...params)\n * update: function (object, id, ...params) => detailUrl(id, ...params)\n * del: function (id, ...params) => detailUrl(id, ...params)\n * </pre>\n *\n * @param url str or function(...params) => url to obtain object list\n * @param detailUrl function(id, ...params) => url to obtain object details\n * @returns {[function(): Promise<unknown>, function(*=): Promise<unknown>, function(*=): Promise<unknown>, function(*=): Promise<unknown>]}\n */\nexport const crudMethods = (url, detailUrl) => {\n    let get = (...params) => send(\n        typeof url === 'function' ?\n            url(...params) :\n            url,\n        { method: NETWORK_METHOD.GET });\n\n    let add = (object, ...params) => send(\n        typeof url === 'function' ?\n            url(...params) :\n            url,\n        {\n            method: NETWORK_METHOD.POST,\n            body: JSON.stringify(object),\n        });\n\n    let update = (object, id, ...params) => send(\n        detailUrl(id, ...params),\n        {\n            method: NETWORK_METHOD.PUT,\n            body: JSON.stringify(object),\n        });\n\n    let del = (id, ...params) => send(\n        detailUrl(id, ...params),\n        { method: NETWORK_METHOD.DELETE }); //Note - for a DELETE operation, nothing is returned by the server\n\n    return [get, add, update, del]\n}\n\nconst handleLoginFulfilled = (state, {\n    payload: {\n        user,\n        expiry,\n        is_superuser: isSuperUser,\n        recaptcha_key: recaptchaKey\n    }\n\n}) => void (state.loginStatus = {\n    user,\n    expiry,\n    isSuperUser,\n    recaptchaKey,\n    loggedIn: true,\n})\n\nconst setNetworkErrorReducer = (state, action) => {\n\n    let payload = action.payload\n    let {\n        method = 'Method not specified',\n        url = 'URL not specified',\n        text = '',\n        status = null, /*Must be specified if HTTP_ERROR*/\n        type\n    } = payload\n\n    /*Type not specified:  rejected thunk with value which is NOT a NetworkError object*/\n    if (!type) {\n        state.networkError = {\n            method,\n            url,\n            text: JSON.stringify(action, undefined, 2),\n            status,\n            type\n        }\n        return\n    }\n\n    if (type === NETWORK_ERROR.HTTP_ERROR && typeof status !== 'number')\n        throw new Error(`NetworkError: 'status' must be a number if \n            'type' === HTTP_ERROR, but got ${status} instead`)\n\n    /*Ignore 401/403 errors if not logged in*/\n    if (!state.loginStatus.loggedIn &&\n        [401, 403].includes(status)) {\n        return\n    }\n    state.networkError = { method, url, text, status, type }\n}\n\nexport const appSlice = createSlice({\n    name: appSliceName,\n    initialState,\n    reducers: {\n        setNetworkError: setNetworkErrorReducer,\n        clearNetworkError: state => void (state.networkError = null),\n        setCurrentModule: (state, { payload: { id = null, meta = {} } = {} }) => void (state.module = { id, meta }),\n        setAppBar: (state, { payload: { drawerOpen = false } }) => void (state.appBar.drawerOpen = drawerOpen),\n        addNetworkAction: (state, { payload }) => {\n            if (!state.pendingNetworkActions.includes(payload))\n                state.pendingNetworkActions.push(payload)\n        },\n        removeNetworkAction: (state, { payload }) => {\n            if (state.pendingNetworkActions.includes(payload))\n                state.pendingNetworkActions.splice(state.pendingNetworkActions.indexOf(payload), 1)\n        },\n    },\n    extraReducers: builder => builder\n        .addMatcher(authApi.endpoints.checkLogin.matchFulfilled, handleLoginFulfilled)\n        .addMatcher(isAllOf(authApi.endpoints.checkLogin.matchRejected, isRejectedWithValue),\n            (state, action) => {\n                let payload = action.payload\n                if (payload.type === NETWORK_ERROR.HTTP_ERROR && [401, 403].includes(payload.status))\n                    state.loginStatus.recaptchaKey = payload.data.recaptcha_key\n            })\n        .addMatcher(authApi.endpoints.login.matchFulfilled, handleLoginFulfilled)\n        .addMatcher(authApi.endpoints.logout.matchFulfilled, () => {\n            /*Not pure, but an exception here as I want to clear everything*/\n            localStorage.clear()\n            /*Page is refreshed on logout, to clear both Redux store and cached memory.*/\n            window.location.reload()\n        })\n\n})\n\nexport const {\n    setNetworkError,\n    clearNetworkError,\n    setCurrentModule,\n    setAppBar,\n    addNetworkAction,\n    removeNetworkAction\n} = appSlice.actions\n\nexport const selectLoginStatus = state => state[appSliceName].loginStatus\nexport const selectNetworkError = state => state[appSliceName].networkError\nexport const selectCurrentModule = state => state[appSliceName].module\nexport const selectPendingNetworkActions = state => state[appSliceName].pendingNetworkActions","import {styled as muiStyled} from \"@material-ui/core/styles\";\nimport {Backdrop, CircularProgress, Typography} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {BackgroundScreen} from \"./backgroundScreen\";\n\nconst StyledBackdrop = muiStyled(Backdrop)(({theme}) => ({\n    // To cover the app drawer\n    zIndex: theme.zIndex.drawer + 1,\n}));\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 100px;\n`;\n\nconst FlexBackgroundScreen = styled(BackgroundScreen)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`;\n\n/**\n * A fullscreen loading backdrop element\n * @param open\n * @param message\n * @param showSpinner\n * @param fullscreen\n * @returns {JSX.Element}\n * @constructor\n */\nexport const Loading = ({\n                            open = true,\n                            message = 'Loading...',\n                            showSpinner = true,\n                            fullscreen = true\n                        }) => {\n\n    let content = <FlexContainer>\n        {showSpinner ? <CircularProgress color=\"inherit\" size={30}/> : null}\n        <Typography variant={'body1'} display={\"block\"}>{message}</Typography>\n    </FlexContainer>;\n\n    if (!open) return null;\n\n    return fullscreen ?\n        <StyledBackdrop open={open}>\n            {content}\n        </StyledBackdrop>\n        : <FlexBackgroundScreen>\n            {content}\n        </FlexBackgroundScreen>;\n\n};","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {Button, Checkbox, CircularProgress, FormControlLabel, TextField, Typography} from \"@material-ui/core\";\nimport {BackgroundScreenRounded} from \"../../shared/components/backgroundScreen\";\nimport {useInput} from \"../../shared/useInput\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectLoginStatus, setNetworkError} from \"../appSlice\";\nimport {NETWORK_ERROR} from \"../constants\";\nimport {useCheckLoginQuery, useLoginMutation} from \"./authApi\";\nimport {Loading} from \"../../shared/components/loading\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 300px;\n  height: 100vh;\n`;\n\nconst InnerContainer = styled(BackgroundScreenRounded)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 5px 0;\n`;\n\nconst Spacer = styled.div`\n  width: 30px\n`;\n\nconst StyledCircularProgress = styled(CircularProgress)`\n  margin-left: 10px;\n`;\n\n/*Will update loggedIn state*/\nexport const Login = () => {\n\n    const dispatch = useDispatch()\n    const {recaptchaKey} = useSelector(selectLoginStatus)\n\n    const [login, {isLoading}] = useLoginMutation()\n    const {isFetching, isError, error} = useCheckLoginQuery(undefined, {refetchOnMountOrArgChange: true})\n\n    const {values, bind, setValue} = useInput();\n    const recaptchaRef = React.useRef();\n    const [loginMessage, setLoginMessage] = useState('Sign In');\n    const [otpRequired, setOtpRequired] = useState(false);\n\n\n    const onSubmit = event => {\n        event.preventDefault();\n        recaptchaRef.current\n            .executeAsync()\n            .then(token => login({\n                username: values.username,\n                password: values.password,\n                token: token,\n                otp: values.otp,\n                save_browser: values.saveBrowser\n            }))\n            .then(res => {\n                if (res.error &&\n                    res.error.type === NETWORK_ERROR.HTTP_ERROR &&\n                    [401, 403].includes(res.error.status)) {\n                    let data = res.error.data\n\n                    if (data.otp_required)\n                        setOtpRequired(true)\n\n                    setLoginMessage(data.message)\n\n                    /*Reset captcha for retries*/\n                    recaptchaRef.current?.reset();\n                }\n            })\n            .catch(e => {\n                /*Since thunks do not throw if not unwrapped,\n                * only gRecaptcha errors are caught here.\n                * networkErrorMiddleware handles the rest.\n                * This is at the end of the chain so that all\n                * prior 'then's do not execute if recaptcha validation fails.*/\n                dispatch(setNetworkError({\n                    text: `gRecaptcha request failed: ${e?.message}`,\n                    type: NETWORK_ERROR.FETCH_ERROR,\n                }))\n            })\n\n    };\n\n    /*Show loading screen also for non-401/403 errors*/\n    if (isFetching || (isError && ![401, 403].includes(error.status)))\n        return <Loading\n            open={true}\n            message={isError ? 'HTTP Error' : 'Checking authentication...'}\n            fullscreen={true}/>;\n\n    return <StyledForm onSubmit={onSubmit}>\n        <InnerContainer>\n            <Typography variant={'h6'} gutterBottom align={\"center\"}>\n                {loginMessage}\n            </Typography>\n            {!otpRequired && <>\n                <StyledTextField\n                    type='text'\n                    label={'Username'}\n                    fullWidth\n                    required\n                    autoFocus\n                    variant={'outlined'}\n                    autoComplete={'username'}\n                    {...bind('username')}\n                />\n\n                <StyledTextField\n                    type={'password'}\n                    label={'Password'}\n                    autoComplete={'current-password'}\n                    fullWidth\n                    required\n                    variant={'outlined'}\n                    {...bind('password')}\n                />\n            </>}\n\n            {otpRequired && <>\n                <StyledTextField\n                    type={'password'}\n                    label={'OTP'}\n                    autoComplete={'one-time-code'}\n                    fullWidth\n                    variant={'outlined'}\n                    inputMode={\"numeric\"}\n                    pattern={\"[0-9]*\"}\n                    {...bind('otp')}\n                />\n                <FormControlLabel\n                    control={<Checkbox\n                        checked={values.saveBrowser}\n                        onChange={e => setValue({\n                            name: 'saveBrowser',\n                            value: e.target.checked\n                        })}\n                    />}\n                    label={'Remember browser'}\n                />\n            </>}\n\n            <Button\n                variant={'contained'}\n                type={'submit'}\n                color={'primary'}\n                fullWidth\n            >\n                <Spacer/>Login{isLoading ? <StyledCircularProgress color={\"inherit\"} size={20}/> : <Spacer/>}\n            </Button>\n            <ReCAPTCHA\n                ref={recaptchaRef}\n                size={'invisible'}\n                sitekey={recaptchaKey}\n                theme={'dark'}\n            />\n\n        </InnerContainer>\n    </StyledForm>;\n};\n","import {useReducer} from \"react\";\n\n/**\n * Uses useReducer (setValue is dispatch({name, value})\n * value can be a function, which will receive the latest state[key] as an argument.\n * If initial state for a key is not set, returns '' by default.\n * @param initialValues initial value of inputs as an object of name: value pairs\n * @returns {{bind: (function(*=): {onChange: function(*): *, name: *, value}), onChange: (function(*): *), setValues: *, values: React.ReducerStateWithoutAction<function(*=, *): (*)>}}\n */\nexport const useInput = (initialValues = {}) => {\n    const reducer = (state, action) => {\n        if (typeof action.value === 'function') {\n            return {\n                ...state,\n                [action.name]: action.value(state[action.name])\n            }\n        } else\n            return {\n                ...state,\n                [action.name]: action.value\n            };\n    };\n\n    const [values, setValue] = useReducer(reducer, initialValues);\n\n    const onChange = e => setValue({\n        name: e.target.name,\n        value: e.target.value\n    });\n\n    const bind = name => ({\n        onChange,\n        name: name,\n        value: values[name] || ''\n    });\n\n    return {values, setValue, onChange, bind}\n\n};","import {useCheckLoginQuery} from \"../auth/authApi\";\n\nconst SESSION_REFRESH_INTERVAL_MS = 60 * 60 * 1000;\n\nexport const RefreshSession = () => {\n    useCheckLoginQuery(undefined, {\n        pollingInterval: SESSION_REFRESH_INTERVAL_MS,\n        refetchOnReconnect: true,\n    })\n    return null\n}","import {baseApi} from \"../../app/network-core/baseApi\";\n\nexport const hmailApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        checkIhisMail: build.query({\n            query: () => 'hmail/check-ihis-mail/'\n        }),\n        checkMohhMail: build.query({\n            query: () => 'hmail/check-mohh-mail/'\n        })\n    })\n})\n\nexport const {\n    useCheckIhisMailQuery,\n    useCheckMohhMailQuery,\n} = hmailApi","import {createSelector, createSlice, nanoid} from \"@reduxjs/toolkit\";\nimport {isPlainObject} from 'lodash'\n\nexport const notificationsSliceName = 'notifications'\n\nconst shape = [\n    'title',\n    'content',\n    'source',\n\n    /*Autogenerated if not already present*/\n    'id',\n    'timestamp',\n]\n\nconst prepareBatchNotification = (arg) => {\n    if (isPlainObject(arg)) {\n        return {\n            payload: [{\n                id: nanoid(),\n                timestamp: Date.now(),\n                ...arg\n            }]\n        }\n    }\n    if (!Array.isArray(arg))\n        throw new Error(`'${arg}' should be an array or object, but got ${typeof arg}`)\n\n    return {\n        payload: arg.map(e => ({\n            id: nanoid(),\n            timestamp: Date.now(),\n            ...e\n        }))\n    }\n}\n\nconst validateShape = (arg) => {\n    if (!arg.every(item => shape.every(e => Object.keys(item).includes(e))))\n        throw new Error(`Invalid notification shape: expected ${shape}, but got ${Object.keys(arg)}`)\n}\n\nexport const notificationSlice = createSlice({\n    name: notificationsSliceName,\n    initialState: [],\n    reducers: {\n        addNotifications: {\n            reducer: (state, {payload}) => {\n                validateShape(payload)\n                state.push(...payload)\n            },\n            prepare: prepareBatchNotification\n        },\n        removeNotification: (state, {payload: {id}}) => state.filter(e => e.id !== id),\n        removeNotificationsFromSource: (state, {payload}) => state.filter(e => e.source !== payload),\n    },\n\n})\n\nexport const {\n    addNotifications,\n    removeNotification,\n    removeNotificationsFromSource\n} = notificationSlice.actions\n\nexport const selectNotificationsSorted = createSelector(\n    state => state[notificationsSliceName],\n    items => items.slice().sort((a, b) => b.timestamp - a.timestamp)\n)","import {addNotifications, removeNotificationsFromSource} from \"../../app/notifications/notificationSlice\";\nimport {format, isToday, parseJSON} from \"date-fns\";\n\nexport const handleMailAction = (data, source) => dispatch => {\n    dispatch(removeNotificationsFromSource(source))\n    dispatch(addNotifications(data.map(e => {\n        let date = parseJSON(e.date)\n        return ({\n            title: e.title,\n            content: `${format(date, isToday(date) ? 'p' : 'd/M')} ` + [e.from.join(', '), e.preview].join(' - '),\n            source,\n            timestamp: date.getTime()\n        })\n    })))\n}","import {useCheckIhisMailQuery, useCheckMohhMailQuery} from \"./hmailApi\";\nimport {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {handleMailAction} from \"./hmailActions\";\n\nconst CHECK_MAIL_FREQUENCY_MS = 30 * 1000;\nconst [IHIS, MOHH] = ['IHIS', 'MOHH']\n\nexport const Hmail = () => {\n\n    const dispatch = useDispatch()\n\n    /*This hook appears to be keep the same reference when cached data is returned, so\n    * useEffect calls do not run*/\n    const {data: ihisMail} = useCheckIhisMailQuery(undefined, {pollingInterval: CHECK_MAIL_FREQUENCY_MS})\n    const {data: mohhMail} = useCheckMohhMailQuery(undefined, {pollingInterval: CHECK_MAIL_FREQUENCY_MS})\n\n    useEffect(() => ihisMail &&\n        dispatch(handleMailAction(ihisMail, IHIS)),\n        [dispatch, ihisMail])\n\n    useEffect(() => mohhMail &&\n        dispatch(handleMailAction(mohhMail, MOHH)),\n        [dispatch, mohhMail])\n\n    return null\n};","import {baseApi} from \"../../app/network-core/baseApi\";\nimport {baseQuery} from \"../../app/network-core/baseQuery\";\n\n\nexport const testingApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        throwHttpError: build.mutation({\n            query: status => ({\n                url: 'test/',\n                params: {status}\n            })\n        }),\n        throwFetchError: build.mutation({\n            queryFn: (arg, api, extraOptions) =>\n                baseQuery({\n                    baseUrl: 'https://dummy.nicholaslyz.com',\n                    credentials: \"include\"\n                })(arg, api, extraOptions)\n        })\n    })\n})\n\nexport const {\n    useThrowHttpErrorMutation,\n    useThrowFetchErrorMutation\n} = testingApi","import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\nexport const throwAsyncThunkReject = createAsyncThunk('testing/asyncThunkReject', async () => {\n    throw new Error('Testing: AsyncThunkReject')\n})\n\nexport const throwAsyncThunkRejectWithValue = createAsyncThunk('testing/asyncThunkRejectWithValue', async(arg, {rejectWithValue}) => {\nreturn rejectWithValue('Testing: AsyncThunkRejectWithValue')\n})","import {Button} from \"@material-ui/core\";\nimport {useThrowFetchErrorMutation, useThrowHttpErrorMutation} from \"./testingApi\";\nimport {useDispatch} from \"react-redux\";\nimport {throwAsyncThunkReject, throwAsyncThunkRejectWithValue} from \"./util\";\nimport styled from 'styled-components'\nimport {clearNetworkError} from \"../../app/appSlice\";\n\nconst StyledDiv = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  max-width: 300px;\n  margin: 10px;\n`\n\nexport const Testing = () => {\n\n    const dispatch = useDispatch()\n    const [throwHttpError] = useThrowHttpErrorMutation()\n    const [throwFetchError] = useThrowFetchErrorMutation()\n\n    return <StyledDiv>\n        <Button variant={'contained'} onClick={() => throwHttpError(401)}>Throw 401 error</Button>\n        <Button variant={'contained'} onClick={() => throwHttpError(500)}>Throw 500 error</Button>\n        <Button variant={'contained'} onClick={() => throwFetchError()}>Throw fetch error</Button>\n        <Button variant={'contained'} onClick={() => dispatch(throwAsyncThunkReject())}>\n            Throw asyncThunkReject\n        </Button>\n        <Button variant={'contained'} onClick={() => dispatch(throwAsyncThunkRejectWithValue())}>\n            Throw asyncThunkRejectWithValue\n        </Button>\n        <Button variant={'contained'} onClick={() => dispatch(clearNetworkError())}>Clear</Button>\n    </StyledDiv>\n}","import {getSecureRandom} from \"../../shared/util\";\nimport {formatDistance} from \"date-fns\";\n\nconst DIGITS_REGEX = /\\d/;\nconst LOWER_REGEX = /[a-z]/;\nconst UPPER_REGEX = /[A-Z]/;\nconst SYMBOLS_REGEX = /[!@#$%^&*]/;\n\n\nconst DIGITS = '0123456789';\nconst LOWER = 'abcdefghijklmnopqrstuvwxyz';\nconst UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst SYMBOLS = '!@#$%^&*';\n\nconst secureRandom = getSecureRandom();\nconst formatNumber = new Intl.NumberFormat(undefined, {\n    maximumFractionDigits: 0,\n    maximumSignificantDigits: 3,\n});\n\n/*Gets the entropy in bits for a password, assuming it is completely random*/\nexport const getEntropy = password => {\n\n    let hasDigits = DIGITS_REGEX.test(password);\n    let hasLowerCase = LOWER_REGEX.test(password);\n    let hasUpperCase = UPPER_REGEX.test(password);\n    let hasSymbols = SYMBOLS_REGEX.test(password);\n\n    let totalSymbols =\n        (hasDigits ? 10 : 0) +\n        (hasLowerCase ? 26 : 0) +\n        (hasUpperCase ? 26 : 0) +\n        (hasSymbols ? SYMBOLS.length : 0);\n\n    let bitsPerChar = Math.log2(totalSymbols);\n    let totalEntropy = bitsPerChar * password.length;\n\n    return {\n        length: password.length,\n        hasDigits,\n        hasLowerCase,\n        hasUpperCase,\n        hasSymbols,\n        bitsPerChar,\n        totalEntropy,\n    }\n\n};\n\nexport const generatePassword = ({length = 10, digits = true, lower = true, upper = true, symbols = true} = {}) => {\n\n    if (length < 4) throw new Error('Password length is too short');\n\n    let charSet =\n        (digits ? DIGITS : '') +\n        (lower ? LOWER : '') +\n        (upper ? UPPER : '') +\n        (symbols ? SYMBOLS : '');\n\n    const generate = () => {\n        let password = '';\n        while (password.length < length)\n            password += secureRandom.choice(charSet);\n        return password\n    };\n\n    let password = generate();\n\n    /*Ensure generated password meets criteria*/\n    while ((digits && !DIGITS_REGEX.test(password)) ||\n    (lower && !LOWER_REGEX.test(password)) ||\n    (upper && !UPPER_REGEX.test(password)) ||\n    (symbols && !SYMBOLS_REGEX.test(password))) {\n        password = generate()\n    }\n    return password\n};\n\nwindow.test = generatePassword;\n\nexport const getSha1Hash = async message => {\n    const msgUint8 = new TextEncoder().encode(message);                            // encode as (utf-8) Uint8Array\n    const hashBuffer = await crypto.subtle.digest('SHA-1', msgUint8);    // hash the message\n    const hashArray = Array.from(new Uint8Array(hashBuffer));                      // convert buffer to byte array\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('').toUpperCase();       // convert bytes to hex string\n};\n\nexport const generateUsername = ({length = 8} = {}) => {\n\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const cons = ['b', 'c', 'd', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'r', 's', 't', 'u', 'v', 'w', 'tr', 'cr', 'br', 'fr', 'th', 'dr', 'ch', 'ph', 'wr', 'st', 'sp', 'sw', 'pr', 'sl', 'cl'];\n\n    const num_vowels = vowels.length;\n    const num_cons = cons.length;\n    let password = '';\n\n    for (let i = 0; i < length; i++) {\n        password += cons[Math.floor(secureRandom.random() * num_cons)] + vowels[Math.floor(secureRandom.random() * num_vowels)];\n    }\n\n    return password.substr(0, length);\n};\n\nexport const formatLargeDuration = seconds => {\n    if (seconds < 3.154e+7) {\n        return formatDistance(new Date(0), new Date(seconds * 1000))\n    }\n    if (seconds > 4.4e+17) {\n        return 'longer than the age of the Universe'\n    }\n    return formatNumber.format(seconds / 3.154e+7) + ' years';\n};","import {baseApi} from \"../../app/network-core/baseApi\";\n\n\n\nconst passwordToolsApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        hibpLookup: build.mutation({\n            query: hash => ({\n                url: 'passwords/lookup/',\n                params: {hash}\n            })\n        })\n    })\n})\n\nexport const {useHibpLookupMutation} = passwordToolsApi","import {useCallback, useEffect, useState} from \"react\";\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    IconButton,\n    Slider,\n    Snackbar,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport {formatLargeDuration, generatePassword, generateUsername, getEntropy, getSha1Hash} from \"./passwordUtil\";\nimport styled from 'styled-components'\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport \"@fontsource/jetbrains-mono\"\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport {Alert} from \"@material-ui/lab\";\nimport {debounce} from 'lodash'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {useHibpLookupMutation} from \"./passwordToolsApi\";\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 600px;\n  flex-direction: column;\n  padding: 10px;\n  ${BACKGROUND_COLOR};\n`;\n\nconst StyledTextField = styled(TextField)`\n  .MuiInputBase-input {\n    font-family: \"JetBrains Mono\", monospace\n  }\n\n  margin: 10px 0;\n`;\n\nconst TextFieldContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  margin-top: 14px;\n`;\n\nconst OptionsFormGroup = styled(FormGroup)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PasswordDetailGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: start;\n  gap: 10px 10px;\n  align-items: center;\n  margin: 5px 0 15px;\n`;\n\nconst GreenCheck = styled(CheckIcon)`\n  color: chartreuse;\n  margin-right: 10px;\n`;\n\nconst GreyCross = styled(ClearIcon)`\n  color: grey;\n  margin-right: 10px;\n`;\n\n\nconst formatNumber = new Intl.NumberFormat(undefined, {maximumFractionDigits: 0});\nconst formatDecimal = new Intl.NumberFormat(undefined, {maximumFractionDigits: 2});\n\nconst DEFAULT_USERNAME_LENGTH = 10;\nconst DEFAULT_PASSWORD_LENGTH = 24;\n\nexport const PasswordTools = () => {\n    const [lookupHibp, {isLoading, data}] = useHibpLookupMutation()\n    const {count: hashCount} = data ?? {}\n\n    const [settings, setSettings] = useState({\n        dialogOpen: false,\n        dialogType: null,\n        passwordSettings: {\n            length: DEFAULT_PASSWORD_LENGTH,\n            digits: true,\n            lower: true,\n            upper: true,\n            symbols: true\n        },\n        usernameSettings: {\n            length: DEFAULT_USERNAME_LENGTH\n        }\n    });\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [entropy, setEntropy] = useState({});\n\n    let secondsToBruteforce = (2 ** entropy.totalEntropy / (200 * 10 ** 18));\n\n    useEffect(() => {\n        if (!password) return;\n\n        let generatedPassword = generatePassword(settings.passwordSettings);\n        setPassword(generatedPassword);\n        setEntropy(getEntropy(generatedPassword))\n        // eslint-disable-next-line\n    }, [settings.passwordSettings]);\n\n    useEffect(() => {\n        setUsername(generateUsername(settings.usernameSettings))\n    }, [settings.usernameSettings]);\n\n    // eslint-disable-next-line\n    const checkHibp = useCallback(debounce(\n        passwordStr =>\n            getSha1Hash(passwordStr)\n                .then(lookupHibp), 500), []);\n\n    const copyToClipboard = text => navigator.clipboard.writeText(text)\n        .then(() => {\n            if (snackbarOpen) {\n                setSnackbarOpen(false);\n                setTimeout(() => setSnackbarOpen(true), 100)\n            } else\n                setSnackbarOpen(true);\n        });\n\n    const onPasswordChange = text => {\n        setPassword(text);\n        checkHibp(text);\n        setEntropy(getEntropy(text))\n    };\n\n    const closeSettings = () => setSettings(current => ({...current, dialogOpen: false}));\n\n    return <>\n        <Dialog open={settings.dialogOpen} onClose={closeSettings}>\n            <DialogTitle\n                style={{zIndex: 1}}>{settings.dialogType === 'username' ? 'Username' : 'Password'} Options</DialogTitle>\n            <DialogContent>\n                {settings.dialogType === 'username' && <>\n                    Length: {settings.usernameSettings.length}\n                    <Slider value={settings.usernameSettings.length}\n                            step={1}\n                            min={6}\n                            max={24}\n                            onChange={(e, value) =>\n                                setSettings(current => ({\n                                    ...current,\n                                    usernameSettings: {\n                                        length: value\n                                    }\n                                }))}/>\n                </>}\n                {settings.dialogType === 'password' && <>\n                    Length: {settings.passwordSettings.length}\n                    <Slider value={settings.passwordSettings.length}\n                            step={1}\n                            min={6}\n                            max={64}\n                            onChange={(e, value) =>\n                                setSettings(current => ({\n                                    ...current,\n                                    passwordSettings: {\n                                        ...current.passwordSettings,\n                                        length: value\n                                    }\n                                }))}/>\n                    <FormControl>\n                        <OptionsFormGroup>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.lower}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         lower: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'a-z'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.upper}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         upper: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'A-Z'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.digits}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         digits: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'0-9'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.symbols}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         symbols: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'!@#$%^&*'}/>\n                        </OptionsFormGroup>\n                    </FormControl>\n                </>}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeSettings}>Close</Button>\n            </DialogActions>\n        </Dialog>\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={snackbarOpen}\n            autoHideDuration={3000}\n            onClose={() => setSnackbarOpen(false)}>\n            <Alert severity=\"success\" variant={'filled'}>Copied</Alert>\n        </Snackbar>\n        <Container>\n            <TextFieldContainer>\n                <StyledTextField\n                    variant={'outlined'}\n                    label={'Random Username'}\n                    value={username}\n                    fullWidth\n                    onChange={e => setUsername(e.target.value)}\n                    InputProps={{\n                        endAdornment:\n                            <>\n                                <IconButton onClick={() => copyToClipboard(username)}>\n                                    <FileCopyIcon/>\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setUsername(generateUsername(settings.usernameSettings))}>\n                                    <ReplayIcon/>\n                                </IconButton>\n                            </>\n                    }}\n                />\n                <StyledIconButton onClick={() => setSettings(current => ({\n                    ...current,\n                    dialogOpen: true,\n                    dialogType: 'username'\n                }))}><SettingsIcon/></StyledIconButton>\n            </TextFieldContainer>\n            <TextFieldContainer>\n                <StyledTextField\n                    variant={'outlined'}\n                    label={'Type a password'}\n                    value={password}\n                    fullWidth\n                    error={!isLoading && Boolean(hashCount)}\n                    helperText={isLoading ? 'Checking...' :\n                        password === '' ? 'Type a password to check, or generate one' :\n                            hashCount > 0 ? `Password cracked ${formatNumber.format(hashCount)} times` :\n                                'Password has not been cracked'}\n                    onChange={e => onPasswordChange(e.target.value)}\n                    InputProps={{\n                        endAdornment:\n                            <>\n                                <IconButton onClick={() => copyToClipboard(password)}>\n                                    <FileCopyIcon/>\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => onPasswordChange(generatePassword(settings.passwordSettings))}>\n                                    <ReplayIcon/>\n                                </IconButton>\n                            </>\n                    }}\n                />\n                <StyledIconButton onClick={() => setSettings(current => ({\n                    ...current,\n                    dialogOpen: true,\n                    dialogType: 'password'\n                }))}><SettingsIcon/></StyledIconButton>\n            </TextFieldContainer>\n            <PasswordDetailGrid>\n                <Typography variant={'body1'} color={entropy.hasLowerCase ? 'textPrimary' : 'textSecondary'}>Lowercase\n                    letters </Typography>\n                {entropy.hasLowerCase ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'} color={entropy.hasUpperCase ? 'textPrimary' : 'textSecondary'}>Uppercase\n                    letters</Typography>\n                {entropy.hasUpperCase ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'}\n                            color={entropy.hasDigits ? 'textPrimary' : 'textSecondary'}>Digits</Typography>\n                {entropy.hasDigits ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'} color={entropy.hasSymbols ? 'textPrimary' : 'textSecondary'}>Symbols\n                    (@#...)</Typography>\n                {entropy.hasSymbols ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'}>Entropy\n                    <Tooltip\n                        arrow\n                        enterTouchDelay={100}\n                        interactive\n                        title={'A measure of how secure the password is. 128 bits is recommended for most people.'}>\n                        <IconButton tabIndex={-1}>\n                            <InfoOutlinedIcon/>\n                        </IconButton>\n                    </Tooltip>\n                </Typography>\n                <Typography\n                    variant={'body1'}>{entropy.totalEntropy && (formatDecimal.format(entropy.totalEntropy) + ' bits')}</Typography>\n\n                <Typography variant={'body1'}>Time to crack\n                    <Tooltip\n                        arrow\n                        enterTouchDelay={100}\n                        interactive\n                        title={'Based on the current Bitcoin hashrate (200 EH/s)'}>\n                        <IconButton tabIndex={-1}>\n                            <InfoOutlinedIcon/>\n                        </IconButton>\n                    </Tooltip>\n                </Typography>\n                <Typography\n                    variant={'body1'}>{Number.isFinite(secondsToBruteforce) && formatLargeDuration(secondsToBruteforce)}</Typography>\n            </PasswordDetailGrid>\n\n\n        </Container>\n\n    </>\n};","import {baseApi} from \"../../app/network-core/baseApi\";\n\n\nconst homeAutomationApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        sendCommand: build.mutation({\n            query: command => ({\n                url: 'home-automation/send',\n                method: 'POST',\n                body: {command}\n            })\n        })\n    })\n})\n\nexport const {useSendCommandMutation} = homeAutomationApi","import {Button, FormControl, InputLabel, MenuItem, Select, Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React, {useState} from \"react\";\nimport styled from 'styled-components'\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport {useSendCommandMutation} from \"./homeAutomationApi\";\n\nconst StyledContainer = styled.form`\n  display: flex;\n  max-width: 600px;\n  height: 200px;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px;\n  ${BACKGROUND_COLOR};\n`;\n\nexport const COMMANDS = {\n    gate_toggle: 'Gate: Toggle',\n    ac_off: 'AC: Off',\n    ac_on_24: 'AC: On @ 24°C',\n    ac_on_25: 'AC: On @ 25°C',\n    ceiling_fan_on: 'Ceiling Fan: On',\n    ceiling_fan_off: 'Ceiling Fan: Off',\n    dyson_fan_on: 'Dyson Fan: On',\n    dyson_fan_off: 'Dyson Fan: Off',\n};\n\nexport const HomeAutomation = () => {\n    const [sendCommand] = useSendCommandMutation()\n\n    const [snackbar, setSnackbar] = useState();\n    const [disabled, setDisabled] = useState(false);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setDisabled(true);\n        setTimeout(() => setDisabled(false), 2000);\n        sendCommand(e.target.command.value).unwrap().then(() => setSnackbar(true));\n    };\n\n    return <>\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={snackbar}\n            onClose={() => setSnackbar(false)}\n            autoHideDuration={3000}>\n            <Alert\n                variant={'filled'}\n                severity={'success'}>\n                Command sent\n            </Alert>\n        </Snackbar>\n        <StyledContainer\n            onSubmit={handleSubmit}>\n\n            <FormControl>\n                <InputLabel>Command</InputLabel>\n                <Select\n                    defaultValue={Object.entries(COMMANDS)[0][0]}\n                    name={'command'}\n                    required>\n                    {Object.entries(COMMANDS).map(([k, v]) => <MenuItem value={k} key={k}>{v}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <Button\n                disabled={disabled}\n                variant={'contained'}\n                color={'primary'}\n                type={'submit'}>\n                Send command\n            </Button>\n        </StyledContainer>\n    </>\n};","import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport {IconButton, InputAdornment, Tooltip} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\n/*Textfield with clear and info buttons*/\nexport const TextFieldClearableInfo = ({info, onChange, ...props}) => {\n\n    return <TextField\n        {...props}\n        onChange={onChange}\n        InputProps={{\n            ...props.InputProps,\n            endAdornment:\n                <InputAdornment position={'end'}>\n                    {props.value &&\n                    <ClearIcon style={{cursor: 'pointer'}} onClick={() => onChange('')}/>}\n                    {info && <InputAdornment position={'end'}>\n                        <Tooltip\n                            arrow\n                            enterTouchDelay={100}\n                            interactive\n                            title={info}>\n                            <IconButton tabIndex={-1}>\n                                <InfoOutlinedIcon/>\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>}\n                    {props.InputProps?.endAdornment}\n                </InputAdornment>\n        }}\n    />\n};","import {TextFieldClearableInfo} from \"../../shared/components/textFieldClearableInfo\";\nimport Cleave from \"cleave.js/react\";\nimport React from \"react\";\n\nconst CleaveTextField = ({inputRef, ...props}) =>\n    <Cleave\n        htmlRef={inputRef}\n        {...props}\n    />;\n\n/*Textfield with clear and info buttons, and currency formatting\n* Permanently shrunk*/\nexport const TextFieldClearableInfoCurrency = ({info, onChange, InputProps, ...props}) => {\n\n    return <TextFieldClearableInfo\n        {...props}\n        info={info}\n        InputLabelProps={{ shrink: true }}\n        InputProps={{\n            ...InputProps,\n            inputComponent: CleaveTextField,\n            inputProps: {\n                options: {\n                    numeral: true,\n                    prefix: '$',\n                    rawValueTrimPrefix: true,\n                }\n            },\n            onChange: e => onChange(e.target.rawValue)\n        }}\n        onChange={onChange}\n    />\n};","import {useWatch} from \"react-hook-form\";\nimport React from \"react\";\n\n/*Isolate rendering of an array of fields (convenience)*/\nexport const FieldUseWatch = ({control, fieldsToWatch, Component}) => {\n    const fields = useWatch({\n        control,\n        name: fieldsToWatch,\n    });\n    return <Component fields={fields}/>\n};","import {baseApi} from \"../../app/network-core/baseApi\";\nimport {baseQuery} from \"../../app/network-core/baseQuery\";\n\n/*API Key from dnsproxy@gmail.com*/\nconst ENDPOINT = 'https://finnhub.io/api/v1/quote?symbol=SPY&token=c10sd6n48v6pp7chu95g';\n\nconst optionHedgeCalculatorApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        getSpyPrice: build.query({\n            queryFn: (arg, api) => baseQuery({\n                baseUrl: ENDPOINT,\n            })(arg, api),\n        })\n    })\n})\n\nexport const {useGetSpyPriceQuery} = optionHedgeCalculatorApi","import {Typography} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {yupResolver} from '@hookform/resolvers/yup'\nimport styled from 'styled-components'\nimport {Controller, useForm} from \"react-hook-form\";\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport * as yup from 'yup'\nimport {trim} from \"lodash\";\nimport {TextFieldClearableInfo} from \"../../shared/components/textFieldClearableInfo\";\nimport {TextFieldRefreshLoading} from \"./textFieldRefreshLoading\";\nimport {formatDistanceToNowStrict} from 'date-fns'\nimport {TextFieldClearableInfoCurrency} from \"./TextFieldClearableInfoCurrency\";\nimport {FieldUseWatch} from \"./FieldUseWatch\";\nimport {useGetSpyPriceQuery} from \"./optionHedgeCalculatorApi\";\n\nconst FIELDS = {\n    portfolioValue: 'portfolioValue',\n    spyPrice: 'spyPrice',\n    hedgeRatio: 'hedgeRatio',\n    delta: 'delta',\n};\n\nconst emptyStringToUndefined = (val, origVal) => trim(origVal) === '' ? undefined : val;\n\nconst schema = yup.object({\n    portfolioValue: yup.number().positive().required().transform(emptyStringToUndefined),\n    spyPrice: yup.number().positive().required().transform(emptyStringToUndefined),\n    hedgeRatio: yup.number().positive().max(1).required().transform(emptyStringToUndefined),\n    delta: yup.number().positive().max(1).required().transform(emptyStringToUndefined)\n});\n\nconst Container = styled.div`\n  ${BACKGROUND_COLOR};\n  max-width: 600px;\n`;\n\nconst StyledTypography = styled(Typography)`\n  &.MuiTypography-root {\n    white-space: pre-line;\n  }\n`;\n\nconst StyledTextFieldClearableInfo = styled(TextFieldClearableInfo)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst StyledTextFieldRefresh = styled(TextFieldRefreshLoading)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst StyledTextFieldClearableInfoCurrency = styled(TextFieldClearableInfoCurrency)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst explanatoryText = `Hedge instrument: SPY puts\nNOTE: This calculates a 1:1 put spread, not the 1:1.1 as described in the 'Options Edge' book\n\nNote: As I am only hedging CSPX and IWDA, beta for my portfolio is 1\nTake beta of IWDA to be 0.89 for now (see 'Finance and Investing' doc)\nBeta of DPYA = IWDP = 0.99\n5yr beta of ISAC = 1\n\nRehedge in first month ONLY if SPY has moved > 3% from the previous long put strike\n`;\n\nconst formatNoDecimals = new Intl.NumberFormat(undefined, {maximumFractionDigits: 0});\nconst formatDecimals = new Intl.NumberFormat(undefined, {maximumFractionDigits: 1});\nconst formatDollars = new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'symbol'\n});\n\nexport const OptionHedgeCalculator = () => {\n    const {refetch, isFetching, data, fulfilledTimeStamp} = useGetSpyPriceQuery()\n\n    const [tooltipText, setTooltipText] = useState('');\n\n    const {\n        control,\n        setValue,\n    } = useForm({\n        mode: 'onTouched',\n        resolver: yupResolver(schema),\n        defaultValues: {\n            [FIELDS.portfolioValue]: '',\n            [FIELDS.spyPrice]: '',\n            [FIELDS.hedgeRatio]: 0.47,\n            [FIELDS.delta]: '',\n        }\n    });\n\n    useEffect(() => void (data && setValue(FIELDS.spyPrice, data.c, {shouldValidate: true})), [data, setValue, fulfilledTimeStamp])\n\n\n    return <Container>\n        <StyledTypography variant={'body1'}>{explanatoryText}</StyledTypography>\n\n        <Controller\n            name={FIELDS.portfolioValue}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfoCurrency\n                    {...field}\n                    error={Boolean(error)}\n                    helperText={error?.message}\n                    info={'Take beta of IWDA to be 0.89 and exclude bonds e.g. AGGU'}\n                    label={'Beta-weighted Portfolio Value (USD)'}\n                    variant={'outlined'}\n                />}/>\n\n        <Controller\n            name={FIELDS.spyPrice}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldRefresh\n                    {...field}\n                    error={Boolean(error)}\n                    helperText={error?.message}\n                    label={'SPY Price'}\n                    loading={isFetching}\n                    onOpen={() => setTooltipText(fulfilledTimeStamp ? 'Last updated ' + formatDistanceToNowStrict(new Date(fulfilledTimeStamp), {addSuffix: true}) : '')}\n                    onRefresh={refetch}\n                    tooltipText={tooltipText}\n                    variant={'outlined'}/>}/>\n\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.spyPrice]}\n            Component={({fields: [spyPrice]}) => <Typography variant={'body1'}>\n                Strike price for short 8.6% delta OTM, 90-day\n                put: {formatNoDecimals.format(0.914 * spyPrice)}\n            </Typography>}/>\n\n        <Controller\n            name={FIELDS.hedgeRatio}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfo\n                    {...field}\n                    error={Boolean(error)}\n                    info={'% of portfolio value to hedge using put options (via delta equivalent amount)'}\n                    helperText={error?.message}\n                    label={'Hedge Ratio'}\n                    variant={'outlined'}/>}/>\n\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.hedgeRatio, FIELDS.portfolioValue]}\n            Component={({fields: [hedgeRatio, portfolioValue]}) =>\n                <Typography variant={'body1'}>\n                    Notional amount to hedge: {formatDollars.format(portfolioValue * hedgeRatio)}\n                </Typography>}/>\n\n        <Controller\n            name={FIELDS.delta}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfo\n                    {...field}\n                    error={Boolean(error)}\n                    info={'Delta of each spread with OTM 8.6% put sold, per option e.g. 0.250'}\n                    label={'Delta'}\n                    helperText={error?.message}\n                    variant={'outlined'}/>}/>\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.portfolioValue, FIELDS.hedgeRatio, FIELDS.delta, FIELDS.spyPrice]}\n            Component={({fields: [portfolioValue, hedgeRatio, delta, spyPrice]}) =>\n                <Typography variant={'body1'}>\n                    Number of spreads required (i.e. standard option contracts):\n                    {formatDecimals.format(portfolioValue * hedgeRatio / (delta * spyPrice * 100))}\n                </Typography>}\n        />\n\n    </Container>\n};\n\n/*Testing case:\n*\n* Beta-weighted portfolio value in USD: 1000000\n* Current price of SPY: 300\n* OTM Put Strike to sell: 274.2\n* Hedge ratio: 0.47\n* Notional amount: 470000.0\n* Delta of 8.6% OTM put spread: 0.21\n* Number of spreads required (i.e. option contracts): 74.60317460317461\n* */","import TextField from \"@material-ui/core/TextField\";\nimport {CircularProgress, IconButton, InputAdornment, Tooltip} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CachedIcon from '@material-ui/icons/Cached';\nimport {noop} from \"../../shared/util\";\nimport React from \"react\";\n\nexport const TextFieldRefreshLoading = ({onChange, onRefresh, loading, tooltipText = '', onOpen = noop, ...props}) => {\n\n    return <TextField\n        {...props}\n        onChange={onChange}\n        InputProps={{\n            ...props.InputProps,\n            endAdornment:\n                <InputAdornment position={'end'}>\n                    {props.value &&\n                    <ClearIcon style={{cursor: 'pointer'}} onClick={() => onChange('')}/>}\n                    <InputAdornment position={'end'}>\n                        <Tooltip\n                            onOpen={onOpen}\n                            arrow\n                            enterTouchDelay={100}\n                            interactive\n                            title={tooltipText}>\n                            <IconButton onClick={onRefresh}>\n                                {loading ? <CircularProgress size={20}/> : <CachedIcon/>}\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>\n                    {props.InputProps?.endAdornment}\n                </InputAdornment>\n        }}\n    />\n};","import { ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { theme } from \"../../app/theme\";\nimport { BACKGROUND_COLOR } from \"./backgroundScreen\";\nimport { Skeleton } from \"@material-ui/lab\";\n\nexport const StyledListItem = styled(ListItem)`\n  ::before {\n    margin-left: -16px;\n    content: '';\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: -1;\n    ${({ $hideBackground }) => $hideBackground ? '' : BACKGROUND_COLOR};\n  }\n\n  ${theme.breakpoints.up('md')} {\n    ${({ $reserveSpace }) => $reserveSpace ? 'padding-right: 48px' : 'padding-right: 16px'};\n  }\n  \n  .MuiListItem-container:hover & {\n    padding-right: 48px;\n    \n    // Highlight entire item even when secondary action is hovered\n    background-color: rgba(255, 255, 255, 0.08);\n  }\n`;\nexport const StyledListItemSecondaryAction = styled(ListItemSecondaryAction)`\n  ${theme.breakpoints.up('md')}  {\n    display: none;\n  }\n\n  .MuiListItem-container:hover & {\n    display: block;\n  }\n`;\n\nexport const ItemSkeleton = () => <ListItemText\n    primary={<Skeleton animation={'wave'} width={'min(80%, 300px)'} />}\n    secondary={<Skeleton animation={'wave'} width={'min(60%, 240px)'} />} />\n\nexport const ListSkeleton = () => <ListItemText\nprimary={<Skeleton animation={'wave'} width={'min(80%, 300px)'} />}/>","import { nanoid } from '@reduxjs/toolkit';\nimport { baseApi } from \"../../app/network-core/baseApi\";\n\nbaseApi.enhanceEndpoints({\n    addTagTypes: ['lists', 'items']\n})\n\n/* Optimistic updates for update and delete operations */\nconst listApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        getLists: build.query({\n            query: () => `tasks/tasklists/`,\n            providesTags: ['lists']\n        }),\n\n        createList: build.mutation({\n            query: ({ title }) => ({\n                url: `tasks/tasklists/`,\n                method: 'POST',\n                body: { title }\n            }),\n\n            /* Invalidate cache for now since I'm not sure if lists are sorted\n            alphabetically by the server */\n            invalidatesTags: ['lists']\n        }),\n\n        updateList: build.mutation({\n            query: ({ id, title }) => ({\n                url: `tasks/tasklists/${id}/`,\n                method: 'PUT',\n                body: { id, title }\n            }),\n\n            /* Optimistically update */\n            onQueryStarted: ({ id, ...data }, { dispatch, queryFulfilled }) => {\n                let result = dispatch(listApi.util.updateQueryData('getLists', undefined, draft => {\n                    let obj = draft.find(e => e.id === id)\n                    Object.assign(obj, data)\n                }))\n                queryFulfilled.catch(result.undo)\n            }\n        }),\n\n        deleteList: build.mutation({\n            query: ({ id }) => ({\n                url: `tasks/tasklists/${id}/`,\n                method: 'DELETE',\n            }),\n\n            /* Optimistically delete */\n            onQueryStarted: ({ id }, { dispatch, queryFulfilled }) => {\n                let result = dispatch(listApi.util.updateQueryData('getLists', undefined, draft =>\n                    draft.filter(e => e.id !== id)))\n                queryFulfilled.catch(result.undo)\n            }\n        }),\n\n        getItems: build.query({\n            query: list => `tasks/tasklists/${list}/tasks/`,\n            providesTags: (_result, _error, list) => [{ type: 'lists', id: list }],\n        }),\n\n        createItem: build.mutation({\n            query: ({ list, title, notes }) => ({\n                url: `tasks/tasklists/${list}/tasks/`,\n                method: 'POST',\n                body: { title, notes, tasklist: list }\n            }),\n\n            onQueryStarted: ({ list }, { dispatch, queryFulfilled }) => {\n                /* Optimistically show skeleton */\n                let id = nanoid()\n                let result = dispatch(listApi.util.updateQueryData('getItems', list, draft => {\n                    draft.unshift({ isSkeleton: true, id })\n                }))\n\n                /* Update getItems with the newly created item on success, and remove skeleton*/\n                queryFulfilled\n                    .then(({ data }) => {\n                        dispatch(listApi.util.updateQueryData('getItems', list, draft => {\n                            draft.unshift(data);\n                            let idx = draft.findIndex(e => e.id === id)\n                            if (idx !== -1)\n                                draft.splice(idx, 1)\n                        }));\n                    })\n                    .catch(result.undo)\n            }\n        }),\n\n        updateItem: build.mutation({\n            query: ({ list, id, title, notes }) => ({\n                url: `tasks/tasklists/${list}/tasks/${id}/`,\n                method: 'PUT',\n                body: { title, notes, tasklist: list }\n            }),\n\n            /* Optimistically update the item (it will exist in cache IF createItem was successful,\n                due to onQueryStarted in createItem) */\n            onQueryStarted: ({ list, id, ...data }, { dispatch, queryFulfilled }) => {\n                let result = dispatch(listApi.util.updateQueryData('getItems', list, draft => {\n                    let obj = draft.find(e => e.id === id)\n                    Object.assign(obj, data)\n                }))\n                queryFulfilled.catch(result.undo)\n            }\n        }),\n\n        deleteItem: build.mutation({\n            query: ({ list, id }) => ({\n                url: `tasks/tasklists/${list}/tasks/${id}/`,\n                method: 'DELETE',\n            }),\n\n            /* Optimistically delete item */\n            onQueryStarted: ({ list, id }, { dispatch, queryFulfilled }) => {\n                let result = dispatch(listApi.util.updateQueryData('getItems', list, draft => draft.filter(e => e.id !== id)))\n                queryFulfilled.catch(result.undo)\n            }\n        })\n    })\n})\n\n\n\nexport const {\n    useGetListsQuery,\n    useCreateListMutation,\n    useUpdateListMutation,\n    useDeleteListMutation,\n\n    useGetItemsQuery,\n    useCreateItemMutation,\n    useUpdateItemMutation,\n    useDeleteItemMutation,\n} = listApi","import { IconButton, ListItemText, Menu, MenuItem } from \"@material-ui/core\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { useState } from 'react';\nimport { StyledListItem, StyledListItemSecondaryAction } from \"../../shared/components/styledListItem\";\nimport { useDeleteListMutation, useUpdateListMutation } from \"./listApi\";\n\nexport const List = ({ onClick, list: { title, id } }) => {\n\n    const [deleteList] = useDeleteListMutation()\n    const [updateList] = useUpdateListMutation()\n\n    const [anchorEl, setAnchorEl] = useState()\n\n    const stopPropagation = func => e => {\n        e.stopPropagation()\n        func(e)\n    }\n\n    const editTitle = () => {\n        setAnchorEl(undefined)\n        let newTitle = prompt('Enter new title:', title)\n        if (newTitle) {\n            updateList({title: newTitle, id})\n        }\n    }\n\n    return <StyledListItem\n        button\n        onClick={onClick}\n        $hideBackground\n        $reserveSpace={false}>\n        <Menu\n            anchorEl={anchorEl}\n            open={!!anchorEl}\n            onClose={stopPropagation(e => setAnchorEl(undefined))}>\n            <MenuItem onClick={stopPropagation(editTitle)}>Edit</MenuItem>\n            <MenuItem onClick={stopPropagation(() => deleteList({id}))}>Delete</MenuItem>\n        </Menu>\n        <ListItemText\n            primary={title}\n            primaryTypographyProps={{ noWrap: true }}\n        />\n        <StyledListItemSecondaryAction>\n            <IconButton\n                edge={'end'}\n                onClick={stopPropagation(e => setAnchorEl(e.currentTarget))}>\n                <MoreVertIcon />\n            </IconButton>\n        </StyledListItemSecondaryAction>\n\n    </StyledListItem>\n};\n","import styled from \"styled-components\";\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\nimport { Dialog } from \"@material-ui/core\";\nimport { OverlayScrollbarOptions, theme } from \"../../app/theme\";\n\nconst StyledDialog = styled(Dialog)`\n  .MuiDialog-paper {\n    width: min(100vw - 32px, ${({ $maxWidth }) => $maxWidth}px);\n  }\n\n  // Blur effect only if supported\n  @supports (backdrop-filter: blur(5px)) {\n    .MuiDialog-container {\n      backdrop-filter: blur(5px);\n    \n    }\n\n    .MuiDialog-paper {\n      background: none;\n    }\n  }\n\n  .MuiDialog-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n\n  // Reduce margins when on mobile\n  ${theme.breakpoints.down('sm')} {\n\n    // Extend width\n    .MuiDialog-paperWidthFalse {\n      max-width: calc(100% - 32px);\n    }\n\n    // Extend height\n    .MuiDialog-paperScrollPaper {\n      max-height: 100%;\n    }\n\n    // Add some margin to the top, and remove bottom margin settings\n    .MuiDialog-paper {\n      margin: 16px 0 0;\n    }\n\n  }\n`;\n\nconst StyledOverlayScrollbarsComponent = styled(OverlayScrollbarsComponent)`\n  .os-viewport {\n    overscroll-behavior: contain;\n  }\n`;\n\n/* Dialog with overlayscrollbars (does not scroll footer component)*/\nexport const DialogBlurResponsive = ({ children, footer, maxWidth = 800, ...props }) =>\n  <StyledDialog\n    maxWidth={false}\n    $maxWidth={maxWidth}\n    disableScrollLock\n    {...props}>\n    <StyledOverlayScrollbarsComponent\n      options={OverlayScrollbarOptions}\n      className={'os-host-flexbox'}>\n      {children}\n    </StyledOverlayScrollbarsComponent>\n    {footer}\n  </StyledDialog>;","import CodeMirror from \"codemirror/lib/codemirror\";\n\nconst updateBottomMargin = cm => {\n\n    // Fixed 300px of virtual height if lineCount > 1\n    let padding = '';\n\n    if (cm.lineCount() > 1) {\n        // const totalH = cm.display.scroller.clientHeight - 30,\n        //     lastLineH = cm.getLineHandle(cm.lastLine()).height;\n        // padding = (totalH - lastLineH) + \"px\";\n        padding = '300px';\n    }\n\n    if (cm.state.scrollPastEndPadding !== padding) {\n        cm.state.scrollPastEndPadding = padding;\n        cm.display.lineSpace.parentNode.style.paddingBottom = padding;\n        cm.off(\"refresh\", updateBottomMargin);\n        cm.setSize();\n        cm.on(\"refresh\", updateBottomMargin);\n    }\n};\n\nconst onChange = (cm, change) => {\n    if (CodeMirror.changeEnd(change).line === cm.lastLine())\n        updateBottomMargin(cm);\n};\n\n\nCodeMirror.defineOption(\"scrollPastEnd\", false, (cm, val, old) => {\n\n    // I think this turns off the mode\n    if (old && old !== CodeMirror.Init) {\n        cm.off(\"change\", onChange);\n        cm.off(\"refresh\", updateBottomMargin);\n        cm.display.lineSpace.parentNode.style.paddingBottom = \"\";\n        cm.state.scrollPastEndPadding = null;\n    }\n\n    if (val) {\n        cm.on(\"change\", onChange);\n        cm.on(\"refresh\", updateBottomMargin);\n        updateBottomMargin(cm);\n    }\n});","import {UnControlled as CodeMirror} from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css'\nimport './codemirror.css'\nimport 'codemirror/mode/gfm/gfm'\nimport 'codemirror/addon/edit/closebrackets'\nimport 'codemirror/addon/edit/matchbrackets'\nimport 'codemirror/addon/selection/mark-selection'\nimport 'codemirror/addon/selection/active-line'\nimport 'codemirror/addon/display/autorefresh'\nimport './scrollPastEnd'\nimport {useEffect, useState} from \"react\";\n\n/*\n * Uncontrolled component. Modifying defaultValue after first mount will not trigger re-renders.\n */\nexport const MarkdownEditor = ({defaultValue, onChange}) => {\n\n    const [instance, setInstance] = useState(null);\n    const [initialValue, setInitialValue] = useState();\n    const [loaded, setLoaded] = useState(false);\n\n    /*Necessary to fix wrong Codemirror-sizer instance when mounted within\n    an OverlayScrollbars component with lineWrapping: true*/\n    useEffect(() => instance?.refresh(), [instance]);\n\n    // Set default value on first mount, and ignore all further updates\n\n    useEffect(() => {\n        setInitialValue(defaultValue);\n        setLoaded(true)\n        // eslint-disable-next-line\n    }, []);\n\n    return loaded\n        ? <CodeMirror\n            value={initialValue}\n            options={{\n                theme: 'codemirror',\n                mode: {\n                    name: 'gfm',\n                    highlightFormatting: true,\n                },\n                lineNumbers: true,\n                lineWrapping: true,\n                indentWithTabs: true,\n                viewportMargin: Infinity,\n                autoCloseBrackets: true,\n                matchBrackets: true,\n                styleSelectedText: true,\n                styleActiveLine: true,\n                autoRefresh: true,\n                scrollPastEnd: true\n\n            }}\n            editorDidMount={editor => setInstance(editor)}\n            onChange={(editor, data, newValue) => {\n\n                onChange(newValue);\n            }}\n        />\n        : null\n};\n","import { debounce } from 'lodash';\nimport { useCallback, useRef } from \"react\";\n\nconst defaultState = { id: null, data: null, pendingData: false, creationInProgress: false, flushing: true }\n\n/**\n * Autosave hook.\n * Saves items via updateItem on debounced intervals.\n * Calls createItem if id is not provided.\n * Optionally deletes item on flush.\n * \n * Note: provided functions must be memoized, otherwise\n * the debounced onChange function will not be referentially stable,\n * and cause unnecessary re-renders\n * \n * Provides:\n * onChange: data => void\n * flush: () => void (flush all pending debounced onChange callbacks)\n * \n * Required props:\n * updateItem: (id, data) => Promise || void\n * \n * Required if id is null:\n * createItem: (data) => id: Promise<String>\n * \n * Optional, delete item if empty, and only on flush():\n * deleteItem: (id) => Promise || void\n * \n * Required if deleteItem is provided:\n * itemIsEmpty: data => Boolean\n */\nexport const useAutosave = ({\n    id = null,\n    createItem,\n    updateItem,\n    deleteItem,\n    itemIsEmpty = () => false,\n    wait = 1000,\n    maxWait,\n}) => {\n\n    /* Validate arguments */\n    if (typeof updateItem !== 'function') {\n        throw new Error(`updateItem must be a function, but got ${typeof updateItem}`)\n    } else if (!id && typeof createItem !== 'function') {\n        throw new Error(`createItem must be provided if id is null/undefined, but got ${typeof createItem}`)\n    } else if (!!deleteItem && typeof deleteItem !== 'function') {\n        throw new Error(`deleteItem must be a function, but got ${typeof deleteItem}`)\n    } else if (!!deleteItem && typeof itemIsEmpty !== 'function') {\n        throw new Error(`itemIsEmpty must be provided with deleteItem, but got ${typeof itemIsEmpty}`)\n    }\n\n    /* Store a copy of the item's id (updated on props change via useEffect) */\n    const state = useRef({ ...defaultState, id })\n\n    /* Update item (or delete, if flushing) */\n    const updateOrDelete = useCallback((id, data) => {\n        if (state.current.flushing && itemIsEmpty(data)) {\n            deleteItem(id)\n            state.current.data = null // Clear data so that a second deleteItem won't be called\n        } else {\n            updateItem(id, data)\n        }\n    }, [deleteItem, itemIsEmpty, updateItem])\n\n    const _onChange = useCallback(async data => {\n        state.current.data = data\n\n        if (state.current.id) {\n\n            /* id was supplied or item was created, update*/\n            updateOrDelete(state.current.id, data)\n\n        } else if (state.current.creationInProgress) {\n\n            /* Flag data for update later when id is available */\n            state.current.pendingData = true\n\n        } else {\n            /* New item, and it is empty, and we are flushing:\n            don't create the item */\n            if (state.current.flushing && itemIsEmpty(data)) return\n\n            /* id is null, and creation has not yet occurred - create item */\n            state.current.creationInProgress = true\n            let newId = await createItem(data)\n            state.current.creationInProgress = false\n            state.current.id = newId\n\n            /* Execute and clear pendingData if any*/\n            if (state.current.pendingData) {\n                updateOrDelete(newId, state.current.data)\n                state.current.pendingData = false\n            }\n        }\n    }, [createItem, itemIsEmpty, updateOrDelete])\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const onChange = useCallback(\n        debounce(_onChange, wait, Object.assign({}, maxWait ? { maxWait } : undefined)),\n        [_onChange, wait, maxWait]\n    )\n\n    const flush = useCallback(() => {\n\n        state.current.flushing = true\n        onChange.flush()\n\n        /* Bail if item doesn't exist, e.g. flush() was called on a\n         new item where id = null and _onChange wasn't called */\n        if (!id && !state.current.id) return\n\n        /* onChange.flush() will not execute deleteItem if no changes are in the queue.\n        This manually checks and fires a delete if necessary. */\n        if (state.current.data && itemIsEmpty(state.current.data)) {\n            deleteItem(state.current.id)\n        }\n    }, [deleteItem, id, itemIsEmpty, onChange])\n\n    return {\n        onChange,\n        flush\n    }\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nexport const listsSliceName = 'lists'\n\nconst initialState = {\n    currentList: null\n}\n\nexport const listsSlice = createSlice({\n    name: listsSliceName,\n    initialState,\n    reducers: {\n        setCurrentList: (state, {payload}) => void (state.currentList = payload)\n    }\n})\n\nexport const {\n    setCurrentList\n} = listsSlice.actions\n\nexport const selectCurrentList = state => state[listsSliceName].currentList","import { Button, CircularProgress, TextField, Tooltip, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { parseJSON } from \"date-fns\";\nimport { useMemo } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { DialogBlurResponsive } from \"../../shared/components/dialogBlurResponsive\";\nimport { MarkdownEditor } from \"../../shared/components/MarkdownEditor/MarkdownEditor\";\nimport { useAutosave } from \"../../shared/useAutosave\";\nimport { formatDistanceToNowPretty } from \"../../shared/util\";\nimport { useCreateItemMutation, useDeleteItemMutation, useUpdateItemMutation } from \"./listApi\";\nimport { selectCurrentList } from \"./listsSlice\";\n\nconst FooterRight = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-left: 10px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 5px 0;\n`;\n\n/*If editingTask.id is null, a new task is being created*/\nexport const EditItem = ({ closeEdit, editingItem }) => {\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const currentListId = useSelector(selectCurrentList)?.id\n\n    const [createItem, { isLoading: isLoadingCreateItem, startedTimeStamp: createItemStarted }] = useCreateItemMutation()\n    const [updateItem, { isLoading: isLoadingUpdateItem, startedTimeStamp: updateItemStarted }] = useUpdateItemMutation()\n    const [deleteItem, { isLoading: isLoadingDeleteItem }] = useDeleteItemMutation()\n\n    /* Purely for within the dialog - the appBar already shows a global loading indicator */\n    const loading = isLoadingCreateItem || isLoadingUpdateItem || isLoadingDeleteItem\n\n    const useAutosaveOptions = useMemo(() => ({\n        id: editingItem?.id,\n        updateItem: (id, data) => updateItem({ list: currentListId, id, ...data }),\n        createItem: data => createItem({ list: currentListId, ...data }).unwrap().then(res => res.id),\n        deleteItem: id => deleteItem({ list: currentListId, id }),\n        itemIsEmpty: data => !data.title && !data.notes,\n    }),[createItem, currentListId, deleteItem, editingItem?.id, updateItem])\n\n\n    const { onChange, flush } = useAutosave(useAutosaveOptions)\n\n    const initialTitle = editingItem.title || '';\n    const initialNotes = editingItem.notes || '';\n\n    const { register, getValues, setValue } = useForm({\n        defaultValues: {\n            'title': initialTitle,\n            'notes': initialNotes,\n        }\n    });\n\n    register('title');\n    register('notes');\n\n    const onClose = () => {\n        flush()\n        closeEdit()\n    }\n\n    /* If there is any update, it must be after a create.\n    startedTimeStamp are used because fulfilledTimeStamp is reset when a \n    new mutation is requested, causing the UI to default to editingItem.updated\n    momentarily.*/\n    const lastSavedTimeString =\n        updateItemStarted ?\n            formatDistanceToNowPretty(updateItemStarted) :\n            createItemStarted ?\n                formatDistanceToNowPretty(createItemStarted) :\n                editingItem.updated ?\n                    formatDistanceToNowPretty(parseJSON(editingItem.updated)) :\n                    ''\n\n    /* Prefer operations with the latest possible time */\n    const lastCreatedTimeString =\n        createItemStarted ?\n            formatDistanceToNowPretty(createItemStarted) :\n            editingItem.created ?\n                formatDistanceToNowPretty(parseJSON(editingItem.created)) :\n                ''\n\n    return <DialogBlurResponsive\n        open\n        onClose={onClose}\n        footer={<Footer>\n            <Tooltip\n                arrow\n                enterTouchDelay={100}\n                interactive\n                title={lastCreatedTimeString ?\n                    `Created ${lastCreatedTimeString}` :\n                    'Not yet created'}>\n                <Typography variant={'body2'} color={'textSecondary'}>\n                    {lastSavedTimeString ?\n                        `Last saved ${lastSavedTimeString}` :\n                        'New item'}\n                </Typography>\n            </Tooltip>\n            <FooterRight>\n                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                <Button\n                    variant={'text'}\n                    color={'primary'}\n                    onClick={onClose}>\n                    Close\n                </Button>\n            </FooterRight>\n        </Footer>}>\n\n        <StyledTextField\n            label='Title'\n            multiline\n            fullWidth\n            name={'title'}\n            autoFocus={!initialTitle && !initialNotes}\n            defaultValue={initialTitle}\n            variant={'outlined'}\n            onChange={e => {\n                setValue('title', e.target.value);\n                onChange(getValues())\n            }}\n        />\n        {fullScreen\n            ? <StyledTextField\n                label='Notes'\n                multiline\n                fullWidth\n                defaultValue={getValues('notes')}\n                variant={'outlined'}\n                onChange={e => {\n                    setValue('notes', e.target.value);\n                    onChange(getValues())\n                }}\n            />\n            : <MarkdownEditor\n                defaultValue={getValues('notes')}\n                onChange={newVal => {\n                    setValue('notes', newVal);\n                    onChange(getValues())\n                }} />\n        }\n    </DialogBlurResponsive>\n};\n","import { IconButton, ListItemText } from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React from 'react';\nimport { useSelector } from \"react-redux\";\nimport { ItemSkeleton, StyledListItem, StyledListItemSecondaryAction } from \"../../shared/components/styledListItem\";\nimport { useDeleteItemMutation } from \"./listApi\";\nimport { selectCurrentList } from \"./listsSlice\";\n\n/**\n * Will show a skeleton if item.isSkeleton is true\n */\nexport const Item = ({ setEditingItem, item }) => {\n    const { id, title, notes, isSkeleton } = item\n    const [deleteItem] = useDeleteItemMutation()\n    const currentListId = useSelector(selectCurrentList)?.id\n\n    if (isSkeleton) {\n        return <StyledListItem>\n            <ItemSkeleton />\n        </StyledListItem>\n    }\n\n    return <StyledListItem\n        button\n        onClick={() => setEditingItem(item)}\n        $reserveSpace={true}>\n        <ListItemText\n            primary={title}\n            secondary={notes}\n            secondaryTypographyProps={{ noWrap: true }} />\n        <StyledListItemSecondaryAction>\n            <IconButton\n                edge={'end'}\n                onClick={e => {\n                    e.stopPropagation();\n                    deleteItem({ list: currentListId, id })\n                }}>\n                <DeleteIcon />\n            </IconButton>\n        </StyledListItemSecondaryAction>\n\n    </StyledListItem>;\n}","import { Fab, List } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport { Virtuoso } from 'react-virtuoso/dist';\nimport styled from 'styled-components';\nimport { ItemSkeleton, StyledListItem } from \"../../shared/components/styledListItem\";\nimport { EditItem } from \"./EditItem\";\nimport { Item } from \"./Item\";\nimport { useGetItemsQuery } from \"./listApi\";\nimport { selectCurrentList } from \"./listsSlice\";\n\nconst StyledFab = styled(Fab)`\n  position: fixed;\n  z-index: 1;\n  bottom: 20px;\n  right: 20px;\n`;\n\nconst StyledDiv = styled.div`\n  max-width: 800px;\n  height: 100%;\n`;\n\nexport const ListItems = () => {\n\n    const currentList = useSelector(selectCurrentList)\n    const [editingItem, setEditingItem] = useState(null);\n    const virtuosoRef = useRef();\n\n    const { data: items, isFetching } = useGetItemsQuery(currentList?.id, { skip: !currentList })\n\n    useEffect(() => {\n        if (!currentList) return;\n\n        // Prevent virtuoso from remembering the scroll position of the previously viewed list\n        if (virtuosoRef.current) {\n            virtuosoRef.current.scrollToIndex({ align: 'top', behavior: 'smooth' })\n        }\n        // eslint-disable-next-line\n    }, [currentList]);\n\n    if (isFetching) return <List\n        disablePadding\n        dense>\n        {[...Array(3)].map(() => <StyledListItem>\n            <ItemSkeleton />\n        </StyledListItem>)}\n    </List>\n\n    const list = items.map(e => <Item\n        setEditingItem={setEditingItem}\n        key={e.id}\n        item={e} />);\n\n    return <>\n        <StyledFab\n            color={'primary'}\n            onClick={() => setEditingItem({\n                id: null,\n                title: '',\n                notes: '',\n            })}>\n            <AddIcon />\n        </StyledFab>\n\n        {editingItem && <EditItem\n            editingItem={editingItem}\n            closeEdit={() => void setEditingItem(null)} />}\n\n        <StyledDiv>\n            <Virtuoso\n                ref={virtuosoRef}\n                totalCount={items.length}\n                itemContent={index => list[index]}\n                components={{\n                    List: forwardRef(({ children, ...props }, listRef) =>\n                        <List\n                            {...props}\n                            disablePadding\n                            dense\n                            ref={listRef}>\n                            {children}\n                        </List>)\n                }} />\n        </StyledDiv>\n    </>\n};","import { Button, CircularProgress, IconButton, List as MuiList, Typography } from \"@material-ui/core\";\nimport SyncIcon from '@material-ui/icons/Sync';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Loading } from \"../../shared/components/loading\";\nimport { List } from \"./List\";\nimport { useCreateListMutation, useGetItemsQuery, useGetListsQuery } from \"./listApi\";\nimport { ListItems } from \"./ListItems\";\nimport { selectCurrentList, setCurrentList } from \"./listsSlice\";\n\nconst StyledButton = styled(Button)({\n    margin: '10px',\n});\n\nexport const Lists = ({ setDrawerContent, setTitleContent }) => {\n\n    const dispatch = useDispatch()\n\n    // There is a chance the listId stored is invalid - useEffect below checks for this\n    const currentList = useSelector(selectCurrentList)\n\n    const { data: lists, isFetching: isLoadingLists, refetch: refetchLists } = useGetListsQuery()\n    const { isFetching: isFetchingGetItems, refetch: refetchItems } = useGetItemsQuery(currentList?.id, { skip: !currentList })\n    const [createList] = useCreateListMutation()\n\n    /*Show Lists in app-bar drawer*/\n\n    useEffect(() => void setDrawerContent(<MuiList disablePadding dense>\n        {isLoadingLists ?\n            <div style={{ display: 'flex', 'justifyContent': 'center' }}>\n                <CircularProgress size={20} />\n            </div> :\n            [\n                <StyledButton\n                    variant={'contained'}\n                    color={'secondary'}\n                    onClick={() => {\n                        let title = prompt('Enter title:');\n                        if (title) {\n                            createList({ title })\n                        }\n                    }}>\n                    Create new Tasklist\n                </StyledButton>,\n\n                lists?.map(list => <List\n                    key={list.id}\n                    list={list}\n                    onClick={() => dispatch(setCurrentList(list))} />)\n            ]}\n    </MuiList>),\n        [createList, dispatch, isLoadingLists, lists, setDrawerContent])\n\n    useEffect(() => void setTitleContent(<>\n        <Typography variant={\"h6\"} noWrap>\n            {currentList?.title}\n        </Typography>\n        <IconButton\n            onClick={() => {\n                refetchLists()\n                refetchItems()\n            }}\n            disabled={isFetchingGetItems}>\n            <SyncIcon />\n        </IconButton>\n    </>), [currentList, isFetchingGetItems, refetchItems, refetchLists, setTitleContent])\n\n    if (!currentList) return <Loading\n        fullscreen={false}\n        showSpinner={false}\n        message={'Select a list'} />\n\n\n    return <ListItems />\n}\n    ;\n","// /*Add new modules here*/\n// import {Lists} from \"../modules/Lists/Lists\";\n// import {Literature} from \"../modules/Literature/Literature\";\n// import {Account} from \"../modules/Account/Account\";\n// import {HomeAutomation} from \"../modules/HomeAutomation/HomeAutomation\";\n// import {DVR} from \"../modules/Dvr/DVR\";\n// import {OptionHedgeCalculator} from \"../modules/OptionHedgeCalculator/OptionHedgeCalculator\";\nimport {Testing} from \"../../modules/Testing/Testing\";\nimport {PasswordTools} from \"../../modules/PasswordTools/PasswordTools\";\nimport {HomeAutomation} from \"../../modules/HomeAutomation/HomeAutomation\";\nimport {OptionHedgeCalculator} from \"../../modules/OptionHedgeCalculator/OptionHedgeCalculator\";\nimport {Lists} from \"../../modules/Lists/Lists\";\n\nexport const MODULES = {\n    LISTS: {\n        menuName: 'Lists',\n        onlySuperUser: false,\n        element: Lists\n    },\n    // LITERATURE: {\n    //     menuName: 'Literature',\n    //     onlySuperUser: false,\n    //     element: Literature\n    // },\n    // ACCOUNT: {\n    //     menuName: 'Account',\n    //     onlySuperUser: false,\n    //     element: Account\n    // },\n    PASSWORDS: {\n        menuName: 'Password Tools',\n        onlySuperUser: false,\n        element: PasswordTools,\n    },\n    HOME_AUTOMATION: {\n        menuName: 'Home Automation',\n        onlySuperUser: true,\n        element: HomeAutomation\n    },\n    // DVR: {\n    //     menuName: 'DVR',\n    //     onlySuperUser: true,\n    //     element: DVR\n    // },\n    OPTION_HEDGE_CALCULATOR: {\n        menuName: 'Option Hedge Calculator',\n        onlySuperUser: false,\n        element: OptionHedgeCalculator\n    },\n    TEST: {\n        menuName: 'Testing',\n        onlySuperUser: true,\n        element: Testing\n    }\n}","import styled from \"styled-components\";\nimport {BackgroundScreenRounded} from \"../../shared/components/backgroundScreen\";\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectLoginStatus, setCurrentModule} from \"../appSlice\";\nimport {MODULES} from \"./modules\";\nimport {Button} from \"@material-ui/core\";\nimport React from 'react'\n\nconst GDOCS_ATTRACTIONS_URL = 'https://docs.google.com/document/d/1MS6oLLnTWWhdS_FEr1vudNfsnGBMT2V1GtrmHzDd6s0/edit#';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  margin: 0 auto;\n  max-width: 300px;\n`;\n\nconst InnerContainer = styled(BackgroundScreenRounded)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)({\n    margin: '10px',\n});\n\n/*Also handles persisting of CURRENT_MODULE in localstorage and updates redux store accordingly*/\nexport const ModuleSelect = () => {\n\n    const dispatch = useDispatch()\n    const {isSuperUser} = useSelector(selectLoginStatus)\n\n    const modules = Object.entries(MODULES)\n        .filter(([_, {onlySuperUser}]) => isSuperUser || !onlySuperUser)\n        .map(([id, {menuName}]) =>\n            <StyledButton\n                variant={'outlined'}\n                color={'primary'}\n                key={id}\n                onClick={() => dispatch(setCurrentModule({id}))}>\n                {menuName}\n            </StyledButton>\n        )\n\n    /*Todo get this URL from the server in future*/\n    modules.push(isSuperUser && <StyledButton\n        variant={'outlined'}\n        color={'primary'}\n        key={'attractions'}\n        onClick={() => window.open(GDOCS_ATTRACTIONS_URL, '_blank', 'noopener,noreferrer')}\n        endIcon={<CallMadeIcon/>}>\n        Attractions and Food\n    </StyledButton>)\n\n    return <FlexContainer>\n        <InnerContainer>\n            {modules}\n        </InnerContainer>\n    </FlexContainer>\n};","import {Badge, Chip, Divider, IconButton, ListItem, ListItemText, Popover, Typography} from '@material-ui/core'\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport {useSelector} from \"react-redux\";\nimport {selectNotificationsSorted} from \"./notificationSlice\";\nimport {formatDistanceToNowPretty} from \"../../shared/util\";\n\nconst StyledChip = styled(Chip)`\n  margin-right: 5px;\n  cursor: pointer;\n`;\n\nconst StyledPopover = styled(Popover)`\n  .MuiPopover-paper {\n    max-width: min(calc(100% - 32px), 600px);\n  }\n`;\n\nconst StyledSpan = styled.div`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n`;\n\nexport const NotificationMenu = () => {\n\n    const notifications = useSelector(selectNotificationsSorted)\n\n    const [anchorEl, setAnchorEl] = useState();\n\n    const handleNotificationClick = e => setAnchorEl(e.currentTarget);\n    const onClose = () => setAnchorEl(null);\n\n    return <>\n        <IconButton\n            onClick={handleNotificationClick}\n        >\n            <Badge badgeContent={notifications.length} color={'error'}>\n                <NotificationsIcon/>\n            </Badge>\n        </IconButton>\n        <StyledPopover\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={onClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n            {notifications.length > 0 ?\n                notifications.map(e => <React.Fragment key={e.id}>\n                    <ListItem button>\n                        <ListItemText\n                            disableTypography\n                            primary={<>\n                                <StyledChip\n                                    color={'primary'}\n                                    label={e.source}/>\n                                {e.title}\n                            </>}\n                            secondary={<>\n                                <StyledSpan>{e.content}</StyledSpan>\n                                <Typography variant={'body2'}\n                                            align={'right'}>\n                                    {formatDistanceToNowPretty(new Date(e.timestamp))}\n                                </Typography>\n                            </>}/>\n                    </ListItem>\n                    <Divider/>\n                </React.Fragment>) :\n                <ListItem>\n                    <ListItemText\n                        primary={'No new notifications'}/>\n                </ListItem>}\n        </StyledPopover>\n    </>\n\n};","import {OverlayScrollbarOptions} from \"../theme\";\nimport {CircularProgress, Drawer, List, ListItem, ListItemIcon, ListItemText, useMediaQuery} from \"@material-ui/core\";\nimport {selectCurrentModule, setCurrentModule} from \"../appSlice\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {OverlayScrollbarsComponent} from \"overlayscrollbars-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useLogoutMutation} from \"../auth/authApi\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\n\n\nconst OverlayScrollbarsWithMaxWidth = styled(OverlayScrollbarsComponent)`\n  width: ${({$width})=>$width}px;\n  max-width: 80vw;\n`\n\nconst AppNameDiv = styled.div`\n  font-family: 'Starcraft', serif;\n  font-size: 20px;\n  margin: 0 auto;\n  text-align: center;\n  cursor: default;\n`;\n\n\nconst TransparentDrawer = styled(Drawer)`\n  .MuiDrawer-paper {\n    ${({$transparent}) => $transparent && BACKGROUND_COLOR};\n  }\n`;\n\nexport const AppBarDrawer = ({drawerOpen, drawerWidth, setDrawerOpen, sidebarName, children}) => {\n\n    const dispatch = useDispatch()\n    const {id} = useSelector(selectCurrentModule)\n\n    const [logout, {isLoading}] = useLogoutMutation()\n\n    const theme = useTheme();\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const closeAppBar = () => setDrawerOpen(false)\n\n    return <TransparentDrawer\n        $transparent={!mobile}\n        onClose={closeAppBar}\n        open={!mobile || drawerOpen}\n        variant={mobile ? 'temporary' : 'permanent'}>\n        <OverlayScrollbarsWithMaxWidth\n            $width={drawerWidth}\n            options={OverlayScrollbarOptions}\n            className={'os-host-flexbox'}>\n            <List onClick={closeAppBar}>\n                <ListItem>\n                    <AppNameDiv>{sidebarName}</AppNameDiv>\n                </ListItem>\n                {id && <ListItem button onClick={() => dispatch(setCurrentModule())}>\n                    <ListItemIcon>\n                        <ArrowBackIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={'Back to Apps'}/>\n                </ListItem>}\n                {children}\n                <ListItem\n                    button\n                    onClick={e => {\n                        e.stopPropagation()\n                        logout()\n                    }}>\n                    <ListItemIcon>\n                        <MeetingRoomIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={'Logout'}/>\n                    {isLoading && <CircularProgress size={20}/>}\n                </ListItem>\n            </List>\n        </OverlayScrollbarsWithMaxWidth>\n    </TransparentDrawer>;\n\n}","import { useSelector } from \"react-redux\"\nimport { selectPendingNetworkActions } from \"../appSlice\"\nimport { CircularProgress } from '@material-ui/core';\n\nexport const AppBarNetworkLoading = () => {\n    const hasPendingNetworkActions = useSelector(selectPendingNetworkActions).length > 0\n\n    return hasPendingNetworkActions ? <CircularProgress size={20}/> : null\n}","import { AppBar as MuiAppBar, IconButton, Slide, Toolbar, Typography, useScrollTrigger } from \"@material-ui/core\";\nimport { styled as muiStyled } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from 'styled-components';\nimport { selectCurrentModule } from \"../appSlice\";\nimport { MODULES } from \"../modules/modules\";\nimport { ModuleSelect } from \"../modules/ModuleSelect\";\nimport { NotificationMenu } from \"../notifications/NotificationMenu\";\nimport { AppBarDrawer } from \"./AppBarDrawer\";\nimport { AppBarNetworkLoading } from \"./AppBarNetworkLoading\";\n\nexport const drawerWidth = 300;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst TransparentAppBar = muiStyled(MuiAppBar)(({ theme }) => ({\n    [theme.breakpoints.up('md')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n\n    '@supports (backdrop-filter: blur(10px))': {\n        'backdrop-filter': 'blur(10px)',\n    },\n\n    background: 'rgba(0,0,0,0.6)',\n\n}));\n\nconst DrawerContainer = muiStyled('div')(({ theme }) => ({\n    [theme.breakpoints.up('md')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n\n}));\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  overflow-y: scroll;\n`;\n\nconst ContentDiv = styled.div`\n  height: calc(100% - 48px); //48px is the height of Toolbar (variant=dense)\n`;\n\n\nconst StyledIconButton = muiStyled(IconButton)(({ theme }) => ({\n    [theme.breakpoints.up('md')]: {\n        display: 'none',\n    }\n}));\n\n\n/*A globally shared app bar.\nTo prevent AppBar from automatically closing on ListItem click, use \ne.stopPropagation().*/\nexport const AppBar = () => {\n\n    const { id } = useSelector(selectCurrentModule)\n\n    const trigger = useScrollTrigger({ threshold: 50 });\n\n    /*Hooks are passed to modules*/\n    const [drawerOpen, setDrawerOpen] = useState(false)\n    const [drawerContent, setDrawerContent] = useState(null)\n    const [sidebarName, setSidebarName] = useState('')\n    const [titleContent, setTitleContent] = useState(null)\n\n    const appBarProps = { setDrawerContent, setTitleContent, setSidebarName, setDrawerOpen }\n\n    /*useLayoutEffect is critical here, to ensure that this runs BEFORE any\n    * useEffect(s) in the children that might call setTitleContent etc.*/\n    useLayoutEffect(() => {\n        if (!id) {\n            setSidebarName('Modules')\n            setTitleContent(<Typography variant={\"h6\"}>Modules</Typography>)\n            setDrawerContent(null)\n        } else {\n            setTitleContent(<Typography variant={\"h6\"}>{MODULES[id].menuName}</Typography>)\n            setSidebarName(MODULES[id].menuName)\n        }\n\n    }, [id, setDrawerContent, setSidebarName, setTitleContent])\n\n    return <FlexContainer>\n        <Slide direction={'down'} in={!trigger}>\n            <TransparentAppBar\n                position={'fixed'}\n                color={'transparent'}>\n                <Toolbar variant={\"dense\"}>\n                    <StyledIconButton\n                        color={\"inherit\"}\n                        edge={'start'}\n                        onClick={() => setDrawerOpen(true)}>\n                        <MenuIcon />\n                    </StyledIconButton>\n                    {titleContent}\n                    <div style={{ flex: 1 }} />\n                    <AppBarNetworkLoading/>\n                    <NotificationMenu />\n                </Toolbar>\n            </TransparentAppBar>\n        </Slide>\n\n        <DrawerContainer>\n            <AppBarDrawer\n                drawerOpen={drawerOpen}\n                drawerWidth={drawerWidth}\n                setDrawerOpen={setDrawerOpen}\n                sidebarName={sidebarName}>\n                {drawerContent}\n            </AppBarDrawer>\n        </DrawerContainer>\n\n\n        <ContentContainer>\n            <Toolbar variant={\"dense\"} />\n            <ContentDiv>\n                {id ?\n                    React.createElement(MODULES[id].element, appBarProps) :\n                    <ModuleSelect {...appBarProps} />}\n            </ContentDiv>\n        </ContentContainer>\n\n    </FlexContainer>\n};","import React from \"react\";\nimport {Login} from \"./auth/Login\";\nimport {useSelector} from \"react-redux\";\nimport {selectLoginStatus} from \"./appSlice\";\nimport {RefreshSession} from \"./refresh-session/RefreshSession\";\nimport {Hmail} from \"../modules/Hmail/Hmail\";\nimport {AppBar} from \"./app-bar/AppBar\";\n\n/*Checks for login then displays appropriate component*/\nexport const App = () => {\n\n    const {loggedIn, isSuperUser} = useSelector(selectLoginStatus)\n\n    return loggedIn ?\n        <>\n            {isSuperUser && <Hmail/>}\n            <RefreshSession/>\n            <AppBar/>\n        </> :\n        <Login/>;\n};\n","import {isRejected, isRejectedWithValue} from \"@reduxjs/toolkit\";\nimport {setNetworkError} from \"../appSlice\";\n\n/*Show network errors for rejected thunk actions*/\nexport const networkErrorMiddleware = ({dispatch}) => next => action => {\n\n    if (isRejectedWithValue(action)) {\n        /*Payload has been formatted by baseQuery.\n        * Reducer will filter out 401/403s while not logged in*/\n        dispatch(setNetworkError(action.payload));\n\n    } else if (isRejected(action) && !action.meta.condition) {\n        /*Ignore thunks cancelled due to condition being true*/\n        console.warn(`Rejected thunk:`, action)\n    }\n\n    return next(action)\n}","import { isAnyOf, isFulfilled, isPending, isRejected, isRejectedWithValue } from \"@reduxjs/toolkit\"\nimport { addNetworkAction, removeNetworkAction } from \"../appSlice\"\n\n\nexport const networkLoadingMiddleware = ({dispatch}) => next => action => {\n\n    if (isPending(action)) {\n        dispatch(addNetworkAction(action.meta.requestId))\n\n    } else if (isAnyOf(isFulfilled, isRejected, isRejectedWithValue)(action)) {\n        dispatch(removeNetworkAction(action.meta.requestId))\n    }\n\n    return next(action)\n}","import {configureStore} from \"@reduxjs/toolkit\";\nimport {appSlice, appSliceName as appPath} from \"./appSlice\";\nimport {baseApi} from \"./network-core/baseApi\";\nimport {networkErrorMiddleware} from \"./network-error/networkErrorMiddleware\";\nimport {setupListeners} from \"@reduxjs/toolkit/query\";\nimport {notificationSlice, notificationsSliceName as notificationsPath} from \"./notifications/notificationSlice\";\nimport {listsSlice, listsSliceName as listsPath} from \"../modules/Lists/listsSlice\";\nimport { networkLoadingMiddleware } from \"./network-loading/networkLoadingMiddleware\";\n\nexport const store =  configureStore({\n    reducer: {\n        [appPath]: appSlice.reducer,\n        [notificationsPath]: notificationSlice.reducer,\n        [listsPath]: listsSlice.reducer,\n        [baseApi.reducerPath]: baseApi.reducer\n    },\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware()\n            .concat(baseApi.middleware)\n            .concat(networkErrorMiddleware)\n            .concat(networkLoadingMiddleware)\n})\n\nsetupListeners(store.dispatch)","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    Snackbar\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React, {useState} from \"react\";\nimport {styled as muiStyled} from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst StyledDialog = muiStyled(Dialog)(({theme}) => ({\n    /*As zIndex is set inline in Dialog, style must be overridden with !important*/\n    zIndex: `${theme.zIndex.snackbar + 1} !important`,\n}));\n\n/* Display snackbar with dialog.\n* Omit onClose to prevent user from dismissing alert\n* Omit dialogTitle & dialogText to disable dialog*/\nexport const AlertSnackbarWithDialog = ({\n                                            severity = 'error',\n                                            onClose,\n                                            snackbarText,\n                                            dialogTitle,\n                                            dialogContent,\n                                            actions\n                                        }) => {\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const dialogEnabled = Boolean(dialogTitle && dialogContent);\n\n    return <>\n        {dialogEnabled && <StyledDialog\n            open={dialogOpen}\n            onClose={() => setDialogOpen(false)}\n            scroll={'body'}>\n\n            <DialogTitle>{dialogTitle}</DialogTitle>\n\n            <DialogContent>\n                <DialogContentText component={'div'} style={{whiteSpace: 'pre-wrap'}}>\n                    {dialogContent}\n                </DialogContentText>\n            </DialogContent>\n\n\n            <DialogActions>\n                <Button\n                    variant={'text'}\n                    color={'primary'}\n                    onClick={() => setDialogOpen(false)}\n                >Close\n                </Button>\n            </DialogActions>\n\n        </StyledDialog>}\n        <Snackbar open>\n            <Alert\n                severity={severity}\n                action={<>\n                    {dialogEnabled && <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={() => setDialogOpen(true)}>\n                        Details\n                    </Button>}\n                    {actions}\n                    {onClose && <IconButton\n                        size=\"small\"\n                        color=\"inherit\"\n                        onClick={onClose}>\n                        <CloseIcon fontSize=\"small\"/>\n                    </IconButton>}\n                </>}>\n                {snackbarText}\n            </Alert>\n        </Snackbar>\n    </>\n        ;\n};","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {AlertSnackbarWithDialog} from \"../../shared/components/AlertSnackbarWithDialog\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearNetworkError, selectNetworkError} from \"../appSlice\";\nimport {NETWORK_ERROR} from \"../constants\";\n\n/*Displays appropriate snackbars informing users of network state/errors,\n* with remediation options.\n*\n* Accepts both Responses and Errors.*/\nexport const NetworkError = () => {\n\n    const dispatch = useDispatch()\n    const networkError = useSelector(selectNetworkError)\n    if (!networkError) return null\n\n    const {method, url, text, status, type} = networkError\n\n    const message = <>\n        <p>{method}: {url}</p>\n        <p>{text}</p>\n    </>\n\n    switch (type) {\n        case NETWORK_ERROR.FETCH_ERROR:\n            /*Fetch error. Allow user to close snackbar*/\n            return <AlertSnackbarWithDialog\n                dialogTitle={'Fetch Error'}\n                actions={<Button color={'primary'} onClick={() => window.location.reload()}>\n                    Reload\n                </Button>}\n                dialogContent={message}\n                severity={'error'}\n                snackbarText={'A network error has occurred.'}\n                onClose={() => dispatch(clearNetworkError())}/>\n\n        case NETWORK_ERROR.HTTP_ERROR:\n            if ([401, 403].includes(status)) {\n                /*Authentication errors. Don't allow user to close snackbar*/\n                return <AlertSnackbarWithDialog\n                    dialogTitle={'Authentication Error'}\n                    actions={<Button color={'primary'}\n                                     onClick={() => window.location.reload()}>\n                        Login </Button>}\n                    dialogContent={message}\n                    severity={'warning'}\n                    snackbarText={'You are logged out.'}/>;\n\n            } else {\n                /*Other HTTP errors (4xx/5xx). Allow user to close snackbar*/\n                return <AlertSnackbarWithDialog\n                    dialogTitle={`Error ${status}`}\n                    actions={<Button color={'primary'} onClick={() => window.location.reload()}>\n                        Reload\n                    </Button>}\n                    dialogContent={message}\n                    severity={'error'}\n                    snackbarText={'An HTTP error has occurred.'}\n                    onClose={() => dispatch(clearNetworkError())}/>;\n            }\n        default:\n            /*Catch non NetworkError rejectedWithValue thunks*/\n            return <AlertSnackbarWithDialog\n                dialogTitle={`Non NetworkError rejectWithValue thunk`}\n                dialogContent={message}\n                severity={'error'}\n                snackbarText={'A network error has occurred.'}\n                onClose={() => dispatch(clearNetworkError())}/>;\n    }\n};","import ReactDOM from 'react-dom';\nimport React, { StrictMode } from \"react\";\nimport '@fontsource/roboto/300.css'\nimport '@fontsource/roboto/400.css'\nimport '@fontsource/roboto/500.css'\nimport '@fontsource/roboto/700.css'\nimport '@fontsource/source-sans-pro' //For codemirror in MarkdownEditor.js\nimport './shared/static/fonts/starcraft/starcraft.css' //Stylized font for menu\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { LoadServiceWorker } from \"./app/load-service-worker/LoadServiceWorker\";\nimport { ErrorBoundary } from \"./app/error-boundary/ErrorBoundary\";\nimport 'overlayscrollbars/css/OverlayScrollbars.css'\nimport { theme } from \"./app/theme\";\nimport { RandomBackground } from \"./shared/components/randomBackground\";\nimport { App } from \"./app/App\";\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport { NetworkError } from \"./app/network-error/NetworkError\";\n\n/*Decide whether to run mock service worker for debugging*/\nconst USE_MOCK_SERVICE_WORKER = false;\nconst prepare = () => {\n    if (process.env.NODE_ENV === 'development' && USE_MOCK_SERVICE_WORKER) {\n        const { worker } = require('./test/mocks/browser');\n        return worker.start()\n    }\n    return Promise.resolve()\n}\n\nprepare().then(() => {\n    ReactDOM.render(\n        <StrictMode>\n            <MuiThemeProvider theme={theme}>\n                <CssBaseline />\n                <RandomBackground />\n                <ErrorBoundary>\n                    <Provider store={store}>\n                        <LoadServiceWorker />\n                        <NetworkError />\n                        <App />\n                    </Provider>\n                </ErrorBoundary>\n            </MuiThemeProvider>\n        </StrictMode>\n        , document.getElementById('root'))\n});\n\n\n\n"],"sourceRoot":""}