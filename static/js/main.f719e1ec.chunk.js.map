{"version":3,"sources":["app/load-service-worker/LoadServiceWorker.js","shared/util.js","shared/useAsyncError.js","app/error-boundary/ErrorBoundary.js","app/theme.js","shared/components/randomBackground.js","shared/components/backgroundScreen.js","app/constants.js","app/network-core/baseQuery.js","app/network-core/baseApi.js","app/auth/authApi.js","app/appSlice.js","shared/components/loading.js","app/auth/Login.js","shared/useInput.js","app/refresh-session/RefreshSession.js","modules/Hmail/hmailApi.js","app/notifications/notificationSlice.js","modules/Hmail/hmailActions.js","modules/Hmail/Hmail.js","app/notifications/NotificationMenu.js","modules/Testing/testingApi.js","modules/Testing/util.js","modules/Testing/Testing.js","modules/PasswordTools/passwordUtil.js","modules/PasswordTools/passwordToolsApi.js","modules/PasswordTools/PasswordTools.js","modules/HomeAutomation/homeAutomationApi.js","modules/HomeAutomation/HomeAutomation.js","shared/components/textFieldClearableInfo.js","modules/OptionHedgeCalculator/TextFieldClearableInfoCurrency.js","modules/OptionHedgeCalculator/FieldUseWatch.js","modules/OptionHedgeCalculator/optionHedgeCalculatorApi.js","modules/OptionHedgeCalculator/OptionHedgeCalculator.js","modules/OptionHedgeCalculator/textFieldRefreshLoading.js","app/modules/modules.js","app/modules/ModuleSelect.js","app/app-bar/AppBarDrawer.js","app/app-bar/AppBar.js","app/App.js","app/network-error/networkErrorMiddleware.js","app/store.js","shared/components/AlertSnackbarWithDialog.js","app/network-error/NetworkError.js","index.js"],"names":["Component","isLocalhost","Boolean","window","location","hostname","match","noop","stripHtml","html","DOMParser","parseFromString","body","textContent","stripUndefined","obj","isPlainObject","copy","Object","entries","k","hasServiceWorker","navigator","wb","Workbox","NoServiceWorker","useState","sbOpen","setSbOpen","Snackbar","open","onClose","autoHideDuration","Alert","severity","LoadServiceWorker","intervalId","useRef","registration","text","actions","undefined","details","setDetails","setError","useCallback","e","Error","useAsyncError","reloadPage","reload","onInstalled","event","isUpdate","console","log","onControlling","onActivated","onUpdate","current","waiting","Button","variant","color","onClick","messageSW","type","clearInterval","onError","error","toString","useEffect","addEventListener","register","then","r","catch","setInterval","update","ClickAwayListenerProps","onClickAway","action","StyledDialog","muiStyled","Dialog","theme","zIndex","snackbar","ErrorBoundary","props","setDialogOpen","state","setState","dialogOpen","errorInfo","this","scroll","DialogTitle","DialogContent","DialogContentText","componentStack","DialogActions","children","createMuiTheme","palette","primary","main","secondary","OverlayScrollbarOptions","className","overflowBehavior","x","scrollbars","autoHide","RandomBackgroundImage","styled","div","$picIndex","getPicIndex","min","max","seed","Math","ceil","floor","rng","seedrandom","getRandomInt","NUM_IMAGES","differenceInCalendarDays","Date","RandomBackground","picIndex","setPicIndex","listener","removeEventListener","BACKGROUND_COLOR","BackgroundScreen","BackgroundScreenRounded","NETWORK_ERROR","defaultValidateStatus","response","status","responseHandler","headers","get","trim","startsWith","json","joinUrl","base","url","replace","baseQuery","baseUrl","prepareHeaders","fetchFn","fetch","baseFetchOptions","a","arg","signal","getState","method","Headers","params","validateStatus","rest","config","set","JSON","stringify","divider","indexOf","query","URLSearchParams","request","Request","requestClone","clone","responseClone","meta","resultData","data","name","message","baseApi","createApi","reducerPath","credentials","endpoints","authApi","injectEndpoints","build","checkLogin","login","mutation","logout","useCheckLoginQuery","useLoginMutation","useRecaptchaKeyQuery","useLogoutMutation","handleLoginFulfilled","payload","user","expiry","isSuperUser","is_superuser","recaptchaKey","recaptcha_key","loginStatus","loggedIn","appSlice","createSlice","initialState","module","id","networkError","reducers","setNetworkError","includes","clearNetworkError","setCurrentModule","setAppBar","drawerOpen","appBar","extraReducers","builder","addMatcher","matchFulfilled","isAllOf","matchRejected","isRejectedWithValue","localStorage","clear","selectLoginStatus","selectNetworkError","selectCurrentModule","StyledBackdrop","Backdrop","drawer","FlexContainer","FlexBackgroundScreen","Loading","showSpinner","fullscreen","content","CircularProgress","size","Typography","display","StyledForm","form","InnerContainer","StyledTextField","TextField","Spacer","StyledCircularProgress","Login","dispatch","useDispatch","useSelector","isLoading","refetchOnMountOrArgChange","isFetching","isError","initialValues","reducer","value","useReducer","values","setValue","onChange","target","bind","useInput","recaptchaRef","React","loginMessage","setLoginMessage","otpRequired","setOtpRequired","onSubmit","preventDefault","executeAsync","token","username","password","otp","save_browser","saveBrowser","res","otp_required","reset","gutterBottom","align","label","fullWidth","required","autoFocus","autoComplete","inputMode","pattern","FormControlLabel","control","Checkbox","checked","ref","sitekey","RefreshSession","pollingInterval","refetchOnReconnect","hmailApi","checkIhisMail","checkMohhMail","useCheckIhisMailQuery","useCheckMohhMailQuery","shape","notificationSlice","addNotifications","every","item","keys","validateShape","push","prepare","nanoid","timestamp","now","Array","isArray","map","removeNotification","filter","removeNotificationsFromSource","source","selectNotificationsSorted","createSelector","items","slice","sort","b","handleMailAction","date","parseJSON","title","format","isToday","from","join","preview","getTime","Hmail","ihisMail","mohhMail","StyledChip","Chip","StyledPopover","Popover","StyledSpan","NotificationMenu","notifications","anchorEl","setAnchorEl","IconButton","currentTarget","Badge","badgeContent","length","anchorOrigin","vertical","horizontal","Fragment","ListItem","button","ListItemText","disableTypography","differenceInMinutes","formatDistanceToNow","addSuffix","formatDistanceToNowStrict","differenceInCalendarYears","Divider","testingApi","throwHttpError","throwFetchError","queryFn","api","extraOptions","useThrowHttpErrorMutation","useThrowFetchErrorMutation","throwAsyncThunkReject","createAsyncThunk","throwAsyncThunkRejectWithValue","rejectWithValue","StyledDiv","DIGITS_REGEX","LOWER_REGEX","UPPER_REGEX","SYMBOLS_REGEX","DIGITS","LOWER","UPPER","SYMBOLS","secureRandom","crypto","arr","Uint32Array","random","val","getRandomValues","randint","floor_min","floor_max","choice","getSecureRandom","formatNumber","Intl","NumberFormat","maximumFractionDigits","maximumSignificantDigits","getEntropy","hasDigits","test","hasLowerCase","hasUpperCase","hasSymbols","totalSymbols","bitsPerChar","log2","totalEntropy","generatePassword","digits","lower","upper","symbols","charSet","generate","getSha1Hash","msgUint8","TextEncoder","encode","subtle","digest","hashBuffer","hashArray","Uint8Array","padStart","toUpperCase","generateUsername","vowels","cons","num_vowels","num_cons","i","substr","useHibpLookupMutation","hibpLookup","hash","Container","TextFieldContainer","StyledIconButton","OptionsFormGroup","FormGroup","PasswordDetailGrid","GreenCheck","CheckIcon","GreyCross","ClearIcon","formatDecimal","useSendCommandMutation","sendCommand","command","StyledContainer","COMMANDS","gate_toggle","ac_off","ac_on_24","ac_on_25","ceiling_fan_on","ceiling_fan_off","dyson_fan_on","dyson_fan_off","TextFieldClearableInfo","info","InputProps","endAdornment","InputAdornment","position","style","cursor","Tooltip","arrow","enterTouchDelay","interactive","tabIndex","CleaveTextField","inputRef","htmlRef","FieldUseWatch","fieldsToWatch","fields","useWatch","useGetSpyPriceQuery","getSpyPrice","transformResponse","resp","c","FIELDS","emptyStringToUndefined","origVal","schema","yup","portfolioValue","positive","transform","spyPrice","hedgeRatio","delta","StyledTypography","StyledTextFieldClearableInfo","StyledTextFieldRefresh","onRefresh","loading","tooltipText","onOpen","StyledTextFieldClearableInfoCurrency","InputLabelProps","shrink","inputComponent","inputProps","options","numeral","prefix","rawValueTrimPrefix","rawValue","formatNoDecimals","formatDecimals","formatDollars","currency","currencyDisplay","MODULES","PASSWORDS","menuName","onlySuperUser","element","lookupHibp","hashCount","count","dialogType","passwordSettings","usernameSettings","settings","setSettings","setUsername","setPassword","snackbarOpen","setSnackbarOpen","entropy","setEntropy","secondsToBruteforce","generatedPassword","seconds","checkHibp","debounce","passwordStr","copyToClipboard","clipboard","writeText","setTimeout","onPasswordChange","closeSettings","Slider","step","FormControl","helperText","Number","isFinite","formatDistance","HOME_AUTOMATION","setSnackbar","disabled","setDisabled","unwrap","InputLabel","Select","defaultValue","v","MenuItem","OPTION_HEDGE_CALCULATOR","refetch","fulfilledTimeStamp","setTooltipText","useForm","mode","resolver","yupResolver","defaultValues","render","field","fieldState","TEST","StyledButton","margin","ModuleSelect","modules","endIcon","OverlayScrollbarsWithMaxWidth","OverlayScrollbarsComponent","$width","AppNameDiv","TransparentDrawer","Drawer","$transparent","AppBarDrawer","drawerWidth","setDrawerOpen","sidebarName","useTheme","mobile","useMediaQuery","breakpoints","down","closeAppBar","List","ListItemIcon","stopPropagation","TransparentAppBar","MuiAppBar","up","width","marginLeft","DrawerContainer","flexShrink","ContentContainer","ContentDiv","AppBar","trigger","useScrollTrigger","threshold","drawerContent","setDrawerContent","setSidebarName","titleContent","setTitleContent","appBarProps","useLayoutEffect","Slide","direction","in","Toolbar","edge","flex","createElement","App","networkErrorMiddleware","next","isRejected","condition","warn","store","configureStore","app","middleware","getDefaultMiddleware","concat","setupListeners","AlertSnackbarWithDialog","snackbarText","dialogTitle","dialogContent","dialogEnabled","component","whiteSpace","fontSize","NetworkError","ReactDOM","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f719e1ec.chunk.js","sourcesContent":["import {messageSW, Workbox} from \"workbox-window\";\nimport {useEffect, useRef, useState} from 'react';\nimport {Button, Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {useAsyncError} from \"../../shared/useAsyncError\";\nimport {isLocalhost, noop} from \"../../shared/util\";\n\n// https://developers.google.com/web/tools/workbox/modules/workbox-window#important_service_worker_lifecycle_moments\n\nconst hasServiceWorker = () => 'serviceWorker' in navigator;\n\n// Workbox() calls navigator.serviceWorker which is undefined in Firefox private browsing.\nconst wb = hasServiceWorker() ? new Workbox('./service-worker.js') : null;\n\nconst NoServiceWorker = () => {\n    const [sbOpen, setSbOpen] = useState(true);\n\n    return <Snackbar\n        open={sbOpen}\n        onClose={() => setSbOpen(false)}\n        autoHideDuration={3000}>\n        <Alert\n            severity={'info'}\n            onClose={() => setSbOpen(false)}>\n            {'load-service-worker is not supported in your browser'}\n        </Alert>\n    </Snackbar>\n};\n\nconst withBrowserCheck = Component => {\n    return hasServiceWorker()\n    ? Component\n    : NoServiceWorker;\n};\n\n\nconst ServiceWorkerMain = () => {\n\n    const intervalId = useRef();\n    const registration = useRef({});\n    const [sbOpen, setSbOpen] = useState(false);\n    const [details, setDetails] = useState({\n        text: '',\n        severity: 'info',\n        actions: undefined,\n        autoHideDuration: 3000,\n    });\n\n    const setError = useAsyncError();\n\n    const reloadPage = () => {\n        setSbOpen(false);\n        window.location.reload()\n    };\n\n    const onInstalled = (event) => {\n        //\n        if (!event.isUpdate) {\n            setSbOpen(true);\n            setDetails({\n                text: 'Site is now available offline.',\n                severity: 'info',\n                autoHideDuration: 3000,\n            });\n            console.log('Installed, isUpdate false');\n        } else\n            console.log('Installed, isUpdate true')\n    };\n\n    const onControlling = event => {\n        if (event.isUpdate)\n            console.log('Controlling, isUpdate false');\n        else\n            console.log('Controlling, isUpdate true')\n    };\n\n    const onActivated = event => {\n        if (event.isUpdate)\n            console.log('Activated, isUpdate false');\n        else\n            console.log('Activated, isUpdate true')\n    };\n\n    const onUpdate = () => {\n        /*Deactivates the previous service worker and starts running the new one, ready for requests\n        * Regardless of the user's decision, the next reload will result in a new page.\n        * The new sw instance must be messaged for this to work.\n        * This is obtained from 'registration' set during registration of the new sw.\n        * For some reason wb.messageSW messages the old SW instead.*/\n        if (registration.current?.waiting) {\n            //Prompt user\n            setSbOpen(true);\n            setDetails({\n                text: 'Site has been updated. Reload page?',\n                severity: 'info',\n                autoHideDuration: null,\n                actions: <>\n                    <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={() => setSbOpen(false)}\n                    >No</Button>\n                    <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={reloadPage}\n                    >Yes</Button>\n                </>\n            });\n\n            messageSW(registration.current.waiting, {type: 'SKIP_WAITING'});\n            clearInterval(intervalId.current);\n            console.log('Waiting for activation, newer version available');\n        }\n    };\n\n    const onError = error => {\n        setSbOpen(true);\n        setDetails({\n            text: `Service worker update failed: ${error.toString()}`,\n            autoHideDuration: null,\n            severity: 'error',\n        });\n        console.log('Service worker update failed: ', error)\n    };\n\n    const onLocalhost = () => {\n        setSbOpen(true);\n        setDetails({\n            text: 'On localhost, service worker registration skipped',\n            autoHideDuration: 3000,\n            severity: 'info'\n        });\n        console.log('On localhost, service worker registration skipped.')\n    };\n\n    useEffect(() => {\n\n        // Skip SW registration if on localhost\n        if (isLocalhost) {\n            onLocalhost();\n            return;\n        }\n\n\n        wb.addEventListener('controlling', onControlling);\n        wb.addEventListener('activated', onActivated);\n        wb.addEventListener('installed', onInstalled);\n        wb.addEventListener('waiting', onUpdate);\n        wb.addEventListener('externalwaiting', onUpdate); // Any other different version\n\n        // Throw errors during registration\n        wb.register().then(r => registration.current = r).catch(e => setError(e));\n\n        // Service worker updates are checked on initial load\n        intervalId.current = setInterval(() => {\n            console.log('Checking for service worker updates...');\n\n            // Show snackbar on update failure, rather than throwing error\n            wb.update().catch(onError)\n        }, 5 * 60 * 1000);\n\n        // eslint-disable-next-line\n    }, []);\n\n    return <Snackbar\n        open={sbOpen}\n        ClickAwayListenerProps={{onClickAway: noop}}\n        onClose={() => setSbOpen(false)}\n        autoHideDuration={details.autoHideDuration}>\n        <Alert\n            severity={details.severity}\n            action={details.actions}\n            onClose={() => setSbOpen(false)}>\n            {details.text}\n        </Alert>\n    </Snackbar>;\n};\n\nexport const LoadServiceWorker = withBrowserCheck(ServiceWorkerMain);","/**\n * Utility functions.\n * Larger functions should be in their own file.\n */\nimport removeAccents from \"remove-accents\"\nimport seedrandom from 'seedrandom'\nimport {\n    differenceInCalendarDays,\n    differenceInCalendarYears,\n    differenceInMinutes,\n    format,\n    formatDistanceToNow,\n    formatDistanceToNowStrict\n} from \"date-fns\";\nimport UAParser from \"ua-parser-js\";\nimport {isPlainObject} from \"@reduxjs/toolkit\";\n\n/**\n * Strip accents, empty spaces and lowercase a string (for comparison purposes)\n * undefined/null returns an empty string\n * @param {String} string\n */\nexport const sanitizeString = string =>\n    string ? removeAccents(string).trim().toLowerCase() : ''\n;\n\nexport const isEmpty = string => !Boolean(string?.trim());\n\n/**\n * Returns a seeded random number between min (inclusive) and max (exclusive)\n * @param min\n * @param max\n * @param seed\n */\nexport const getRandomInt = (min, max, seed) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    let rng = seedrandom(seed);\n    return Math.floor(rng() * (max - min) + min)\n};\n\n/**\n * Days since Unix Epoch\n * Works properly so far (i.e. day count changes at 0000hrs of current locale)\n * @returns {number}\n */\nexport const getDaysSinceEpoch = () =>\n    differenceInCalendarDays(new Date(), new Date(0));\n\n/**\n * Returns formatDateToNow if within the same minute,\n * otherwise returns formatDistanceToNowStrict if within same calendar day,\n * otherwise returns date like 18 Apr if same calendar year,\n * otherwise like Apr 2021\n * @param date\n */\nexport const formatDistanceToNowPretty = date => {\n    if (differenceInMinutes(new Date(), date) < 1)\n        return formatDistanceToNow(date, {addSuffix: true});\n    if (differenceInCalendarDays(new Date(), date) < 1)\n        return formatDistanceToNowStrict(date, {addSuffix: true});\n    if (differenceInCalendarYears(new Date(), date) < 1)\n        return format(date, 'd MMM');\n    return format(date, 'MMM y')\n};\n\nexport const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport const noop = () => {\n};\n\n/**\n * Cryptographically secure random number generator.\n * Assumes window.crypto exists.\n */\nexport const getSecureRandom = () => {\n    if (!window.crypto) throw new Error('window.crypto not supported on browser');\n\n    let arr = new Uint32Array(1);\n    const max = 2 ** 32;\n\n    /*Will generate random numbers between 0 and 1 (exclusive) with 32 bit maximum precision\n    * Rejection sampling.*/\n    const random = () => {\n        let val = crypto.getRandomValues(arr)[0] / max;\n        if (val >= 1) return random();\n        return val\n    };\n\n    /*Random integer between min (inclusive) and max (exclusive)*/\n    const randint = (min, max) => {\n        let floor_min = Math.floor(min);\n        let floor_max = Math.floor(max);\n        return Math.floor(random() * (floor_max - floor_min)) + floor_min\n    };\n\n    /*Select random element of an array*/\n    const choice = arr => arr[randint(0, arr.length)];\n\n    return {\n        random,\n        randint,\n        choice,\n    }\n};\n\nexport const prettifyUAString = uaString => {\n    let ua = UAParser(uaString);\n    let {\n        browser: {\n            name: browserName,\n        },\n        // if type is set, it is mobile\n        device: {model, type},\n        os: {name: osName, version: osVersion}\n    } = ua;\n\n    return {\n        name: `${browserName} on ${osName} ${osVersion}${model ? ` (${model})` : ''}`,\n        isMobile: Boolean(type),\n        browserName\n    }\n};\n\nexport const stripHtml = html => {\n   let doc = new DOMParser().parseFromString(html, 'text/html');\n   return doc.body.textContent || \"\";\n}\n\n/*Copied from RTKQ's fetchBaseQuery.\n* Will not affect non-objects such as classes.*/\nexport const stripUndefined = obj => {\n    if (!isPlainObject(obj)) {\n        return obj\n    }\n    const copy = {...obj}\n    for (const [k, v] of Object.entries(copy)) {\n        if (typeof v === 'undefined') delete copy[k]\n    }\n    return copy\n}","import {useState} from 'react'\nimport {useCallback} from \"react\";\n\n/*Workaround to throw errors in callbacks to ErrorBoundaries*/\nexport const useAsyncError = () => {\n    const setError = useState(null)[1];\n\n    return useCallback(e => setError(() => {\n        if (e instanceof Error){ //Subclasses of Error also return true\n            throw e\n        } else {\n            throw new Error(e)\n        }\n\n    }), [setError])\n};","import {Component} from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Snackbar,\n    styled as muiStyled\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\n\nconst StyledDialog = muiStyled(Dialog)(({theme}) => ({\n    /*As zIndex is set inline in Dialog, style must be overridden with !important*/\n    zIndex: `${theme.zIndex.snackbar + 1} !important`,\n}));\n\n/*Catch-all for any application errors*/\nexport class ErrorBoundary extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false,\n            errorInfo: null,\n            dialogOpen: false,\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {error: error};\n    }\n\n    setDialogOpen = state => this.setState({dialogOpen: state});\n\n    componentDidCatch(error, errorInfo) {\n        /*Errors are not logged currently*/\n    }\n\n    render() {\n        return this.state.error\n            ? <>\n                <StyledDialog\n                    open={this.state.dialogOpen}\n                    onClose={() => this.setDialogOpen(false)}\n                    scroll={'body'}\n                >\n\n                    <DialogTitle>{this.state.error.toString()}</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>{this.state.errorInfo?.componentStack}</DialogContentText>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            variant={'text'}\n                            color={'primary'}\n                            onClick={() => this.setDialogOpen(false)}\n                        >Close\n                        </Button>\n                    </DialogActions>\n\n                </StyledDialog>\n                <Snackbar open>\n                    <Alert\n                        severity={'error'}\n                        action={<>\n                            <Button\n                                variant={'text'}\n                                color={'primary'}\n                                onClick={() => this.setDialogOpen(true)}\n                            >Details</Button>\n                            <Button\n                                variant={'text'}\n                                color={'primary'}\n                                onClick={() => window.location.reload()\n                                }\n                            >Reload</Button>\n                        </>\n                        }>\n                        Application Error\n                    </Alert>\n                </Snackbar>\n            </>\n            : this.props.children\n    }\n\n}","import {unstable_createMuiStrictModeTheme as createMuiTheme} from \"@material-ui/core/styles\"; //todo replace with v5 when out\n\nexport const theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: '#90caf9',\n        },\n        secondary: {\n            main: '#f48fb1',\n        },\n    }\n});\n\nexport const OverlayScrollbarOptions = {\n    className: 'os-theme-light',\n    overflowBehavior: {\n        x: 'hidden'\n    },\n    scrollbars: {\n        autoHide: 'move',\n    }\n};","import styled from \"styled-components\";\nimport {getDaysSinceEpoch, getRandomInt} from \"../util\";\nimport {useCallback, useEffect, useState} from \"react\";\n\n/*Largest index of background images, inclusive*/\nconst NUM_IMAGES = 90;\n\nconst RandomBackgroundImage = styled.div`\n  background: url(${({$picIndex}) => `/bg/${$picIndex}.jpg`}) top/cover;\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  z-index: -1;\n`;\n\n/*Get the latest pic index on window focus (setTimeout is unreliable*/\nconst getPicIndex = () => getRandomInt(1, NUM_IMAGES + 1, getDaysSinceEpoch());\n\nexport const RandomBackground = () => {\n\n    const [picIndex, setPicIndex] = useState(getPicIndex());\n    const listener = useCallback(() => setPicIndex(getPicIndex()), [])\n\n\n    useEffect(() => {\n        window.addEventListener('focus', listener)\n        return () => window.removeEventListener('focus', listener)\n    }, [listener]);\n\n    return <RandomBackgroundImage $picIndex={picIndex}/>\n};","import styled from \"styled-components\";\n\nexport const BACKGROUND_COLOR = `background: rgba(0, 0, 0, 0.6)`;\n\n//For use with already dark backgrounds\nexport const BACKGROUND_COLOR_LIGHT = `background: rgba(0, 0, 0, 0.3)`;\nexport const BACKGROUND_BOX_SHADOW = `box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.6)`;\n\nexport const BackgroundScreen = styled.div`\n  ${BACKGROUND_COLOR};\n`;\n\nexport const BackgroundScreenRounded = styled(BackgroundScreen)`\n  border-radius: 5px;\n  ${BACKGROUND_BOX_SHADOW};\n`;","/*TODO Replace this file with typescript*/\n\nexport const NETWORK_ERROR = {\n    HTTP_ERROR: 1,\n    FETCH_ERROR: 2,\n}\n\nexport const NETWORK_METHOD = {\n    GET: 'GET',\n    POST: 'POST',\n    DELETE: 'DELETE',\n    PUT: 'PUT',\n}\n\n","import {stripHtml, stripUndefined} from \"../../shared/util\";\nimport {NETWORK_ERROR} from \"../constants\";\n\nconst defaultValidateStatus = response =>\n    (response.status >= 200 && response.status <= 299)\n\n\n/*Parse body as JSON only if content-type is JSON*/\nconst responseHandler = response =>\n    response.headers.get('content-type')?.trim()?.startsWith('application/json') ?\n        response.json() :\n        response.text()\n\n/*Joins 2 URLs. Will not modify trailing slashes if present*/\nconst joinUrl = (base, url) => {\n    if (!base) {\n        return url\n    }\n    if (!url) {\n        return base\n    }\n    return base.replace(/\\/$/, '') + '/' + url.replace(/^\\//)\n}\n\n/*Custom query which wraps fetch errors in NetworkError format, instead of throwing.*/\nexport const baseQuery = ({\n                              baseUrl,\n                              prepareHeaders = (x) => x,\n                              fetchFn = fetch,\n                              ...baseFetchOptions\n                          }) =>\n    async (arg = {}, {signal, getState}) => {\n        let {\n            url = '',\n            method = 'GET',\n            headers = new Headers({}),\n            body = undefined,\n            params = undefined,\n            validateStatus = defaultValidateStatus,\n            ...rest\n        } = typeof arg == 'string' ? {url: arg} : arg\n        let config = {\n            ...baseFetchOptions,\n            method,\n            signal,\n            body,\n            ...rest,\n        }\n\n        config.headers = await prepareHeaders(\n            new Headers(stripUndefined(headers)),\n            {getState}\n        )\n\n        config.headers.set('content-type', 'application/json')\n        config.body = JSON.stringify(body)\n\n        if (params) {\n            const divider = ~url.indexOf('?') ? '&' : '?'\n            const query = new URLSearchParams(stripUndefined(params))\n            url += divider + query\n        }\n\n        url = joinUrl(baseUrl, url)\n\n\n        const request = new Request(url, config)\n        const requestClone = request.clone()\n\n        try {\n            const response = await fetchFn(request)\n            const responseClone = response.clone()\n\n            const meta = {request: requestClone, response: responseClone}\n\n            const resultData = await responseHandler(response)\n\n            return validateStatus(response, resultData)\n                ? {\n                    data: resultData, //This is not wrapped in 'data' in the reducer!\n                    meta,\n                }\n                : {\n                    error: {\n                        method: request.method,\n                        url: request.url,\n                        text: typeof resultData === 'object' ? JSON.stringify(resultData, undefined, 2) : stripHtml(resultData),\n                        status: response.status,\n                        type: NETWORK_ERROR.HTTP_ERROR,\n\n                        /*Mainly for use by auth*/\n                        data: resultData\n                    },\n                    meta,\n                }\n        } catch (e) {\n            return {\n                error: {\n                    method: request.method,\n                    url: request.url,\n                    text: `${e.name}: ${e.message}`,\n                    type: NETWORK_ERROR.FETCH_ERROR\n                }\n            }\n        }\n    }","/**\n * Base createApi.\n */\n\nimport {createApi} from \"@reduxjs/toolkit/dist/query/react\";\nimport {baseQuery} from \"./baseQuery\";\n\nconst API_URL = 'https://api.nicholaslyz.com'\n\nexport const baseApi = createApi({\n    reducerPath: 'api',\n    baseQuery: baseQuery({\n        baseUrl: API_URL,\n        credentials: \"include\"\n    }),\n    endpoints: () => ({})\n})","import {baseApi} from \"../network-core/baseApi\";\n\nexport const authApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        checkLogin: build.query({\n            query: () => 'account/login/',\n        }),\n        login: build.mutation({\n            query: body => ({\n                url: 'account/login/',\n                method: 'POST',\n                body\n            })\n        }),\n        logout: build.mutation({\n            query: () => ({\n                url: 'account/logout/',\n                method: 'POST'\n            })\n        })\n    })\n})\n\nexport const {\n    useCheckLoginQuery,\n    useRecaptchaKeyQuery,\n    useLoginMutation,\n    useLogoutMutation,\n} = authApi","import {createSlice, isAllOf, isRejectedWithValue} from \"@reduxjs/toolkit\";\nimport {NETWORK_ERROR, NETWORK_METHOD} from \"./constants\";\nimport {authApi} from \"./auth/authApi\";\n\nconst name = 'app'\n\nconst initialState = {\n    /*Current module to display\n    * Title and other cosmetic effects are managed by components themselves*/\n    module: {\n        id: null,\n        meta: {}\n    },\n\n    loginStatus: {\n        user: null,\n        expiry: null,\n        isSuperUser: false,\n        recaptchaKey: null,\n        loggedIn: false,\n    },\n    networkError: null,\n}\n\nexport const send = () => {\n}\n\n/**\n * Convenience methods for obtaining get, add, update and delete methods from a URL\n * These must be dispatched with\n *\n * <pre>\n * get: function(...params) => url(...params)\n * add: function(object, ...params) => url(...params)\n * update: function (object, id, ...params) => detailUrl(id, ...params)\n * del: function (id, ...params) => detailUrl(id, ...params)\n * </pre>\n *\n * @param url str or function(...params) => url to obtain object list\n * @param detailUrl function(id, ...params) => url to obtain object details\n * @returns {[function(): Promise<unknown>, function(*=): Promise<unknown>, function(*=): Promise<unknown>, function(*=): Promise<unknown>]}\n */\nexport const crudMethods = (url, detailUrl) => {\n    let get = (...params) => send(\n        typeof url === 'function' ?\n            url(...params) :\n            url,\n        {method: NETWORK_METHOD.GET});\n\n    let add = (object, ...params) => send(\n        typeof url === 'function' ?\n            url(...params) :\n            url,\n        {\n            method: NETWORK_METHOD.POST,\n            body: JSON.stringify(object),\n        });\n\n    let update = (object, id, ...params) => send(\n        detailUrl(id, ...params),\n        {\n            method: NETWORK_METHOD.PUT,\n            body: JSON.stringify(object),\n        });\n\n    let del = (id, ...params) => send(\n        detailUrl(id, ...params),\n        {method: NETWORK_METHOD.DELETE}); //Note - for a DELETE operation, nothing is returned by the server\n\n    return [get, add, update, del]\n}\n\nconst handleLoginFulfilled = (state, {\n    payload: {\n        user,\n        expiry,\n        is_superuser: isSuperUser,\n        recaptcha_key: recaptchaKey\n    }\n\n}) => void (state.loginStatus = {\n    user,\n    expiry,\n    isSuperUser,\n    recaptchaKey,\n    loggedIn: true,\n})\n\nconst setNetworkErrorReducer = (state, action) => {\n\n    let payload = action.payload\n    let {\n        method = 'Method not specified',\n        url = 'URL not specified',\n        text = '',\n        status = null, /*Must be specified if HTTP_ERROR*/\n        type\n    } = payload\n\n    /*Type not specified:  rejected thunk with value which is NOT a NetworkError object*/\n    if (!type) {\n        state.networkError = {\n            method,\n            url,\n            text: JSON.stringify(action, undefined, 2),\n            status,\n            type\n        }\n        return\n    }\n\n    if (type === NETWORK_ERROR.HTTP_ERROR && typeof status !== 'number')\n        throw new Error(`NetworkError: 'status' must be a number if \n            'type' === HTTP_ERROR, but got ${status} instead`)\n\n    /*Ignore 401/403 errors if not logged in*/\n    if (!state.loginStatus.loggedIn &&\n        [401, 403].includes(status)) {\n        return\n    }\n    state.networkError = {method, url, text, status, type}\n}\n\nexport const appSlice = createSlice({\n    name,\n    initialState,\n    reducers: {\n        setNetworkError: setNetworkErrorReducer,\n        clearNetworkError: state => void (state.networkError = null),\n        setCurrentModule: (state, {payload: {id = null, meta = {}} = {}}) => void (state.module = {id, meta}),\n        setAppBar: (state, {payload: {drawerOpen = false}}) => void (state.appBar.drawerOpen = drawerOpen)\n    },\n    extraReducers: builder => builder\n        .addMatcher(authApi.endpoints.checkLogin.matchFulfilled, handleLoginFulfilled)\n        .addMatcher(isAllOf(authApi.endpoints.checkLogin.matchRejected, isRejectedWithValue),\n            (state, action) => {\n                let payload = action.payload\n                if (payload.type === NETWORK_ERROR.HTTP_ERROR && [401, 403].includes(payload.status))\n                    state.loginStatus.recaptchaKey = payload.data.recaptcha_key\n            })\n        .addMatcher(authApi.endpoints.login.matchFulfilled, handleLoginFulfilled)\n        .addMatcher(authApi.endpoints.logout.matchFulfilled, () => {\n            /*Not pure, but an exception here as I want to clear everything*/\n            localStorage.clear()\n            /*Page is refreshed on logout, to clear both Redux store and cached memory.*/\n            window.location.reload()\n        })\n\n})\n\nexport const {\n    setNetworkError,\n    clearNetworkError,\n    setCurrentModule,\n    setAppBar,\n} = appSlice.actions\n\nexport const selectLoginStatus = state => state[name].loginStatus\nexport const selectNetworkError = state => state[name].networkError\nexport const selectCurrentModule = state => state[name].module","import {styled as muiStyled} from \"@material-ui/core/styles\";\nimport {Backdrop, CircularProgress, Typography} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {BackgroundScreen} from \"./backgroundScreen\";\n\nconst StyledBackdrop = muiStyled(Backdrop)(({theme}) => ({\n    // To cover the app drawer\n    zIndex: theme.zIndex.drawer + 1,\n}));\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  height: 100px;\n`;\n\nconst FlexBackgroundScreen = styled(BackgroundScreen)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n`;\n\n/**\n * A fullscreen loading backdrop element\n * @param open\n * @param message\n * @param showSpinner\n * @param fullscreen\n * @returns {JSX.Element}\n * @constructor\n */\nexport const Loading = ({\n                            open = true,\n                            message = 'Loading...',\n                            showSpinner = true,\n                            fullscreen = true\n                        }) => {\n\n    let content = <FlexContainer>\n        {showSpinner ? <CircularProgress color=\"inherit\" size={30}/> : null}\n        <Typography variant={'body1'} display={\"block\"}>{message}</Typography>\n    </FlexContainer>;\n\n    if (!open) return null;\n\n    return fullscreen ?\n        <StyledBackdrop open={open}>\n            {content}\n        </StyledBackdrop>\n        : <FlexBackgroundScreen>\n            {content}\n        </FlexBackgroundScreen>;\n\n};","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {Button, Checkbox, CircularProgress, FormControlLabel, TextField, Typography} from \"@material-ui/core\";\nimport {BackgroundScreenRounded} from \"../../shared/components/backgroundScreen\";\nimport {useInput} from \"../../shared/useInput\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectLoginStatus, setNetworkError} from \"../appSlice\";\nimport {NETWORK_ERROR} from \"../constants\";\nimport {useCheckLoginQuery, useLoginMutation} from \"./authApi\";\nimport {Loading} from \"../../shared/components/loading\";\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 300px;\n  height: 100vh;\n`;\n\nconst InnerContainer = styled(BackgroundScreenRounded)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 5px 0;\n`;\n\nconst Spacer = styled.div`\n  width: 30px\n`;\n\nconst StyledCircularProgress = styled(CircularProgress)`\n  margin-left: 10px;\n`;\n\n/*Will update loggedIn state*/\nexport const Login = () => {\n\n    const dispatch = useDispatch()\n    const {recaptchaKey} = useSelector(selectLoginStatus)\n\n    const [login, {isLoading}] = useLoginMutation()\n    const {isFetching, isError, error} = useCheckLoginQuery(undefined, {refetchOnMountOrArgChange: true})\n\n    const {values, bind, setValue} = useInput();\n    const recaptchaRef = React.useRef();\n    const [loginMessage, setLoginMessage] = useState('Sign In');\n    const [otpRequired, setOtpRequired] = useState(false);\n\n\n    const onSubmit = event => {\n        event.preventDefault();\n        recaptchaRef.current\n            .executeAsync()\n            .then(token => login({\n                username: values.username,\n                password: values.password,\n                token: token,\n                otp: values.otp,\n                save_browser: values.saveBrowser\n            }))\n            .then(res => {\n                if (res.error &&\n                    res.error.type === NETWORK_ERROR.HTTP_ERROR &&\n                    [401, 403].includes(res.error.status)) {\n                    let data = res.error.data\n\n                    if (data.otp_required)\n                        setOtpRequired(true)\n\n                    setLoginMessage(data.message)\n\n                    /*Reset captcha for retries*/\n                    recaptchaRef.current?.reset();\n                }\n            })\n            .catch(e => {\n                /*Since thunks do not throw if not unwrapped,\n                * only gRecaptcha errors are caught here.\n                * networkErrorMiddleware handles the rest.\n                * This is at the end of the chain so that all\n                * prior 'then's do not execute if recaptcha validation fails.*/\n                dispatch(setNetworkError({\n                    text: `gRecaptcha request failed: ${e?.message}`,\n                    type: NETWORK_ERROR.FETCH_ERROR,\n                }))\n            })\n\n    };\n\n    /*Show loading screen also for non-401/403 errors*/\n    if (isFetching || (isError && ![401, 403].includes(error.status)))\n        return <Loading\n            open={true}\n            message={isError ? 'HTTP Error' : 'Checking authentication...'}\n            fullscreen={true}/>;\n\n    return <StyledForm onSubmit={onSubmit}>\n        <InnerContainer>\n            <Typography variant={'h6'} gutterBottom align={\"center\"}>\n                {loginMessage}\n            </Typography>\n            {!otpRequired && <>\n                <StyledTextField\n                    type='text'\n                    label={'Username'}\n                    fullWidth\n                    required\n                    autoFocus\n                    variant={'outlined'}\n                    autoComplete={'username'}\n                    {...bind('username')}\n                />\n\n                <StyledTextField\n                    type={'password'}\n                    label={'Password'}\n                    autoComplete={'current-password'}\n                    fullWidth\n                    required\n                    variant={'outlined'}\n                    {...bind('password')}\n                />\n            </>}\n\n            {otpRequired && <>\n                <StyledTextField\n                    type={'password'}\n                    label={'OTP'}\n                    autoComplete={'one-time-code'}\n                    fullWidth\n                    variant={'outlined'}\n                    inputMode={\"numeric\"}\n                    pattern={\"[0-9]*\"}\n                    {...bind('otp')}\n                />\n                <FormControlLabel\n                    control={<Checkbox\n                        checked={values.saveBrowser}\n                        onChange={e => setValue({\n                            name: 'saveBrowser',\n                            value: e.target.checked\n                        })}\n                    />}\n                    label={'Remember browser'}\n                />\n            </>}\n\n            <Button\n                variant={'contained'}\n                type={'submit'}\n                color={'primary'}\n                fullWidth\n            >\n                <Spacer/>Login{isLoading ? <StyledCircularProgress color={\"inherit\"} size={20}/> : <Spacer/>}\n            </Button>\n            <ReCAPTCHA\n                ref={recaptchaRef}\n                size={'invisible'}\n                sitekey={recaptchaKey}\n                theme={'dark'}\n            />\n\n        </InnerContainer>\n    </StyledForm>;\n};\n","import {useReducer} from \"react\";\n\n/**\n * Uses useReducer (setValue is dispatch({name, value})\n * value can be a function, which will receive the latest state[key] as an argument.\n * If initial state for a key is not set, returns '' by default.\n * @param initialValues initial value of inputs as an object of name: value pairs\n * @returns {{bind: (function(*=): {onChange: function(*): *, name: *, value}), onChange: (function(*): *), setValues: *, values: React.ReducerStateWithoutAction<function(*=, *): (*)>}}\n */\nexport const useInput = (initialValues = {}) => {\n    const reducer = (state, action) => {\n        if (typeof action.value === 'function') {\n            return {\n                ...state,\n                [action.name]: action.value(state[action.name])\n            }\n        } else\n            return {\n                ...state,\n                [action.name]: action.value\n            };\n    };\n\n    const [values, setValue] = useReducer(reducer, initialValues);\n\n    const onChange = e => setValue({\n        name: e.target.name,\n        value: e.target.value\n    });\n\n    const bind = name => ({\n        onChange,\n        name: name,\n        value: values[name] || ''\n    });\n\n    return {values, setValue, onChange, bind}\n\n};","import {useCheckLoginQuery} from \"../auth/authApi\";\n\nconst SESSION_REFRESH_INTERVAL_MS = 60 * 60 * 1000;\n\nexport const RefreshSession = () => {\n    useCheckLoginQuery(undefined, {\n        pollingInterval: SESSION_REFRESH_INTERVAL_MS,\n        refetchOnReconnect: true,\n    })\n    return null\n}","import {baseApi} from \"../../app/network-core/baseApi\";\n\nexport const hmailApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        checkIhisMail: build.query({\n            query: () => 'hmail/check-ihis-mail/'\n        }),\n        checkMohhMail: build.query({\n            query: () => 'hmail/check-mohh-mail/'\n        })\n    })\n})\n\nexport const {\n    useCheckIhisMailQuery,\n    useCheckMohhMailQuery,\n} = hmailApi","import {createSelector, createSlice, nanoid} from \"@reduxjs/toolkit\";\nimport {isPlainObject} from 'lodash'\n\nconst name = 'notifications'\n\nconst shape = [\n    'title',\n    'content',\n    'source',\n\n    /*Autogenerated if not already present*/\n    'id',\n    'timestamp',\n]\n\nconst prepareBatchNotification = (arg) => {\n    if (isPlainObject(arg)) {\n        return {\n            payload: [{\n                id: nanoid(),\n                timestamp: Date.now(),\n                ...arg\n            }]\n        }\n    }\n    if (!Array.isArray(arg))\n        throw new Error(`'${arg}' should be an array or object, but got ${typeof arg}`)\n\n    return {\n        payload: arg.map(e => ({\n            id: nanoid(),\n            timestamp: Date.now(),\n            ...e\n        }))\n    }\n}\n\nconst validateShape = (arg) => {\n    if (!arg.every(item => shape.every(e => Object.keys(item).includes(e))))\n        throw new Error(`Invalid notification shape: expected ${shape}, but got ${Object.keys(arg)}`)\n}\n\nexport const notificationSlice = createSlice({\n    name,\n    initialState: [],\n    reducers: {\n        addNotifications: {\n            reducer: (state, {payload}) => {\n                validateShape(payload)\n                state.push(...payload)\n            },\n            prepare: prepareBatchNotification\n        },\n        removeNotification: (state, {payload: {id}}) => state.filter(e => e.id !== id),\n        removeNotificationsFromSource: (state, {payload}) => state.filter(e => e.source !== payload),\n    },\n\n})\n\nexport const {\n    addNotifications,\n    removeNotification,\n    removeNotificationsFromSource\n} = notificationSlice.actions\n\nexport const selectNotificationsSorted = createSelector(\n    state => state[name],\n    items => items.slice().sort((a, b) => b.timestamp - a.timestamp)\n)","import {addNotifications, removeNotificationsFromSource} from \"../../app/notifications/notificationSlice\";\nimport {format, isToday, parseJSON} from \"date-fns\";\n\nexport const handleMailAction = (data, source) => dispatch => {\n    dispatch(removeNotificationsFromSource(source))\n    dispatch(addNotifications(data.map(e => {\n        let date = parseJSON(e.date)\n        return ({\n            title: e.title,\n            content: `${format(date, isToday(date) ? 'p' : 'd/M')} ` + [e.from.join(', '), e.preview].join(' - '),\n            source,\n            timestamp: date.getTime()\n        })\n    })))\n}","import {useCheckIhisMailQuery, useCheckMohhMailQuery} from \"./hmailApi\";\nimport {useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {handleMailAction} from \"./hmailActions\";\n\nconst CHECK_MAIL_FREQUENCY_MS = 30 * 1000;\nconst [IHIS, MOHH] = ['IHIS', 'MOHH']\n\nexport const Hmail = () => {\n\n    const dispatch = useDispatch()\n\n    /*This hook appears to be keep the same reference when cached data is returned, so\n    * useEffect calls do not run*/\n    const {data: ihisMail} = useCheckIhisMailQuery(undefined, {pollingInterval: CHECK_MAIL_FREQUENCY_MS})\n    const {data: mohhMail} = useCheckMohhMailQuery(undefined, {pollingInterval: CHECK_MAIL_FREQUENCY_MS})\n\n    useEffect(() => ihisMail &&\n        dispatch(handleMailAction(ihisMail, IHIS)),\n        [dispatch, ihisMail])\n\n    useEffect(() => mohhMail &&\n        dispatch(handleMailAction(mohhMail, MOHH)),\n        [dispatch, mohhMail])\n\n    return null\n};","import {Badge, Chip, Divider, IconButton, ListItem, ListItemText, Popover, Typography} from '@material-ui/core'\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport {useSelector} from \"react-redux\";\nimport {selectNotificationsSorted} from \"./notificationSlice\";\nimport {formatDistanceToNowPretty} from \"../../shared/util\";\n\nconst StyledChip = styled(Chip)`\n  margin-right: 5px;\n  cursor: pointer;\n`;\n\nconst StyledPopover = styled(Popover)`\n  .MuiPopover-paper {\n    max-width: min(calc(100% - 32px), 600px);\n  }\n`;\n\nconst StyledSpan = styled.div`\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n`;\n\nexport const NotificationMenu = () => {\n\n    const notifications = useSelector(selectNotificationsSorted)\n\n    const [anchorEl, setAnchorEl] = useState();\n\n    const handleNotificationClick = e => setAnchorEl(e.currentTarget);\n    const onClose = () => setAnchorEl(null);\n\n    return <>\n        <IconButton\n            onClick={handleNotificationClick}\n        >\n            <Badge badgeContent={notifications.length} color={'error'}>\n                <NotificationsIcon/>\n            </Badge>\n        </IconButton>\n        <StyledPopover\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={onClose}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n            {notifications.length > 0 ?\n                notifications.map(e => <React.Fragment key={e.id}>\n                    <ListItem button>\n                        <ListItemText\n                            disableTypography\n                            primary={<>\n                                <StyledChip\n                                    color={'primary'}\n                                    label={e.source}/>\n                                {e.title}\n                            </>}\n                            secondary={<>\n                                <StyledSpan>{e.content}</StyledSpan>\n                                <Typography variant={'body2'}\n                                            align={'right'}>\n                                    {formatDistanceToNowPretty(new Date(e.timestamp))}\n                                </Typography>\n                            </>}/>\n                    </ListItem>\n                    <Divider/>\n                </React.Fragment>) :\n                <ListItem>\n                    <ListItemText\n                        primary={'No new notifications'}/>\n                </ListItem>}\n        </StyledPopover>\n    </>\n\n};","import {baseApi} from \"../../app/network-core/baseApi\";\nimport {baseQuery} from \"../../app/network-core/baseQuery\";\n\n\nexport const testingApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        throwHttpError: build.mutation({\n            query: status => ({\n                url: 'test/',\n                params: {status}\n            })\n        }),\n        throwFetchError: build.mutation({\n            queryFn: (arg, api, extraOptions) =>\n                baseQuery({\n                    baseUrl: 'https://dummy.nicholaslyz.com',\n                    credentials: \"include\"\n                })(arg, api, extraOptions)\n        })\n    })\n})\n\nexport const {\n    useThrowHttpErrorMutation,\n    useThrowFetchErrorMutation\n} = testingApi","import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\nexport const throwAsyncThunkReject = createAsyncThunk('testing/asyncThunkReject', async () => {\n    throw new Error('Testing: AsyncThunkReject')\n})\n\nexport const throwAsyncThunkRejectWithValue = createAsyncThunk('testing/asyncThunkRejectWithValue', async(arg, {rejectWithValue}) => {\nreturn rejectWithValue('Testing: AsyncThunkRejectWithValue')\n})","import {Button} from \"@material-ui/core\";\nimport {useThrowFetchErrorMutation, useThrowHttpErrorMutation} from \"./testingApi\";\nimport {useDispatch} from \"react-redux\";\nimport {throwAsyncThunkReject, throwAsyncThunkRejectWithValue} from \"./util\";\nimport styled from 'styled-components'\nimport {clearNetworkError} from \"../../app/appSlice\";\n\nconst StyledDiv = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  max-width: 300px;\n  margin: 10px;\n`\n\nexport const Testing = () => {\n\n    const dispatch = useDispatch()\n    const [throwHttpError] = useThrowHttpErrorMutation()\n    const [throwFetchError] = useThrowFetchErrorMutation()\n\n    return <StyledDiv>\n        <Button variant={'contained'} onClick={() => throwHttpError(401)}>Throw 401 error</Button>\n        <Button variant={'contained'} onClick={() => throwHttpError(500)}>Throw 500 error</Button>\n        <Button variant={'contained'} onClick={() => throwFetchError()}>Throw fetch error</Button>\n        <Button variant={'contained'} onClick={() => dispatch(throwAsyncThunkReject())}>\n            Throw asyncThunkReject\n        </Button>\n        <Button variant={'contained'} onClick={() => dispatch(throwAsyncThunkRejectWithValue())}>\n            Throw asyncThunkRejectWithValue\n        </Button>\n        <Button variant={'contained'} onClick={() => dispatch(clearNetworkError())}>Clear</Button>\n    </StyledDiv>\n}","import {getSecureRandom} from \"../../shared/util\";\nimport {formatDistance} from \"date-fns\";\n\nconst DIGITS_REGEX = /\\d/;\nconst LOWER_REGEX = /[a-z]/;\nconst UPPER_REGEX = /[A-Z]/;\nconst SYMBOLS_REGEX = /[!@#$%^&*]/;\n\n\nconst DIGITS = '0123456789';\nconst LOWER = 'abcdefghijklmnopqrstuvwxyz';\nconst UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst SYMBOLS = '!@#$%^&*';\n\nconst secureRandom = getSecureRandom();\nconst formatNumber = new Intl.NumberFormat(undefined, {\n    maximumFractionDigits: 0,\n    maximumSignificantDigits: 3,\n});\n\n/*Gets the entropy in bits for a password, assuming it is completely random*/\nexport const getEntropy = password => {\n\n    let hasDigits = DIGITS_REGEX.test(password);\n    let hasLowerCase = LOWER_REGEX.test(password);\n    let hasUpperCase = UPPER_REGEX.test(password);\n    let hasSymbols = SYMBOLS_REGEX.test(password);\n\n    let totalSymbols =\n        (hasDigits ? 10 : 0) +\n        (hasLowerCase ? 26 : 0) +\n        (hasUpperCase ? 26 : 0) +\n        (hasSymbols ? SYMBOLS.length : 0);\n\n    let bitsPerChar = Math.log2(totalSymbols);\n    let totalEntropy = bitsPerChar * password.length;\n\n    return {\n        length: password.length,\n        hasDigits,\n        hasLowerCase,\n        hasUpperCase,\n        hasSymbols,\n        bitsPerChar,\n        totalEntropy,\n    }\n\n};\n\nexport const generatePassword = ({length = 10, digits = true, lower = true, upper = true, symbols = true} = {}) => {\n\n    if (length < 4) throw new Error('Password length is too short');\n\n    let charSet =\n        (digits ? DIGITS : '') +\n        (lower ? LOWER : '') +\n        (upper ? UPPER : '') +\n        (symbols ? SYMBOLS : '');\n\n    const generate = () => {\n        let password = '';\n        while (password.length < length)\n            password += secureRandom.choice(charSet);\n        return password\n    };\n\n    let password = generate();\n\n    /*Ensure generated password meets criteria*/\n    while ((digits && !DIGITS_REGEX.test(password)) ||\n    (lower && !LOWER_REGEX.test(password)) ||\n    (upper && !UPPER_REGEX.test(password)) ||\n    (symbols && !SYMBOLS_REGEX.test(password))) {\n        password = generate()\n    }\n    return password\n};\n\nwindow.test = generatePassword;\n\nexport const getSha1Hash = async message => {\n    const msgUint8 = new TextEncoder().encode(message);                            // encode as (utf-8) Uint8Array\n    const hashBuffer = await crypto.subtle.digest('SHA-1', msgUint8);    // hash the message\n    const hashArray = Array.from(new Uint8Array(hashBuffer));                      // convert buffer to byte array\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('').toUpperCase();       // convert bytes to hex string\n};\n\nexport const generateUsername = ({length = 8} = {}) => {\n\n    const vowels = ['a', 'e', 'i', 'o', 'u'];\n    const cons = ['b', 'c', 'd', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'r', 's', 't', 'u', 'v', 'w', 'tr', 'cr', 'br', 'fr', 'th', 'dr', 'ch', 'ph', 'wr', 'st', 'sp', 'sw', 'pr', 'sl', 'cl'];\n\n    const num_vowels = vowels.length;\n    const num_cons = cons.length;\n    let password = '';\n\n    for (let i = 0; i < length; i++) {\n        password += cons[Math.floor(secureRandom.random() * num_cons)] + vowels[Math.floor(secureRandom.random() * num_vowels)];\n    }\n\n    return password.substr(0, length);\n};\n\nexport const formatLargeDuration = seconds => {\n    if (seconds < 3.154e+7) {\n        return formatDistance(new Date(0), new Date(seconds * 1000))\n    }\n    if (seconds > 4.4e+17) {\n        return 'longer than the age of the Universe'\n    }\n    return formatNumber.format(seconds / 3.154e+7) + ' years';\n};","import {baseApi} from \"../../app/network-core/baseApi\";\n\n\n\nconst passwordToolsApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        hibpLookup: build.mutation({\n            query: hash => ({\n                url: 'passwords/lookup/',\n                params: {hash}\n            })\n        })\n    })\n})\n\nexport const {useHibpLookupMutation} = passwordToolsApi","import {useCallback, useEffect, useState} from \"react\";\nimport {\n    Button,\n    Checkbox,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    FormControlLabel,\n    FormGroup,\n    IconButton,\n    Slider,\n    Snackbar,\n    TextField,\n    Tooltip,\n    Typography\n} from \"@material-ui/core\";\nimport {formatLargeDuration, generatePassword, generateUsername, getEntropy, getSha1Hash} from \"./passwordUtil\";\nimport styled from 'styled-components'\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport \"@fontsource/jetbrains-mono\"\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport {Alert} from \"@material-ui/lab\";\nimport {debounce} from 'lodash'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport {useHibpLookupMutation} from \"./passwordToolsApi\";\n\nconst Container = styled.div`\n  display: flex;\n  max-width: 600px;\n  flex-direction: column;\n  padding: 10px;\n  ${BACKGROUND_COLOR};\n`;\n\nconst StyledTextField = styled(TextField)`\n  .MuiInputBase-input {\n    font-family: \"JetBrains Mono\", monospace\n  }\n\n  margin: 10px 0;\n`;\n\nconst TextFieldContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  margin-top: 14px;\n`;\n\nconst OptionsFormGroup = styled(FormGroup)`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PasswordDetailGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  justify-items: start;\n  gap: 10px 10px;\n  align-items: center;\n  margin: 5px 0 15px;\n`;\n\nconst GreenCheck = styled(CheckIcon)`\n  color: chartreuse;\n  margin-right: 10px;\n`;\n\nconst GreyCross = styled(ClearIcon)`\n  color: grey;\n  margin-right: 10px;\n`;\n\n\nconst formatNumber = new Intl.NumberFormat(undefined, {maximumFractionDigits: 0});\nconst formatDecimal = new Intl.NumberFormat(undefined, {maximumFractionDigits: 2});\n\nconst DEFAULT_USERNAME_LENGTH = 10;\nconst DEFAULT_PASSWORD_LENGTH = 24;\n\nexport const PasswordTools = () => {\n    const [lookupHibp, {isLoading, data}] = useHibpLookupMutation()\n    const {count: hashCount} = data ?? {}\n\n    const [settings, setSettings] = useState({\n        dialogOpen: false,\n        dialogType: null,\n        passwordSettings: {\n            length: DEFAULT_PASSWORD_LENGTH,\n            digits: true,\n            lower: true,\n            upper: true,\n            symbols: true\n        },\n        usernameSettings: {\n            length: DEFAULT_USERNAME_LENGTH\n        }\n    });\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [entropy, setEntropy] = useState({});\n\n    let secondsToBruteforce = (2 ** entropy.totalEntropy / (200 * 10 ** 18));\n\n    useEffect(() => {\n        if (!password) return;\n\n        let generatedPassword = generatePassword(settings.passwordSettings);\n        setPassword(generatedPassword);\n        setEntropy(getEntropy(generatedPassword))\n        // eslint-disable-next-line\n    }, [settings.passwordSettings]);\n\n    useEffect(() => {\n        setUsername(generateUsername(settings.usernameSettings))\n    }, [settings.usernameSettings]);\n\n    // eslint-disable-next-line\n    const checkHibp = useCallback(debounce(\n        passwordStr =>\n            getSha1Hash(passwordStr)\n                .then(lookupHibp), 500), []);\n\n    const copyToClipboard = text => navigator.clipboard.writeText(text)\n        .then(() => {\n            if (snackbarOpen) {\n                setSnackbarOpen(false);\n                setTimeout(() => setSnackbarOpen(true), 100)\n            } else\n                setSnackbarOpen(true);\n        });\n\n    const onPasswordChange = text => {\n        setPassword(text);\n        checkHibp(text);\n        setEntropy(getEntropy(text))\n    };\n\n    const closeSettings = () => setSettings(current => ({...current, dialogOpen: false}));\n\n    return <>\n        <Dialog open={settings.dialogOpen} onClose={closeSettings}>\n            <DialogTitle\n                style={{zIndex: 1}}>{settings.dialogType === 'username' ? 'Username' : 'Password'} Options</DialogTitle>\n            <DialogContent>\n                {settings.dialogType === 'username' && <>\n                    Length: {settings.usernameSettings.length}\n                    <Slider value={settings.usernameSettings.length}\n                            step={1}\n                            min={6}\n                            max={24}\n                            onChange={(e, value) =>\n                                setSettings(current => ({\n                                    ...current,\n                                    usernameSettings: {\n                                        length: value\n                                    }\n                                }))}/>\n                </>}\n                {settings.dialogType === 'password' && <>\n                    Length: {settings.passwordSettings.length}\n                    <Slider value={settings.passwordSettings.length}\n                            step={1}\n                            min={6}\n                            max={64}\n                            onChange={(e, value) =>\n                                setSettings(current => ({\n                                    ...current,\n                                    passwordSettings: {\n                                        ...current.passwordSettings,\n                                        length: value\n                                    }\n                                }))}/>\n                    <FormControl>\n                        <OptionsFormGroup>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.lower}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         lower: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'a-z'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.upper}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         upper: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'A-Z'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.digits}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         digits: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'0-9'}/>\n                            <FormControlLabel control={<Checkbox checked={settings.passwordSettings.symbols}\n                                                                 onChange={e => setSettings(current => ({\n                                                                     ...current,\n                                                                     passwordSettings: {\n                                                                         ...current.passwordSettings,\n                                                                         symbols: e.target.checked\n                                                                     }\n                                                                 }))}/>}\n                                              label={'!@#$%^&*'}/>\n                        </OptionsFormGroup>\n                    </FormControl>\n                </>}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeSettings}>Close</Button>\n            </DialogActions>\n        </Dialog>\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={snackbarOpen}\n            autoHideDuration={3000}\n            onClose={() => setSnackbarOpen(false)}>\n            <Alert severity=\"success\" variant={'filled'}>Copied</Alert>\n        </Snackbar>\n        <Container>\n            <TextFieldContainer>\n                <StyledTextField\n                    variant={'outlined'}\n                    label={'Random Username'}\n                    value={username}\n                    fullWidth\n                    onChange={e => setUsername(e.target.value)}\n                    InputProps={{\n                        endAdornment:\n                            <>\n                                <IconButton onClick={() => copyToClipboard(username)}>\n                                    <FileCopyIcon/>\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => setUsername(generateUsername(settings.usernameSettings))}>\n                                    <ReplayIcon/>\n                                </IconButton>\n                            </>\n                    }}\n                />\n                <StyledIconButton onClick={() => setSettings(current => ({\n                    ...current,\n                    dialogOpen: true,\n                    dialogType: 'username'\n                }))}><SettingsIcon/></StyledIconButton>\n            </TextFieldContainer>\n            <TextFieldContainer>\n                <StyledTextField\n                    variant={'outlined'}\n                    label={'Type a password'}\n                    value={password}\n                    fullWidth\n                    error={!isLoading && Boolean(hashCount)}\n                    helperText={isLoading ? 'Checking...' :\n                        password === '' ? 'Type a password to check, or generate one' :\n                            hashCount > 0 ? `Password cracked ${formatNumber.format(hashCount)} times` :\n                                'Password has not been cracked'}\n                    onChange={e => onPasswordChange(e.target.value)}\n                    InputProps={{\n                        endAdornment:\n                            <>\n                                <IconButton onClick={() => copyToClipboard(password)}>\n                                    <FileCopyIcon/>\n                                </IconButton>\n                                <IconButton\n                                    onClick={() => onPasswordChange(generatePassword(settings.passwordSettings))}>\n                                    <ReplayIcon/>\n                                </IconButton>\n                            </>\n                    }}\n                />\n                <StyledIconButton onClick={() => setSettings(current => ({\n                    ...current,\n                    dialogOpen: true,\n                    dialogType: 'password'\n                }))}><SettingsIcon/></StyledIconButton>\n            </TextFieldContainer>\n            <PasswordDetailGrid>\n                <Typography variant={'body1'} color={entropy.hasLowerCase ? 'textPrimary' : 'textSecondary'}>Lowercase\n                    letters </Typography>\n                {entropy.hasLowerCase ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'} color={entropy.hasUpperCase ? 'textPrimary' : 'textSecondary'}>Uppercase\n                    letters</Typography>\n                {entropy.hasUpperCase ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'}\n                            color={entropy.hasDigits ? 'textPrimary' : 'textSecondary'}>Digits</Typography>\n                {entropy.hasDigits ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'} color={entropy.hasSymbols ? 'textPrimary' : 'textSecondary'}>Symbols\n                    (@#...)</Typography>\n                {entropy.hasSymbols ? <GreenCheck/> : <GreyCross/>}\n\n                <Typography variant={'body1'}>Entropy\n                    <Tooltip\n                        arrow\n                        enterTouchDelay={100}\n                        interactive\n                        title={'A measure of how secure the password is. 128 bits is recommended for most people.'}>\n                        <IconButton tabIndex={-1}>\n                            <InfoOutlinedIcon/>\n                        </IconButton>\n                    </Tooltip>\n                </Typography>\n                <Typography\n                    variant={'body1'}>{entropy.totalEntropy && (formatDecimal.format(entropy.totalEntropy) + ' bits')}</Typography>\n\n                <Typography variant={'body1'}>Time to crack\n                    <Tooltip\n                        arrow\n                        enterTouchDelay={100}\n                        interactive\n                        title={'Based on the current Bitcoin hashrate (200 EH/s)'}>\n                        <IconButton tabIndex={-1}>\n                            <InfoOutlinedIcon/>\n                        </IconButton>\n                    </Tooltip>\n                </Typography>\n                <Typography\n                    variant={'body1'}>{Number.isFinite(secondsToBruteforce) && formatLargeDuration(secondsToBruteforce)}</Typography>\n            </PasswordDetailGrid>\n\n\n        </Container>\n\n    </>\n};","import {baseApi} from \"../../app/network-core/baseApi\";\n\n\nconst homeAutomationApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        sendCommand: build.mutation({\n            query: command => ({\n                url: 'home-automation/send',\n                method: 'POST',\n                body: {command}\n            })\n        })\n    })\n})\n\nexport const {useSendCommandMutation} = homeAutomationApi","import {Button, FormControl, InputLabel, MenuItem, Select, Snackbar} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React, {useState} from \"react\";\nimport styled from 'styled-components'\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport {useSendCommandMutation} from \"./homeAutomationApi\";\n\nconst StyledContainer = styled.form`\n  display: flex;\n  max-width: 600px;\n  height: 200px;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px;\n  ${BACKGROUND_COLOR};\n`;\n\nexport const COMMANDS = {\n    gate_toggle: 'Gate: Toggle',\n    ac_off: 'AC: Off',\n    ac_on_24: 'AC: On @ 24°C',\n    ac_on_25: 'AC: On @ 25°C',\n    ceiling_fan_on: 'Ceiling Fan: On',\n    ceiling_fan_off: 'Ceiling Fan: Off',\n    dyson_fan_on: 'Dyson Fan: On',\n    dyson_fan_off: 'Dyson Fan: Off',\n};\n\nexport const HomeAutomation = () => {\n    const [sendCommand] = useSendCommandMutation()\n\n    const [snackbar, setSnackbar] = useState();\n    const [disabled, setDisabled] = useState(false);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setDisabled(true);\n        setTimeout(() => setDisabled(false), 2000);\n        sendCommand(e.target.command.value).unwrap().then(() => setSnackbar(true));\n    };\n\n    return <>\n        <Snackbar\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\n            open={snackbar}\n            onClose={() => setSnackbar(false)}\n            autoHideDuration={3000}>\n            <Alert\n                variant={'filled'}\n                severity={'success'}>\n                Command sent\n            </Alert>\n        </Snackbar>\n        <StyledContainer\n            onSubmit={handleSubmit}>\n\n            <FormControl>\n                <InputLabel>Command</InputLabel>\n                <Select\n                    defaultValue={Object.entries(COMMANDS)[0][0]}\n                    name={'command'}\n                    required>\n                    {Object.entries(COMMANDS).map(([k, v]) => <MenuItem value={k} key={k}>{v}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <Button\n                disabled={disabled}\n                variant={'contained'}\n                color={'primary'}\n                type={'submit'}>\n                Send command\n            </Button>\n        </StyledContainer>\n    </>\n};","import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport {IconButton, InputAdornment, Tooltip} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\n/*Textfield with clear and info buttons*/\nexport const TextFieldClearableInfo = ({info, onChange, ...props}) => {\n\n    return <TextField\n        {...props}\n        onChange={onChange}\n        InputProps={{\n            ...props.InputProps,\n            endAdornment:\n                <InputAdornment position={'end'}>\n                    {props.value &&\n                    <ClearIcon style={{cursor: 'pointer'}} onClick={() => onChange('')}/>}\n                    {info && <InputAdornment position={'end'}>\n                        <Tooltip\n                            arrow\n                            enterTouchDelay={100}\n                            interactive\n                            title={info}>\n                            <IconButton tabIndex={-1}>\n                                <InfoOutlinedIcon/>\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>}\n                    {props.InputProps?.endAdornment}\n                </InputAdornment>\n        }}\n    />\n};","import {TextFieldClearableInfo} from \"../../shared/components/textFieldClearableInfo\";\nimport Cleave from \"cleave.js/react\";\nimport React from \"react\";\n\nconst CleaveTextField = ({inputRef, ...props}) =>\n    <Cleave\n        htmlRef={inputRef}\n        {...props}\n    />;\n\n/*Textfield with clear and info buttons, and currency formatting\n* Permanently shrunk*/\nexport const TextFieldClearableInfoCurrency = ({info, onChange, InputProps, ...props}) => {\n\n    return <TextFieldClearableInfo\n        {...props}\n        info={info}\n        InputLabelProps={{ shrink: true }}\n        InputProps={{\n            ...InputProps,\n            inputComponent: CleaveTextField,\n            inputProps: {\n                options: {\n                    numeral: true,\n                    prefix: '$',\n                    rawValueTrimPrefix: true,\n                }\n            },\n            onChange: e => onChange(e.target.rawValue)\n        }}\n        onChange={onChange}\n    />\n};","import {useWatch} from \"react-hook-form\";\nimport React from \"react\";\n\n/*Isolate rendering of an array of fields (convenience)*/\nexport const FieldUseWatch = ({control, fieldsToWatch, Component}) => {\n    const fields = useWatch({\n        control,\n        name: fieldsToWatch,\n    });\n    return <Component fields={fields}/>\n};","import {baseApi} from \"../../app/network-core/baseApi\";\nimport {baseQuery} from \"../../app/network-core/baseQuery\";\n\n/*API Key from dnsproxy@gmail.com*/\nconst ENDPOINT = 'https://finnhub.io/api/v1/quote?symbol=SPY&token=c10sd6n48v6pp7chu95g';\n\nconst optionHedgeCalculatorApi = baseApi.injectEndpoints({\n    endpoints: build => ({\n        getSpyPrice: build.query({\n            queryFn: (arg, api) => baseQuery({\n                baseUrl: ENDPOINT,\n            })(arg, api),\n            transformResponse: resp => resp.c\n        })\n    })\n})\n\nexport const {useGetSpyPriceQuery} = optionHedgeCalculatorApi","import {Typography} from \"@material-ui/core\";\nimport React, {useEffect, useState} from \"react\";\nimport {yupResolver} from '@hookform/resolvers/yup'\nimport styled from 'styled-components'\nimport {Controller, useForm} from \"react-hook-form\";\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\nimport * as yup from 'yup'\nimport {trim} from \"lodash\";\nimport {TextFieldClearableInfo} from \"../../shared/components/textFieldClearableInfo\";\nimport {TextFieldRefreshLoading} from \"./textFieldRefreshLoading\";\nimport {formatDistanceToNowStrict} from 'date-fns'\nimport {TextFieldClearableInfoCurrency} from \"./TextFieldClearableInfoCurrency\";\nimport {FieldUseWatch} from \"./FieldUseWatch\";\nimport {useGetSpyPriceQuery} from \"./optionHedgeCalculatorApi\";\n\nconst FIELDS = {\n    portfolioValue: 'portfolioValue',\n    spyPrice: 'spyPrice',\n    hedgeRatio: 'hedgeRatio',\n    delta: 'delta',\n};\n\nconst emptyStringToUndefined = (val, origVal) => trim(origVal) === '' ? undefined : val;\n\nconst schema = yup.object({\n    portfolioValue: yup.number().positive().required().transform(emptyStringToUndefined),\n    spyPrice: yup.number().positive().required().transform(emptyStringToUndefined),\n    hedgeRatio: yup.number().positive().max(1).required().transform(emptyStringToUndefined),\n    delta: yup.number().positive().max(1).required().transform(emptyStringToUndefined)\n});\n\nconst Container = styled.div`\n  ${BACKGROUND_COLOR};\n  max-width: 600px;\n`;\n\nconst StyledTypography = styled(Typography)`\n  &.MuiTypography-root {\n    white-space: pre-line;\n  }\n`;\n\nconst StyledTextFieldClearableInfo = styled(TextFieldClearableInfo)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst StyledTextFieldRefresh = styled(TextFieldRefreshLoading)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst StyledTextFieldClearableInfoCurrency = styled(TextFieldClearableInfoCurrency)`\n  margin: 10px;\n  width: min(300px, calc(100vw - 20px));\n`;\n\nconst explanatoryText = `Hedge instrument: SPY puts\nNOTE: This calculates a 1:1 put spread, not the 1:1.1 as described in the 'Options Edge' book\n\nNote: As I am only hedging CSPX and IWDA, beta for my portfolio is 1\nTake beta of IWDA to be 0.89 for now (see 'Finance and Investing' doc)\nBeta of DPYA = IWDP = 0.99\n5yr beta of ISAC = 1\n\nRehedge in first month ONLY if SPY has moved > 3% from the previous long put strike\n`;\n\nconst formatNoDecimals = new Intl.NumberFormat(undefined, {maximumFractionDigits: 0});\nconst formatDecimals = new Intl.NumberFormat(undefined, {maximumFractionDigits: 1});\nconst formatDollars = new Intl.NumberFormat(undefined, {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'symbol'\n});\n\nexport const OptionHedgeCalculator = () => {\n    const {refetch, isFetching, data, fulfilledTimeStamp} = useGetSpyPriceQuery()\n\n    const [tooltipText, setTooltipText] = useState('');\n\n    const {\n        control,\n        setValue,\n    } = useForm({\n        mode: 'onTouched',\n        resolver: yupResolver(schema),\n        defaultValues: {\n            [FIELDS.portfolioValue]: '',\n            [FIELDS.spyPrice]: '',\n            [FIELDS.hedgeRatio]: 0.47,\n            [FIELDS.delta]: '',\n        }\n    });\n\n    useEffect(() => void data && setValue(FIELDS.spyPrice, data), [data, setValue])\n\n\n    return <Container>\n        <StyledTypography variant={'body1'}>{explanatoryText}</StyledTypography>\n\n        <Controller\n            name={FIELDS.portfolioValue}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfoCurrency\n                    {...field}\n                    error={Boolean(error)}\n                    helperText={error?.message}\n                    info={'Take beta of IWDA to be 0.89 and exclude bonds e.g. AGGU'}\n                    label={'Beta-weighted Portfolio Value (USD)'}\n                    variant={'outlined'}\n                />}/>\n\n        <Controller\n            name={FIELDS.spyPrice}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldRefresh\n                    {...field}\n                    error={Boolean(error)}\n                    helperText={error?.message}\n                    label={'SPY Price'}\n                    loading={isFetching}\n                    onOpen={() => setTooltipText(fulfilledTimeStamp ? 'Last updated ' + formatDistanceToNowStrict(new Date(fulfilledTimeStamp), {addSuffix: true}) : '')}\n                    onRefresh={refetch}\n                    tooltipText={tooltipText}\n                    variant={'outlined'}/>}/>\n\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.spyPrice]}\n            Component={({fields: [spyPrice]}) => <Typography variant={'body1'}>\n                Strike price for short 8.6% delta OTM, 90-day\n                put: {formatNoDecimals.format(0.914 * spyPrice)}\n            </Typography>}/>\n\n        <Controller\n            name={FIELDS.hedgeRatio}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfo\n                    {...field}\n                    error={Boolean(error)}\n                    info={'% of portfolio value to hedge using put options (via delta equivalent amount)'}\n                    helperText={error?.message}\n                    label={'Hedge Ratio'}\n                    variant={'outlined'}/>}/>\n\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.hedgeRatio, FIELDS.portfolioValue]}\n            Component={({fields: [hedgeRatio, portfolioValue]}) =>\n                <Typography variant={'body1'}>\n                    Notional amount to hedge: {formatDollars.format(portfolioValue * hedgeRatio)}\n                </Typography>}/>\n\n        <Controller\n            name={FIELDS.delta}\n            control={control}\n            render={({\n                         field: {ref, ...field},\n                         fieldState: {error}\n                     }) =>\n                <StyledTextFieldClearableInfo\n                    {...field}\n                    error={Boolean(error)}\n                    info={'Delta of each spread with OTM 8.6% put sold, per option e.g. 0.250'}\n                    label={'Delta'}\n                    helperText={error?.message}\n                    variant={'outlined'}/>}/>\n\n        <FieldUseWatch\n            control={control}\n            fieldsToWatch={[FIELDS.portfolioValue, FIELDS.hedgeRatio, FIELDS.delta, FIELDS.spyPrice]}\n            Component={({fields: [portfolioValue, hedgeRatio, delta, spyPrice]}) =>\n                <Typography variant={'body1'}>\n                    Number of spreads required (i.e. standard option contracts):\n                    {formatDecimals.format(portfolioValue * hedgeRatio / (delta * spyPrice * 100))}\n                </Typography>}\n        />\n\n    </Container>\n};\n\n/*Testing case:\n*\n* Beta-weighted portfolio value in USD: 1000000\n* Current price of SPY: 300\n* OTM Put Strike to sell: 274.2\n* Hedge ratio: 0.47\n* Notional amount: 470000.0\n* Delta of 8.6% OTM put spread: 0.21\n* Number of spreads required (i.e. option contracts): 74.60317460317461\n* */","import TextField from \"@material-ui/core/TextField\";\nimport {CircularProgress, IconButton, InputAdornment, Tooltip} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport CachedIcon from '@material-ui/icons/Cached';\nimport {noop} from \"../../shared/util\";\nimport React from \"react\";\n\nexport const TextFieldRefreshLoading = ({onChange, onRefresh, loading, tooltipText = '', onOpen = noop, ...props}) => {\n\n    return <TextField\n        {...props}\n        onChange={onChange}\n        InputProps={{\n            ...props.InputProps,\n            endAdornment:\n                <InputAdornment position={'end'}>\n                    {props.value &&\n                    <ClearIcon style={{cursor: 'pointer'}} onClick={() => onChange('')}/>}\n                    <InputAdornment position={'end'}>\n                        <Tooltip\n                            onOpen={onOpen}\n                            arrow\n                            enterTouchDelay={100}\n                            interactive\n                            title={tooltipText}>\n                            <IconButton onClick={onRefresh}>\n                                {loading ? <CircularProgress size={20}/> : <CachedIcon/>}\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>\n                    {props.InputProps?.endAdornment}\n                </InputAdornment>\n        }}\n    />\n};","// /*Add new modules here*/\n// import {Lists} from \"../modules/Lists/Lists\";\n// import {Literature} from \"../modules/Literature/Literature\";\n// import {Account} from \"../modules/Account/Account\";\n// import {HomeAutomation} from \"../modules/HomeAutomation/HomeAutomation\";\n// import {DVR} from \"../modules/Dvr/DVR\";\n// import {OptionHedgeCalculator} from \"../modules/OptionHedgeCalculator/OptionHedgeCalculator\";\nimport {Testing} from \"../../modules/Testing/Testing\";\nimport {PasswordTools} from \"../../modules/PasswordTools/PasswordTools\";\nimport {HomeAutomation} from \"../../modules/HomeAutomation/HomeAutomation\";\nimport {OptionHedgeCalculator} from \"../../modules/OptionHedgeCalculator/OptionHedgeCalculator\";\n\nexport const MODULES = {\n    // LISTS: {\n    //     menuName: 'Lists',\n    //     onlySuperUser: false,\n    //     element: Lists\n    // },\n    // LITERATURE: {\n    //     menuName: 'Literature',\n    //     onlySuperUser: false,\n    //     element: Literature\n    // },\n    // ACCOUNT: {\n    //     menuName: 'Account',\n    //     onlySuperUser: false,\n    //     element: Account\n    // },\n    PASSWORDS: {\n        menuName: 'Password Tools',\n        onlySuperUser: false,\n        element: PasswordTools,\n    },\n    HOME_AUTOMATION: {\n        menuName: 'Home Automation',\n        onlySuperUser: true,\n        element: HomeAutomation\n    },\n    // DVR: {\n    //     menuName: 'DVR',\n    //     onlySuperUser: true,\n    //     element: DVR\n    // },\n    OPTION_HEDGE_CALCULATOR: {\n        menuName: 'Option Hedge Calculator',\n        onlySuperUser: false,\n        element: OptionHedgeCalculator\n    },\n    TEST: {\n        menuName: 'Testing',\n        onlySuperUser: true,\n        element: Testing\n    }\n}","import styled from \"styled-components\";\nimport {BackgroundScreenRounded} from \"../../shared/components/backgroundScreen\";\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectLoginStatus, setCurrentModule} from \"../appSlice\";\nimport {MODULES} from \"./modules\";\nimport {Button} from \"@material-ui/core\";\nimport React from 'react'\n\nconst GDOCS_ATTRACTIONS_URL = 'https://docs.google.com/document/d/1MS6oLLnTWWhdS_FEr1vudNfsnGBMT2V1GtrmHzDd6s0/edit#';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  margin: 0 auto;\n  max-width: 300px;\n`;\n\nconst InnerContainer = styled(BackgroundScreenRounded)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledButton = styled(Button)({\n    margin: '10px',\n});\n\n/*Also handles persisting of CURRENT_MODULE in localstorage and updates redux store accordingly*/\nexport const ModuleSelect = () => {\n\n    const dispatch = useDispatch()\n    const {isSuperUser} = useSelector(selectLoginStatus)\n\n    const modules = Object.entries(MODULES)\n        .filter(([_, {onlySuperUser}]) => isSuperUser || !onlySuperUser)\n        .map(([id, {menuName}]) =>\n            <StyledButton\n                variant={'outlined'}\n                color={'primary'}\n                key={id}\n                onClick={() => dispatch(setCurrentModule({id}))}>\n                {menuName}\n            </StyledButton>\n        )\n\n    /*Todo get this URL from the server in future*/\n    modules.push(isSuperUser && <StyledButton\n        variant={'outlined'}\n        color={'primary'}\n        key={'attractions'}\n        onClick={() => window.open(GDOCS_ATTRACTIONS_URL, '_blank', 'noopener,noreferrer')}\n        endIcon={<CallMadeIcon/>}>\n        Attractions and Food\n    </StyledButton>)\n\n    return <FlexContainer>\n        <InnerContainer>\n            {modules}\n        </InnerContainer>\n    </FlexContainer>\n};","import {OverlayScrollbarOptions} from \"../theme\";\nimport {CircularProgress, Drawer, List, ListItem, ListItemIcon, ListItemText, useMediaQuery} from \"@material-ui/core\";\nimport {selectCurrentModule, setCurrentModule} from \"../appSlice\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport {OverlayScrollbarsComponent} from \"overlayscrollbars-react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useLogoutMutation} from \"../auth/authApi\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport {BACKGROUND_COLOR} from \"../../shared/components/backgroundScreen\";\n\n\nconst OverlayScrollbarsWithMaxWidth = styled(OverlayScrollbarsComponent)`\n  width: ${({$width})=>$width}px;\n  max-width: 80vw;\n`\n\nconst AppNameDiv = styled.div`\n  font-family: 'Starcraft', serif;\n  font-size: 20px;\n  margin: 0 auto;\n  text-align: center;\n  cursor: default;\n`;\n\n\nconst TransparentDrawer = styled(Drawer)`\n  .MuiDrawer-paper {\n    ${({$transparent}) => $transparent && BACKGROUND_COLOR};\n  }\n`;\n\nexport const AppBarDrawer = ({drawerOpen, drawerWidth, setDrawerOpen, sidebarName, children}) => {\n\n    const dispatch = useDispatch()\n    const {id} = useSelector(selectCurrentModule)\n\n    const [logout, {isLoading}] = useLogoutMutation()\n\n    const theme = useTheme();\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const closeAppBar = () => setDrawerOpen(false)\n\n    return <TransparentDrawer\n        $transparent={!mobile}\n        onClose={closeAppBar}\n        open={!mobile || drawerOpen}\n        variant={mobile ? 'temporary' : 'permanent'}>\n        <OverlayScrollbarsWithMaxWidth\n            $width={drawerWidth}\n            options={OverlayScrollbarOptions}\n            className={'os-host-flexbox'}>\n            <List onClick={closeAppBar}>\n                <ListItem>\n                    <AppNameDiv>{sidebarName}</AppNameDiv>\n                </ListItem>\n                {id && <ListItem button onClick={() => dispatch(setCurrentModule())}>\n                    <ListItemIcon>\n                        <ArrowBackIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={'Back to Apps'}/>\n                </ListItem>}\n                {children}\n                <ListItem\n                    button\n                    onClick={e => {\n                        e.stopPropagation()\n                        logout()\n                    }}>\n                    <ListItemIcon>\n                        <MeetingRoomIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary={'Logout'}/>\n                    {isLoading && <CircularProgress size={20}/>}\n                </ListItem>\n            </List>\n        </OverlayScrollbarsWithMaxWidth>\n    </TransparentDrawer>;\n\n}","import {AppBar as MuiAppBar, IconButton, Slide, Toolbar, Typography, useScrollTrigger,} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {styled as muiStyled} from \"@material-ui/core/styles\"\nimport styled from 'styled-components'\nimport {NotificationMenu} from \"../notifications/NotificationMenu\";\nimport {useSelector} from \"react-redux\";\nimport {selectCurrentModule} from \"../appSlice\";\nimport React, {useLayoutEffect, useState} from \"react\";\nimport {ModuleSelect} from \"../modules/ModuleSelect\";\nimport {MODULES} from \"../modules/modules\";\nimport {AppBarDrawer} from \"./AppBarDrawer\";\n\nexport const drawerWidth = 300;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst TransparentAppBar = muiStyled(MuiAppBar)(({theme}) => ({\n    [theme.breakpoints.up('md')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n\n    '@supports (backdrop-filter: blur(10px))': {\n        'backdrop-filter': 'blur(10px)',\n    },\n\n    background: 'rgba(0,0,0,0.6)',\n\n}));\n\nconst DrawerContainer = muiStyled('div')(({theme}) => ({\n    [theme.breakpoints.up('md')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n\n}));\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  overflow-y: scroll;\n`;\n\nconst ContentDiv = styled.div`\n  height: calc(100% - 48px); //48px is the height of Toolbar (variant=dense)\n`;\n\n\nconst StyledIconButton = muiStyled(IconButton)(({theme}) => ({\n    [theme.breakpoints.up('md')]: {\n        display: 'none',\n    }\n}));\n\n\n/*To prevent AppBar from automatically closing on ListItem click, use\n* e.stopPropagation().*/\nexport const AppBar = () => {\n\n    const {id} = useSelector(selectCurrentModule)\n\n    const trigger = useScrollTrigger({threshold: 50});\n\n    /*Hooks are passed to modules*/\n    const [drawerOpen, setDrawerOpen] = useState(false)\n    const [drawerContent, setDrawerContent] = useState(null)\n    const [sidebarName, setSidebarName] = useState('')\n    const [titleContent, setTitleContent] = useState(null)\n\n    const appBarProps = {setDrawerContent, setTitleContent, setSidebarName, setDrawerOpen}\n\n    /*useLayoutEffect is critical here, to ensure that this runs BEFORE any\n    * useEffect(s) in the children that might call setTitleContent etc.*/\n    useLayoutEffect(() => {\n        if (!id) {\n            setSidebarName('Modules')\n            setTitleContent(<Typography variant={\"h6\"}>Modules</Typography>)\n            setDrawerContent(null)\n        } else {\n            setTitleContent(<Typography variant={\"h6\"}>{MODULES[id].menuName}</Typography>)\n            setSidebarName(MODULES[id].menuName)\n        }\n\n    }, [id, setDrawerContent, setSidebarName, setTitleContent])\n\n    return <FlexContainer>\n        <Slide direction={'down'} in={!trigger}>\n            <TransparentAppBar\n                position={'fixed'}\n                color={'transparent'}>\n                <Toolbar variant={\"dense\"}>\n                    <StyledIconButton\n                        color={\"inherit\"}\n                        edge={'start'}\n                        onClick={() => setDrawerOpen(true)}>\n                        <MenuIcon/>\n                    </StyledIconButton>\n                    {titleContent}\n                    <div style={{flex: 1}}/>\n                    <NotificationMenu/>\n                </Toolbar>\n            </TransparentAppBar>\n        </Slide>\n\n        <DrawerContainer>\n            <AppBarDrawer\n                drawerOpen={drawerOpen}\n                drawerWidth={drawerWidth}\n                setDrawerOpen={setDrawerOpen}\n                sidebarName={sidebarName}>\n                {drawerContent}\n            </AppBarDrawer>\n        </DrawerContainer>\n\n\n        <ContentContainer>\n            <Toolbar variant={\"dense\"}/>\n            <ContentDiv>\n                {id ?\n                    React.createElement(MODULES[id].element, appBarProps) :\n                    <ModuleSelect {...appBarProps}/>}\n            </ContentDiv>\n        </ContentContainer>\n\n    </FlexContainer>\n};","import React from \"react\";\nimport {Login} from \"./auth/Login\";\nimport {useSelector} from \"react-redux\";\nimport {selectLoginStatus} from \"./appSlice\";\nimport {RefreshSession} from \"./refresh-session/RefreshSession\";\nimport {Hmail} from \"../modules/Hmail/Hmail\";\nimport {AppBar} from \"./app-bar/AppBar\";\n\n/*Checks for login then displays appropriate component*/\nexport const App = () => {\n\n    const {loggedIn, isSuperUser} = useSelector(selectLoginStatus)\n\n    return loggedIn ?\n        <>\n            {isSuperUser && <Hmail/>}\n            <RefreshSession/>\n            <AppBar/>\n        </> :\n        <Login/>;\n};\n","import {isRejected, isRejectedWithValue} from \"@reduxjs/toolkit\";\nimport {setNetworkError} from \"../appSlice\";\n\n/*Show network errors for rejected thunk actions*/\nexport const networkErrorMiddleware = ({dispatch}) => next => action => {\n\n    if (isRejectedWithValue(action)) {\n        /*Payload has been formatted by baseQuery.\n        * Reducer will filter out 401/403s while not logged in*/\n        dispatch(setNetworkError(action.payload));\n\n    } else if (isRejected(action) && !action.meta.condition) {\n        /*Ignore thunks cancelled due to condition being true*/\n        console.warn(`Rejected thunk:`, action)\n    }\n\n    return next(action)\n}","import {configureStore} from \"@reduxjs/toolkit\";\nimport {appSlice} from \"./appSlice\";\nimport {baseApi} from \"./network-core/baseApi\";\nimport {networkErrorMiddleware} from \"./network-error/networkErrorMiddleware\";\nimport {setupListeners} from \"@reduxjs/toolkit/query\";\nimport {notificationSlice} from \"./notifications/notificationSlice\";\n\nexport const store =  configureStore({\n    reducer: {\n        app: appSlice.reducer,\n        notifications: notificationSlice.reducer,\n        [baseApi.reducerPath]: baseApi.reducer\n    },\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware()\n            .concat(baseApi.middleware)\n            .concat(networkErrorMiddleware)\n})\n\nsetupListeners(store.dispatch)","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    Snackbar\n} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport React, {useState} from \"react\";\nimport {styled as muiStyled} from \"@material-ui/core/styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst StyledDialog = muiStyled(Dialog)(({theme}) => ({\n    /*As zIndex is set inline in Dialog, style must be overridden with !important*/\n    zIndex: `${theme.zIndex.snackbar + 1} !important`,\n}));\n\n/* Display snackbar with dialog.\n* Omit onClose to prevent user from dismissing alert\n* Omit dialogTitle & dialogText to disable dialog*/\nexport const AlertSnackbarWithDialog = ({\n                                            severity = 'error',\n                                            onClose,\n                                            snackbarText,\n                                            dialogTitle,\n                                            dialogContent,\n                                            actions\n                                        }) => {\n\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const dialogEnabled = Boolean(dialogTitle && dialogContent);\n\n    return <>\n        {dialogEnabled && <StyledDialog\n            open={dialogOpen}\n            onClose={() => setDialogOpen(false)}\n            scroll={'body'}>\n\n            <DialogTitle>{dialogTitle}</DialogTitle>\n\n            <DialogContent>\n                <DialogContentText component={'div'} style={{whiteSpace: 'pre-wrap'}}>\n                    {dialogContent}\n                </DialogContentText>\n            </DialogContent>\n\n\n            <DialogActions>\n                <Button\n                    variant={'text'}\n                    color={'primary'}\n                    onClick={() => setDialogOpen(false)}\n                >Close\n                </Button>\n            </DialogActions>\n\n        </StyledDialog>}\n        <Snackbar open>\n            <Alert\n                severity={severity}\n                action={<>\n                    {dialogEnabled && <Button\n                        variant={'text'}\n                        color={'primary'}\n                        onClick={() => setDialogOpen(true)}>\n                        Details\n                    </Button>}\n                    {actions}\n                    {onClose && <IconButton\n                        size=\"small\"\n                        color=\"inherit\"\n                        onClick={onClose}>\n                        <CloseIcon fontSize=\"small\"/>\n                    </IconButton>}\n                </>}>\n                {snackbarText}\n            </Alert>\n        </Snackbar>\n    </>\n        ;\n};","import {Button} from \"@material-ui/core\";\nimport React from \"react\";\nimport {AlertSnackbarWithDialog} from \"../../shared/components/AlertSnackbarWithDialog\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {clearNetworkError, selectNetworkError} from \"../appSlice\";\nimport {NETWORK_ERROR} from \"../constants\";\n\n/*Displays appropriate snackbars informing users of network state/errors,\n* with remediation options.\n*\n* Accepts both Responses and Errors.*/\nexport const NetworkError = () => {\n\n    const dispatch = useDispatch()\n    const networkError = useSelector(selectNetworkError)\n    if (!networkError) return null\n\n    const {method, url, text, status, type} = networkError\n\n    const message = <>\n        <p>{method}: {url}</p>\n        <p>{text}</p>\n    </>\n\n    switch (type) {\n        case NETWORK_ERROR.FETCH_ERROR:\n            /*Fetch error. Allow user to close snackbar*/\n            return <AlertSnackbarWithDialog\n                dialogTitle={'Fetch Error'}\n                actions={<Button color={'primary'} onClick={() => window.location.reload()}>\n                    Reload\n                </Button>}\n                dialogContent={message}\n                severity={'error'}\n                snackbarText={'A network error has occurred.'}\n                onClose={() => dispatch(clearNetworkError())}/>\n\n        case NETWORK_ERROR.HTTP_ERROR:\n            if ([401, 403].includes(status)) {\n                /*Authentication errors. Don't allow user to close snackbar*/\n                return <AlertSnackbarWithDialog\n                    dialogTitle={'Authentication Error'}\n                    actions={<Button color={'primary'}\n                                     onClick={() => window.location.reload()}>\n                        Login </Button>}\n                    dialogContent={message}\n                    severity={'warning'}\n                    snackbarText={'You are logged out.'}/>;\n\n            } else {\n                /*Other HTTP errors (4xx/5xx). Allow user to close snackbar*/\n                return <AlertSnackbarWithDialog\n                    dialogTitle={`Error ${status}`}\n                    actions={<Button color={'primary'} onClick={() => window.location.reload()}>\n                        Reload\n                    </Button>}\n                    dialogContent={message}\n                    severity={'error'}\n                    snackbarText={'An HTTP error has occurred.'}\n                    onClose={() => dispatch(clearNetworkError())}/>;\n            }\n        default:\n            /*Catch non NetworkError rejectedWithValue thunks*/\n            return <AlertSnackbarWithDialog\n                dialogTitle={`Non NetworkError rejectWithValue thunk`}\n                dialogContent={message}\n                severity={'error'}\n                snackbarText={'A network error has occurred.'}\n                onClose={() => dispatch(clearNetworkError())}/>;\n    }\n};","import ReactDOM from 'react-dom';\nimport React, {StrictMode} from \"react\";\nimport '@fontsource/roboto/300.css'\nimport '@fontsource/roboto/400.css'\nimport '@fontsource/roboto/500.css'\nimport '@fontsource/roboto/700.css'\nimport '@fontsource/source-sans-pro' //For codemirror in MarkdownEditor.js\nimport './shared/static/fonts/starcraft/starcraft.css' //Stylized font for menu\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {LoadServiceWorker} from \"./app/load-service-worker/LoadServiceWorker\";\nimport {ErrorBoundary} from \"./app/error-boundary/ErrorBoundary\";\nimport 'overlayscrollbars/css/OverlayScrollbars.css'\nimport {theme} from \"./app/theme\";\nimport {RandomBackground} from \"./shared/components/randomBackground\";\nimport {App} from \"./app/App\";\nimport {Provider} from 'react-redux'\nimport {store} from './app/store'\nimport {NetworkError} from \"./app/network-error/NetworkError\";\n\n/*Decide whether to run mock service worker for debugging*/\nconst USE_MOCK_SERVICE_WORKER = false;\nif (process.env.NODE_ENV === 'development' && USE_MOCK_SERVICE_WORKER) {\n    const {worker} = require('./test/mocks/browser');\n    worker.start()\n}\n\nReactDOM.render(\n    <StrictMode>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline/>\n            <RandomBackground/>\n            <ErrorBoundary>\n                <Provider store={store}>\n                        <LoadServiceWorker/>\n                        <NetworkError/>\n                        <App/>\n                </Provider>\n            </ErrorBoundary>\n        </MuiThemeProvider>\n    </StrictMode>\n    , document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}